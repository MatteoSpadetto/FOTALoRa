ARM GAS  /tmp/cc26hk0Z.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB133:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
ARM GAS  /tmp/cc26hk0Z.s 			page 2


  32:Src/main.c    **** /* USER CODE END PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  43:Src/main.c    **** UART_HandleTypeDef huart2;
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN PV */
  46:Src/main.c    **** /* USER CODE END PV */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  49:Src/main.c    **** void SystemClock_Config(void);
  50:Src/main.c    **** static void MX_GPIO_Init(void);
  51:Src/main.c    **** static void MX_USART2_UART_Init(void);
  52:Src/main.c    **** /* USER CODE BEGIN PFP */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PFP */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  57:Src/main.c    **** /* USER CODE BEGIN 0 */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END 0 */
  60:Src/main.c    **** 
  61:Src/main.c    **** /**
  62:Src/main.c    ****   * @brief  The application entry point.
  63:Src/main.c    ****   * @retval int
  64:Src/main.c    ****   */
  65:Src/main.c    **** int main(void)
  66:Src/main.c    **** {
  67:Src/main.c    ****   /* USER CODE BEGIN 1 */
  68:Src/main.c    **** 
  69:Src/main.c    ****   /* USER CODE END 1 */
  70:Src/main.c    **** 
  71:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  72:Src/main.c    **** 
  73:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  74:Src/main.c    ****   HAL_Init();
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* USER CODE BEGIN Init */
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* USER CODE END Init */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* Configure the system clock */
  81:Src/main.c    ****   SystemClock_Config();
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE END SysInit */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* Initialize all configured peripherals */
  88:Src/main.c    ****   MX_GPIO_Init();
ARM GAS  /tmp/cc26hk0Z.s 			page 3


  89:Src/main.c    ****   MX_USART2_UART_Init();
  90:Src/main.c    ****   /* USER CODE BEGIN 2 */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE END 2 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* Infinite loop */
  95:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  96:Src/main.c    ****   while (1)
  97:Src/main.c    ****   {
  98:Src/main.c    ****     /* USER CODE END WHILE */
  99:Src/main.c    **** 
 100:Src/main.c    ****     /* USER CODE BEGIN 3 */
 101:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 1);
 102:Src/main.c    ****     HAL_Delay(500);
 103:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 0);
 104:Src/main.c    ****     HAL_Delay(500);
 105:Src/main.c    ****   }
 106:Src/main.c    ****   /* USER CODE END 3 */
 107:Src/main.c    **** }
 108:Src/main.c    **** 
 109:Src/main.c    **** /**
 110:Src/main.c    ****   * @brief System Clock Configuration
 111:Src/main.c    ****   * @retval None
 112:Src/main.c    ****   */
 113:Src/main.c    **** void SystemClock_Config(void)
 114:Src/main.c    **** {
 115:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 116:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 117:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 118:Src/main.c    **** 
 119:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 120:Src/main.c    ****   */
 121:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 122:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 123:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 124:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 125:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 126:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 127:Src/main.c    ****   {
 128:Src/main.c    ****     Error_Handler();
 129:Src/main.c    ****   }
 130:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 131:Src/main.c    ****   */
 132:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 133:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 134:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 135:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 136:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 137:Src/main.c    **** 
 138:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 139:Src/main.c    ****   {
 140:Src/main.c    ****     Error_Handler();
 141:Src/main.c    ****   }
 142:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 143:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 144:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 145:Src/main.c    ****   {
ARM GAS  /tmp/cc26hk0Z.s 			page 4


 146:Src/main.c    ****     Error_Handler();
 147:Src/main.c    ****   }
 148:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 149:Src/main.c    ****   */
 150:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 151:Src/main.c    ****   {
 152:Src/main.c    ****     Error_Handler();
 153:Src/main.c    ****   }
 154:Src/main.c    **** }
 155:Src/main.c    **** 
 156:Src/main.c    **** /**
 157:Src/main.c    ****   * @brief USART2 Initialization Function
 158:Src/main.c    ****   * @param None
 159:Src/main.c    ****   * @retval None
 160:Src/main.c    ****   */
 161:Src/main.c    **** static void MX_USART2_UART_Init(void)
 162:Src/main.c    **** {
 163:Src/main.c    **** 
 164:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 165:Src/main.c    **** 
 166:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 167:Src/main.c    **** 
 168:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 169:Src/main.c    **** 
 170:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 171:Src/main.c    ****   huart2.Instance = USART2;
 172:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 173:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 174:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 175:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 176:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 177:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 178:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 179:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 180:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 181:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 182:Src/main.c    ****   {
 183:Src/main.c    ****     Error_Handler();
 184:Src/main.c    ****   }
 185:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 186:Src/main.c    **** 
 187:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 188:Src/main.c    **** }
 189:Src/main.c    **** 
 190:Src/main.c    **** /**
 191:Src/main.c    ****   * @brief GPIO Initialization Function
 192:Src/main.c    ****   * @param None
 193:Src/main.c    ****   * @retval None
 194:Src/main.c    ****   */
 195:Src/main.c    **** static void MX_GPIO_Init(void)
 196:Src/main.c    **** {
  28              		.loc 1 196 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
ARM GAS  /tmp/cc26hk0Z.s 			page 5


  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 86B0     		sub	sp, sp, #24
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
 197:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 197 3 view .LVU1
  41              		.loc 1 197 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0194     		str	r4, [sp, #4]
  44 0008 0294     		str	r4, [sp, #8]
  45 000a 0394     		str	r4, [sp, #12]
  46 000c 0494     		str	r4, [sp, #16]
  47 000e 0594     		str	r4, [sp, #20]
 198:Src/main.c    **** 
 199:Src/main.c    ****   /* GPIO Ports Clock Enable */
 200:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  48              		.loc 1 200 3 is_stmt 1 view .LVU3
  49              	.LBB2:
  50              		.loc 1 200 3 view .LVU4
  51              		.loc 1 200 3 view .LVU5
  52 0010 0E4B     		ldr	r3, .L3
  53 0012 DA6C     		ldr	r2, [r3, #76]
  54 0014 42F00102 		orr	r2, r2, #1
  55 0018 DA64     		str	r2, [r3, #76]
  56              		.loc 1 200 3 view .LVU6
  57 001a DB6C     		ldr	r3, [r3, #76]
  58 001c 03F00103 		and	r3, r3, #1
  59 0020 0093     		str	r3, [sp]
  60              		.loc 1 200 3 view .LVU7
  61 0022 009B     		ldr	r3, [sp]
  62              	.LBE2:
  63              		.loc 1 200 3 view .LVU8
 201:Src/main.c    **** 
 202:Src/main.c    ****   /*Configure GPIO pin Output Level */
 203:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
  64              		.loc 1 203 3 view .LVU9
  65 0024 2246     		mov	r2, r4
  66 0026 2021     		movs	r1, #32
  67 0028 4FF09040 		mov	r0, #1207959552
  68 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
  69              	.LVL0:
 204:Src/main.c    **** 
 205:Src/main.c    ****   /*Configure GPIO pin : PA5 */
 206:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
  70              		.loc 1 206 3 view .LVU10
  71              		.loc 1 206 23 is_stmt 0 view .LVU11
  72 0030 2023     		movs	r3, #32
  73 0032 0193     		str	r3, [sp, #4]
 207:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  74              		.loc 1 207 3 is_stmt 1 view .LVU12
  75              		.loc 1 207 24 is_stmt 0 view .LVU13
  76 0034 0123     		movs	r3, #1
  77 0036 0293     		str	r3, [sp, #8]
 208:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  78              		.loc 1 208 3 is_stmt 1 view .LVU14
ARM GAS  /tmp/cc26hk0Z.s 			page 6


  79              		.loc 1 208 24 is_stmt 0 view .LVU15
  80 0038 0394     		str	r4, [sp, #12]
 209:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  81              		.loc 1 209 3 is_stmt 1 view .LVU16
  82              		.loc 1 209 25 is_stmt 0 view .LVU17
  83 003a 0494     		str	r4, [sp, #16]
 210:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  84              		.loc 1 210 3 is_stmt 1 view .LVU18
  85 003c 01A9     		add	r1, sp, #4
  86 003e 4FF09040 		mov	r0, #1207959552
  87 0042 FFF7FEFF 		bl	HAL_GPIO_Init
  88              	.LVL1:
 211:Src/main.c    **** }
  89              		.loc 1 211 1 is_stmt 0 view .LVU19
  90 0046 06B0     		add	sp, sp, #24
  91              	.LCFI2:
  92              		.cfi_def_cfa_offset 8
  93              		@ sp needed
  94 0048 10BD     		pop	{r4, pc}
  95              	.L4:
  96 004a 00BF     		.align	2
  97              	.L3:
  98 004c 00100240 		.word	1073876992
  99              		.cfi_endproc
 100              	.LFE133:
 102              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 103              		.align	1
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv4-sp-d16
 109              	MX_USART2_UART_Init:
 110              	.LFB132:
 162:Src/main.c    **** 
 111              		.loc 1 162 1 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115 0000 08B5     		push	{r3, lr}
 116              	.LCFI3:
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 3, -8
 119              		.cfi_offset 14, -4
 171:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 120              		.loc 1 171 3 view .LVU21
 171:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 121              		.loc 1 171 19 is_stmt 0 view .LVU22
 122 0002 0948     		ldr	r0, .L7
 123 0004 094B     		ldr	r3, .L7+4
 124 0006 0360     		str	r3, [r0]
 172:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 125              		.loc 1 172 3 is_stmt 1 view .LVU23
 172:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 126              		.loc 1 172 24 is_stmt 0 view .LVU24
 127 0008 4FF4E133 		mov	r3, #115200
 128 000c 4360     		str	r3, [r0, #4]
 173:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
ARM GAS  /tmp/cc26hk0Z.s 			page 7


 129              		.loc 1 173 3 is_stmt 1 view .LVU25
 173:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 130              		.loc 1 173 26 is_stmt 0 view .LVU26
 131 000e 0023     		movs	r3, #0
 132 0010 8360     		str	r3, [r0, #8]
 174:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 133              		.loc 1 174 3 is_stmt 1 view .LVU27
 174:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 134              		.loc 1 174 24 is_stmt 0 view .LVU28
 135 0012 C360     		str	r3, [r0, #12]
 175:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 136              		.loc 1 175 3 is_stmt 1 view .LVU29
 175:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 137              		.loc 1 175 22 is_stmt 0 view .LVU30
 138 0014 0361     		str	r3, [r0, #16]
 176:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 139              		.loc 1 176 3 is_stmt 1 view .LVU31
 176:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 140              		.loc 1 176 20 is_stmt 0 view .LVU32
 141 0016 0C22     		movs	r2, #12
 142 0018 4261     		str	r2, [r0, #20]
 177:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 143              		.loc 1 177 3 is_stmt 1 view .LVU33
 177:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 144              		.loc 1 177 25 is_stmt 0 view .LVU34
 145 001a 8361     		str	r3, [r0, #24]
 178:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 146              		.loc 1 178 3 is_stmt 1 view .LVU35
 178:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 147              		.loc 1 178 28 is_stmt 0 view .LVU36
 148 001c C361     		str	r3, [r0, #28]
 179:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 149              		.loc 1 179 3 is_stmt 1 view .LVU37
 179:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 150              		.loc 1 179 30 is_stmt 0 view .LVU38
 151 001e 0362     		str	r3, [r0, #32]
 180:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 152              		.loc 1 180 3 is_stmt 1 view .LVU39
 180:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 153              		.loc 1 180 38 is_stmt 0 view .LVU40
 154 0020 4362     		str	r3, [r0, #36]
 181:Src/main.c    ****   {
 155              		.loc 1 181 3 is_stmt 1 view .LVU41
 181:Src/main.c    ****   {
 156              		.loc 1 181 7 is_stmt 0 view .LVU42
 157 0022 FFF7FEFF 		bl	HAL_UART_Init
 158              	.LVL2:
 188:Src/main.c    **** 
 159              		.loc 1 188 1 view .LVU43
 160 0026 08BD     		pop	{r3, pc}
 161              	.L8:
 162              		.align	2
 163              	.L7:
 164 0028 00000000 		.word	.LANCHOR0
 165 002c 00440040 		.word	1073759232
 166              		.cfi_endproc
 167              	.LFE132:
ARM GAS  /tmp/cc26hk0Z.s 			page 8


 169              		.section	.text.SystemClock_Config,"ax",%progbits
 170              		.align	1
 171              		.global	SystemClock_Config
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv4-sp-d16
 177              	SystemClock_Config:
 178              	.LFB131:
 114:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 179              		.loc 1 114 1 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 224
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183 0000 10B5     		push	{r4, lr}
 184              	.LCFI4:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 4, -8
 187              		.cfi_offset 14, -4
 188 0002 B8B0     		sub	sp, sp, #224
 189              	.LCFI5:
 190              		.cfi_def_cfa_offset 232
 115:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 191              		.loc 1 115 3 view .LVU45
 115:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 192              		.loc 1 115 22 is_stmt 0 view .LVU46
 193 0004 4422     		movs	r2, #68
 194 0006 0021     		movs	r1, #0
 195 0008 27A8     		add	r0, sp, #156
 196 000a FFF7FEFF 		bl	memset
 197              	.LVL3:
 116:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 198              		.loc 1 116 3 is_stmt 1 view .LVU47
 116:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 199              		.loc 1 116 22 is_stmt 0 view .LVU48
 200 000e 0024     		movs	r4, #0
 201 0010 2294     		str	r4, [sp, #136]
 202 0012 2394     		str	r4, [sp, #140]
 203 0014 2494     		str	r4, [sp, #144]
 204 0016 2594     		str	r4, [sp, #148]
 205 0018 2694     		str	r4, [sp, #152]
 117:Src/main.c    **** 
 206              		.loc 1 117 3 is_stmt 1 view .LVU49
 117:Src/main.c    **** 
 207              		.loc 1 117 28 is_stmt 0 view .LVU50
 208 001a 8822     		movs	r2, #136
 209 001c 2146     		mov	r1, r4
 210 001e 6846     		mov	r0, sp
 211 0020 FFF7FEFF 		bl	memset
 212              	.LVL4:
 121:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 213              		.loc 1 121 3 is_stmt 1 view .LVU51
 121:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 214              		.loc 1 121 36 is_stmt 0 view .LVU52
 215 0024 1023     		movs	r3, #16
 216 0026 2793     		str	r3, [sp, #156]
 122:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
ARM GAS  /tmp/cc26hk0Z.s 			page 9


 217              		.loc 1 122 3 is_stmt 1 view .LVU53
 122:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 218              		.loc 1 122 30 is_stmt 0 view .LVU54
 219 0028 0123     		movs	r3, #1
 220 002a 2D93     		str	r3, [sp, #180]
 123:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 221              		.loc 1 123 3 is_stmt 1 view .LVU55
 124:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 222              		.loc 1 124 3 view .LVU56
 124:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 223              		.loc 1 124 35 is_stmt 0 view .LVU57
 224 002c 6023     		movs	r3, #96
 225 002e 2F93     		str	r3, [sp, #188]
 125:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 226              		.loc 1 125 3 is_stmt 1 view .LVU58
 126:Src/main.c    ****   {
 227              		.loc 1 126 3 view .LVU59
 126:Src/main.c    ****   {
 228              		.loc 1 126 7 is_stmt 0 view .LVU60
 229 0030 27A8     		add	r0, sp, #156
 230 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 231              	.LVL5:
 132:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 232              		.loc 1 132 3 is_stmt 1 view .LVU61
 132:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 233              		.loc 1 132 31 is_stmt 0 view .LVU62
 234 0036 0F23     		movs	r3, #15
 235 0038 2293     		str	r3, [sp, #136]
 133:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 236              		.loc 1 133 3 is_stmt 1 view .LVU63
 133:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 237              		.loc 1 133 34 is_stmt 0 view .LVU64
 238 003a 2394     		str	r4, [sp, #140]
 134:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 239              		.loc 1 134 3 is_stmt 1 view .LVU65
 134:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 240              		.loc 1 134 35 is_stmt 0 view .LVU66
 241 003c 2494     		str	r4, [sp, #144]
 135:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 242              		.loc 1 135 3 is_stmt 1 view .LVU67
 135:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 243              		.loc 1 135 36 is_stmt 0 view .LVU68
 244 003e 2594     		str	r4, [sp, #148]
 136:Src/main.c    **** 
 245              		.loc 1 136 3 is_stmt 1 view .LVU69
 136:Src/main.c    **** 
 246              		.loc 1 136 36 is_stmt 0 view .LVU70
 247 0040 2694     		str	r4, [sp, #152]
 138:Src/main.c    ****   {
 248              		.loc 1 138 3 is_stmt 1 view .LVU71
 138:Src/main.c    ****   {
 249              		.loc 1 138 7 is_stmt 0 view .LVU72
 250 0042 2146     		mov	r1, r4
 251 0044 22A8     		add	r0, sp, #136
 252 0046 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 253              	.LVL6:
 142:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
ARM GAS  /tmp/cc26hk0Z.s 			page 10


 254              		.loc 1 142 3 is_stmt 1 view .LVU73
 142:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 255              		.loc 1 142 38 is_stmt 0 view .LVU74
 256 004a 0223     		movs	r3, #2
 257 004c 0093     		str	r3, [sp]
 143:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 258              		.loc 1 143 3 is_stmt 1 view .LVU75
 143:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 259              		.loc 1 143 38 is_stmt 0 view .LVU76
 260 004e 0F94     		str	r4, [sp, #60]
 144:Src/main.c    ****   {
 261              		.loc 1 144 3 is_stmt 1 view .LVU77
 144:Src/main.c    ****   {
 262              		.loc 1 144 7 is_stmt 0 view .LVU78
 263 0050 6846     		mov	r0, sp
 264 0052 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 265              	.LVL7:
 150:Src/main.c    ****   {
 266              		.loc 1 150 3 is_stmt 1 view .LVU79
 150:Src/main.c    ****   {
 267              		.loc 1 150 7 is_stmt 0 view .LVU80
 268 0056 4FF40070 		mov	r0, #512
 269 005a FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 270              	.LVL8:
 154:Src/main.c    **** 
 271              		.loc 1 154 1 view .LVU81
 272 005e 38B0     		add	sp, sp, #224
 273              	.LCFI6:
 274              		.cfi_def_cfa_offset 8
 275              		@ sp needed
 276 0060 10BD     		pop	{r4, pc}
 277              		.cfi_endproc
 278              	.LFE131:
 280              		.section	.text.main,"ax",%progbits
 281              		.align	1
 282              		.global	main
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu fpv4-sp-d16
 288              	main:
 289              	.LFB130:
  66:Src/main.c    ****   /* USER CODE BEGIN 1 */
 290              		.loc 1 66 1 is_stmt 1 view -0
 291              		.cfi_startproc
 292              		@ Volatile: function does not return.
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295 0000 08B5     		push	{r3, lr}
 296              	.LCFI7:
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 3, -8
 299              		.cfi_offset 14, -4
  74:Src/main.c    **** 
 300              		.loc 1 74 3 view .LVU83
 301 0002 FFF7FEFF 		bl	HAL_Init
 302              	.LVL9:
ARM GAS  /tmp/cc26hk0Z.s 			page 11


  81:Src/main.c    **** 
 303              		.loc 1 81 3 view .LVU84
 304 0006 FFF7FEFF 		bl	SystemClock_Config
 305              	.LVL10:
  88:Src/main.c    ****   MX_USART2_UART_Init();
 306              		.loc 1 88 3 view .LVU85
 307 000a FFF7FEFF 		bl	MX_GPIO_Init
 308              	.LVL11:
  89:Src/main.c    ****   /* USER CODE BEGIN 2 */
 309              		.loc 1 89 3 view .LVU86
 310 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 311              	.LVL12:
 312              	.L12:
  96:Src/main.c    ****   {
 313              		.loc 1 96 3 discriminator 1 view .LVU87
 101:Src/main.c    ****     HAL_Delay(500);
 314              		.loc 1 101 5 discriminator 1 view .LVU88
 315 0012 0122     		movs	r2, #1
 316 0014 2021     		movs	r1, #32
 317 0016 4FF09040 		mov	r0, #1207959552
 318 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 319              	.LVL13:
 102:Src/main.c    ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, 0);
 320              		.loc 1 102 5 discriminator 1 view .LVU89
 321 001e 4FF4FA70 		mov	r0, #500
 322 0022 FFF7FEFF 		bl	HAL_Delay
 323              	.LVL14:
 103:Src/main.c    ****     HAL_Delay(500);
 324              		.loc 1 103 5 discriminator 1 view .LVU90
 325 0026 0022     		movs	r2, #0
 326 0028 2021     		movs	r1, #32
 327 002a 4FF09040 		mov	r0, #1207959552
 328 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 329              	.LVL15:
 104:Src/main.c    ****   }
 330              		.loc 1 104 5 discriminator 1 view .LVU91
 331 0032 4FF4FA70 		mov	r0, #500
 332 0036 FFF7FEFF 		bl	HAL_Delay
 333              	.LVL16:
  96:Src/main.c    ****   {
 334              		.loc 1 96 9 discriminator 1 view .LVU92
 335 003a EAE7     		b	.L12
 336              		.cfi_endproc
 337              	.LFE130:
 339              		.section	.text.Error_Handler,"ax",%progbits
 340              		.align	1
 341              		.global	Error_Handler
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu fpv4-sp-d16
 347              	Error_Handler:
 348              	.LFB134:
 212:Src/main.c    **** 
 213:Src/main.c    **** /* USER CODE BEGIN 4 */
 214:Src/main.c    **** 
 215:Src/main.c    **** /* USER CODE END 4 */
ARM GAS  /tmp/cc26hk0Z.s 			page 12


 216:Src/main.c    **** 
 217:Src/main.c    **** /**
 218:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 219:Src/main.c    ****   * @retval None
 220:Src/main.c    ****   */
 221:Src/main.c    **** void Error_Handler(void)
 222:Src/main.c    **** {
 349              		.loc 1 222 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 223:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 224:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 225:Src/main.c    **** 
 226:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 227:Src/main.c    **** }
 354              		.loc 1 227 1 view .LVU94
 355 0000 7047     		bx	lr
 356              		.cfi_endproc
 357              	.LFE134:
 359              		.global	huart2
 360              		.section	.bss.huart2,"aw",%nobits
 361              		.align	2
 362              		.set	.LANCHOR0,. + 0
 365              	huart2:
 366 0000 00000000 		.space	128
 366      00000000 
 366      00000000 
 366      00000000 
 366      00000000 
 367              		.text
 368              	.Letext0:
 369              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 370              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 371              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 372              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 373              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 374              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 375              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 376              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 377              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 378              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 379              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 380              		.file 13 "<built-in>"
ARM GAS  /tmp/cc26hk0Z.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc26hk0Z.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc26hk0Z.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc26hk0Z.s:98     .text.MX_GPIO_Init:000000000000004c $d
     /tmp/cc26hk0Z.s:103    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/cc26hk0Z.s:109    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/cc26hk0Z.s:164    .text.MX_USART2_UART_Init:0000000000000028 $d
     /tmp/cc26hk0Z.s:170    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc26hk0Z.s:177    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc26hk0Z.s:281    .text.main:0000000000000000 $t
     /tmp/cc26hk0Z.s:288    .text.main:0000000000000000 main
     /tmp/cc26hk0Z.s:340    .text.Error_Handler:0000000000000000 $t
     /tmp/cc26hk0Z.s:347    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc26hk0Z.s:365    .bss.huart2:0000000000000000 huart2
     /tmp/cc26hk0Z.s:361    .bss.huart2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_Init
HAL_Delay
