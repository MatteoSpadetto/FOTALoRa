ARM GAS  /tmp/ccnMLrqE.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB137:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include <stdio.h>
  27:Src/main.c    **** #include <string.h>
  28:Src/main.c    **** #include "parsed_hex.h"
  29:Src/main.c    **** /* USER CODE END Includes */
  30:Src/main.c    **** 
  31:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccnMLrqE.s 			page 2


  32:Src/main.c    **** /* USER CODE BEGIN PTD */
  33:Src/main.c    **** 
  34:Src/main.c    **** /* USER CODE END PTD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  37:Src/main.c    **** /* USER CODE BEGIN PD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* USER CODE END PD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  42:Src/main.c    **** /* USER CODE BEGIN PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE END PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** SPI_HandleTypeDef hspi1;
  48:Src/main.c    **** UART_HandleTypeDef huart2;
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  55:Src/main.c    **** void SystemClock_Config(void);
  56:Src/main.c    **** static void MX_GPIO_Init(void);
  57:Src/main.c    **** static void MX_SPI1_Init(void);
  58:Src/main.c    **** static void MX_USART2_UART_Init(void);
  59:Src/main.c    **** /* USER CODE BEGIN PFP */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  64:Src/main.c    **** /* USER CODE BEGIN 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** /**
  69:Src/main.c    ****   * @brief  The application entry point.
  70:Src/main.c    ****   * @retval int
  71:Src/main.c    ****   */
  72:Src/main.c    **** int main(void)
  73:Src/main.c    **** {
  74:Src/main.c    ****   /* USER CODE BEGIN 1 */
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* USER CODE END 1 */
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  79:Src/main.c    **** 
  80:Src/main.c    ****   HAL_Init();
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* USER CODE BEGIN Init */
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE END Init */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* Configure the system clock */
  87:Src/main.c    ****   SystemClock_Config();
  88:Src/main.c    **** 
ARM GAS  /tmp/ccnMLrqE.s 			page 3


  89:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE END SysInit */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* Initialize all configured peripherals */
  94:Src/main.c    ****   MX_GPIO_Init();
  95:Src/main.c    ****   MX_SPI1_Init();
  96:Src/main.c    ****   MX_USART2_UART_Init();
  97:Src/main.c    ****   /* USER CODE BEGIN 2 */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* USER CODE END 2 */
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* Infinite loop */
 102:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 103:Src/main.c    ****   char txt[100];
 104:Src/main.c    ****   int arr_aaaa_length = sizeof(arr_aaaa) / sizeof(arr_aaaa[0]);
 105:Src/main.c    ****   int sync_flag = 0;
 106:Src/main.c    ****   int dd_index = 0;
 107:Src/main.c    ****   int dd_add = 0;
 108:Src/main.c    ****   int aaaa_index = 0;
 109:Src/main.c    ****   uint8_t ack_frame[3];
 110:Src/main.c    ****   uint8_t ack_resp[3];
 111:Src/main.c    ****   int flag_stop = 0;
 112:Src/main.c    **** 
 113:Src/main.c    ****   while (1)
 114:Src/main.c    ****   {
 115:Src/main.c    ****     if (sync_flag == 0)
 116:Src/main.c    ****     {
 117:Src/main.c    ****       //////////////////////////////SYNC ROUTINE/////////////////////////////////////////
 118:Src/main.c    ****       // SEND SYNC
 119:Src/main.c    ****       uint8_t sync_frame[1];
 120:Src/main.c    ****       uint8_t sync_resp[1];
 121:Src/main.c    ****       sync_frame[0] = 0x5A;
 122:Src/main.c    ****       while (hspi1.State != HAL_SPI_STATE_READY)
 123:Src/main.c    ****         ;
 124:Src/main.c    ****       HAL_SPI_TransmitReceive(&hspi1, sync_frame, &sync_resp, 1, 1000);
 125:Src/main.c    ****       sprintf(txt, "RESP_OF_SYNC: %02x\r\n", sync_resp[0]);
 126:Src/main.c    ****       HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 127:Src/main.c    **** 
 128:Src/main.c    ****       //REC ACK
 129:Src/main.c    ****       ack_frame[0] = 0x00;
 130:Src/main.c    ****       ack_frame[1] = 0xFF;
 131:Src/main.c    ****       ack_frame[2] = 0x79;
 132:Src/main.c    ****       while (hspi1.State != HAL_SPI_STATE_READY)
 133:Src/main.c    ****         ;
 134:Src/main.c    ****       HAL_SPI_TransmitReceive(&hspi1, ack_frame, &ack_resp, 3, 1000);
 135:Src/main.c    ****       if (sync_resp[0] == 0xA5 && ack_resp[1] == 0x79)
 136:Src/main.c    ****       {
 137:Src/main.c    ****         sync_flag = 1;
 138:Src/main.c    ****         sprintf(txt, "ACK_OF_SYNC: %02x || %02x || %02x\r\n", ack_resp[0], ack_resp[1], ack_resp[2]
 139:Src/main.c    ****         HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 140:Src/main.c    ****       }
 141:Src/main.c    ****     }
 142:Src/main.c    ****     else if (sync_flag == 1)
 143:Src/main.c    ****     {
 144:Src/main.c    ****       //////////////////////ERASE ALL ROUTINE///////////////////////////
 145:Src/main.c    ****       uint8_t cmd_frame[3];
ARM GAS  /tmp/ccnMLrqE.s 			page 4


 146:Src/main.c    ****       uint8_t cmd_resp[3];
 147:Src/main.c    ****       cmd_frame[0] = 0x5A;
 148:Src/main.c    ****       cmd_frame[1] = 0x44;
 149:Src/main.c    ****       cmd_frame[2] = 0xBB;
 150:Src/main.c    ****       while (hspi1.State != HAL_SPI_STATE_READY)
 151:Src/main.c    ****         ;
 152:Src/main.c    ****       HAL_SPI_TransmitReceive(&hspi1, cmd_frame, &cmd_resp, 3, 1000);
 153:Src/main.c    **** 
 154:Src/main.c    ****       sprintf(txt, "RESP_OF_CMD_ER: %02x || %02x || %02x\r\n", cmd_resp[0], cmd_resp[1], cmd_resp[2
 155:Src/main.c    ****       HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 156:Src/main.c    **** 
 157:Src/main.c    ****       ack_frame[0] = 0x00;
 158:Src/main.c    ****       ack_frame[1] = 0x00;
 159:Src/main.c    ****       ack_frame[2] = 0x79;
 160:Src/main.c    ****       while (hspi1.State != HAL_SPI_STATE_READY)
 161:Src/main.c    ****         ;
 162:Src/main.c    ****       HAL_SPI_TransmitReceive(&hspi1, ack_frame, &ack_resp, 3, 1000);
 163:Src/main.c    ****       sprintf(txt, "ACK_OF_CMD_ER: %02x || %02x || %02x\r\n", ack_resp[0], ack_resp[1], ack_resp[2]
 164:Src/main.c    ****       HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 165:Src/main.c    ****       if (ack_resp[1] == 0x79)
 166:Src/main.c    ****       {
 167:Src/main.c    **** 
 168:Src/main.c    ****         uint8_t erase_frame[3];
 169:Src/main.c    ****         uint8_t erase_resp[3];
 170:Src/main.c    ****         erase_frame[0] = 0xFF;
 171:Src/main.c    ****         erase_frame[1] = 0xFF;
 172:Src/main.c    ****         erase_frame[2] = 0x00;
 173:Src/main.c    ****         while (hspi1.State != HAL_SPI_STATE_READY)
 174:Src/main.c    ****           ;
 175:Src/main.c    ****         HAL_SPI_TransmitReceive(&hspi1, erase_frame, &erase_resp, 3, 1000);
 176:Src/main.c    ****         sprintf(txt, "RESP_OF_ERASE: %02x || %02x || %02x\r\n", erase_resp[0], erase_resp[1], erase
 177:Src/main.c    **** 
 178:Src/main.c    ****         HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 179:Src/main.c    ****         ack_frame[0] = 0x00;
 180:Src/main.c    ****         ack_frame[1] = 0xFF;
 181:Src/main.c    ****         ack_frame[2] = 0x79;
 182:Src/main.c    ****         while (hspi1.State != HAL_SPI_STATE_READY)
 183:Src/main.c    ****           ;
 184:Src/main.c    ****         HAL_SPI_TransmitReceive(&hspi1, ack_frame, &ack_resp, 3, 1000);
 185:Src/main.c    ****         sprintf(txt, "ACK_OF_ERASE: %02x || %02x || %02x\r\n", ack_resp[0], ack_resp[1], ack_resp[2
 186:Src/main.c    ****         HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 187:Src/main.c    ****         sync_flag = 2;
 188:Src/main.c    ****       }
 189:Src/main.c    ****     }
 190:Src/main.c    ****     else if (sync_flag >= 2 & sync_flag <= 3)
 191:Src/main.c    ****     {
 192:Src/main.c    ****       ////////WRITE ROUTINE////////////////////
 193:Src/main.c    ****       uint8_t data_resp[18];
 194:Src/main.c    ****       data_resp[3] = 0x00;
 195:Src/main.c    **** 
 196:Src/main.c    ****       while (data_resp[3] != 0x79)
 197:Src/main.c    ****       {
 198:Src/main.c    ****         uint8_t cmd_frame[3];
 199:Src/main.c    ****         uint8_t cmd_resp[3];
 200:Src/main.c    ****         cmd_frame[0] = 0x5A;
 201:Src/main.c    ****         cmd_frame[1] = 0x31;
 202:Src/main.c    ****         cmd_frame[2] = 0xCE;
ARM GAS  /tmp/ccnMLrqE.s 			page 5


 203:Src/main.c    ****         while (hspi1.State != HAL_SPI_STATE_READY)
 204:Src/main.c    ****           ;
 205:Src/main.c    ****         HAL_SPI_TransmitReceive(&hspi1, cmd_frame, &cmd_resp, 3, 1000);
 206:Src/main.c    **** 
 207:Src/main.c    ****         sprintf(txt, "RESP_OF_CMD_WR: %02x || %02x || %02x\r\n", cmd_resp[0], cmd_resp[1], cmd_resp
 208:Src/main.c    ****         HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 209:Src/main.c    **** 
 210:Src/main.c    ****         ack_frame[0] = 0x00;
 211:Src/main.c    ****         ack_frame[1] = 0x00;
 212:Src/main.c    ****         ack_frame[2] = 0x79;
 213:Src/main.c    ****         while (hspi1.State != HAL_SPI_STATE_READY)
 214:Src/main.c    ****           ;
 215:Src/main.c    ****         HAL_SPI_TransmitReceive(&hspi1, ack_frame, &ack_resp, 3, 1000);
 216:Src/main.c    ****         sprintf(txt, "ACK_OF_CMD_WR: %02x || %02x || %02x\r\n", ack_resp[0], ack_resp[1], ack_resp[
 217:Src/main.c    ****         HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 218:Src/main.c    ****         if (ack_resp[1] == 0x79 || ack_resp[1] == 0xA5)
 219:Src/main.c    ****         {
 220:Src/main.c    **** 
 221:Src/main.c    ****           uint8_t add_frame[5];
 222:Src/main.c    ****           uint8_t add_resp[5];
 223:Src/main.c    ****           uint8_t tmp_aaaa = 0;
 224:Src/main.c    **** 
 225:Src/main.c    ****           add_frame[0] = 0x08;
 226:Src/main.c    ****           add_frame[1] = 0x00;
 227:Src/main.c    ****           add_frame[2] = (arr_aaaa[aaaa_index] >> 8) & 0xFF;
 228:Src/main.c    ****           add_frame[3] = arr_aaaa[aaaa_index] & 0xFF;
 229:Src/main.c    ****           add_frame[4] = 0x08 ^ add_frame[1] ^ add_frame[2] ^ add_frame[3];
 230:Src/main.c    ****           aaaa_index = aaaa_index + 2;
 231:Src/main.c    ****           while (hspi1.State != HAL_SPI_STATE_READY)
 232:Src/main.c    ****             ;
 233:Src/main.c    ****           HAL_SPI_TransmitReceive(&hspi1, add_frame, &add_resp, 5, 1000);
 234:Src/main.c    ****           sprintf(txt, "RESP_OF_ADD: %02x || %02x || %02x || %02x || %02x\r\n", add_resp[0], add_re
 235:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 236:Src/main.c    **** 
 237:Src/main.c    ****           sprintf(txt, "ADDRESS: %02x || %02x || %02x || %02x\r\n", add_frame[0], add_frame[1], add
 238:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 239:Src/main.c    **** 
 240:Src/main.c    ****           ack_frame[0] = 0x00;
 241:Src/main.c    ****           ack_frame[1] = 0x00;
 242:Src/main.c    ****           ack_frame[2] = 0x79;
 243:Src/main.c    ****           while (hspi1.State != HAL_SPI_STATE_READY)
 244:Src/main.c    ****             ;
 245:Src/main.c    ****           HAL_SPI_TransmitReceive(&hspi1, ack_frame, &ack_resp, 3, 1000);
 246:Src/main.c    ****           sprintf(txt, "ACK_OF_ADD: %02x || %02x || %02x\r\n", ack_resp[0], ack_resp[1], ack_resp[2
 247:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 248:Src/main.c    **** 
 249:Src/main.c    ****           uint8_t data_frame[17];
 250:Src/main.c    ****           uint8_t frame_resp[17];
 251:Src/main.c    ****           data_frame[0] = 0x0F;
 252:Src/main.c    ****           uint8_t data_xor[1];
 253:Src/main.c    ****           uint8_t xor_resp[1];
 254:Src/main.c    ****           data_xor[0] = data_frame[0];
 255:Src/main.c    **** 
 256:Src/main.c    ****           int index = 1;
 257:Src/main.c    ****           int tmp_index = dd_index;
 258:Src/main.c    ****           for (size_t k = tmp_index; k < tmp_index + 4; k++)
 259:Src/main.c    ****           {
ARM GAS  /tmp/ccnMLrqE.s 			page 6


 260:Src/main.c    ****             int to_parse = arr_dd[k];
 261:Src/main.c    ****             for (size_t i = 0; i < 4; i++)
 262:Src/main.c    ****             {
 263:Src/main.c    ****               data_frame[index] = (to_parse >> ((3 - i) * 8)) & 0xFF;
 264:Src/main.c    ****               if (i == 0)
 265:Src/main.c    ****               {
 266:Src/main.c    ****                 if (data_frame[index] != 0x00)
 267:Src/main.c    ****                 {
 268:Src/main.c    ****                   //data_frame[index] = data_frame[index] + 0x14;
 269:Src/main.c    ****                 }
 270:Src/main.c    ****               }
 271:Src/main.c    ****               data_xor[0] = data_xor[0] ^ data_frame[index];
 272:Src/main.c    ****               sprintf(txt, "DATA_DATA: %02x\r\n", data_frame[index]);
 273:Src/main.c    ****               HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 274:Src/main.c    ****               index++;
 275:Src/main.c    ****             }
 276:Src/main.c    ****             dd_index++;
 277:Src/main.c    ****           }
 278:Src/main.c    ****           sprintf(txt, "XOR_OF_ADD: %02x\r\n", data_xor[0]);
 279:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 280:Src/main.c    **** 
 281:Src/main.c    ****           while (hspi1.State != HAL_SPI_STATE_READY)
 282:Src/main.c    ****             ;
 283:Src/main.c    ****           HAL_SPI_TransmitReceive(&hspi1, data_frame, &frame_resp, 17, 1000);
 284:Src/main.c    ****           while (hspi1.State != HAL_SPI_STATE_READY)
 285:Src/main.c    ****             ;
 286:Src/main.c    ****           HAL_SPI_TransmitReceive(&hspi1, data_xor, &xor_resp, 1, 1000);
 287:Src/main.c    **** 
 288:Src/main.c    ****           sprintf(txt, "RESP_OF_DATA: %02x || %02x || %02x || %02x\r\n", frame_resp[0], frame_resp[
 289:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 290:Src/main.c    **** 
 291:Src/main.c    ****           if (frame_resp[3] != 0x79)
 292:Src/main.c    ****           {
 293:Src/main.c    ****             dd_index = dd_index - 4;
 294:Src/main.c    ****             aaaa_index = aaaa_index - 2;
 295:Src/main.c    ****           }
 296:Src/main.c    **** 
 297:Src/main.c    ****           ack_frame[0] = 0x00;
 298:Src/main.c    ****           ack_frame[1] = 0x00;
 299:Src/main.c    ****           ack_frame[2] = 0x79;
 300:Src/main.c    ****           while (hspi1.State != HAL_SPI_STATE_READY)
 301:Src/main.c    ****             ;
 302:Src/main.c    ****           HAL_SPI_TransmitReceive(&hspi1, ack_frame, &ack_resp, 3, 1000);
 303:Src/main.c    ****           sprintf(txt, "ACK_OF_DATA: %02x || %02x || %02x\r\n", ack_resp[0], ack_resp[1], ack_resp[
 304:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 305:Src/main.c    **** 
 306:Src/main.c    ****           sprintf(txt, "len: %d, %d\r\n", dd_index, sync_flag);
 307:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 308:Src/main.c    **** 
 309:Src/main.c    ****           sprintf(txt, "index: %d, %d\r\n", aaaa_index, arr_aaaa[aaaa_index]);
 310:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 311:Src/main.c    ****           HAL_Delay(20);
 312:Src/main.c    **** 
 313:Src/main.c    ****           if (aaaa_index >= arr_aaaa_length)
 314:Src/main.c    ****           {
 315:Src/main.c    ****             sync_flag = 5;
 316:Src/main.c    ****             return;
ARM GAS  /tmp/ccnMLrqE.s 			page 7


 317:Src/main.c    ****           }
 318:Src/main.c    **** 
 319:Src/main.c    ****           /*if (arr_aaaa[aaaa_index - 1] == 0x16e8)
 320:Src/main.c    ****           {
 321:Src/main.c    ****             flag_stop++;
 322:Src/main.c    ****             if (flag_stop == 4)
 323:Src/main.c    ****             {
 324:Src/main.c    ****               sync_flag = 5;
 325:Src/main.c    ****               return;
 326:Src/main.c    ****             }
 327:Src/main.c    ****           }*/
 328:Src/main.c    ****         }
 329:Src/main.c    ****       }
 330:Src/main.c    ****       //sync_flag = 5;
 331:Src/main.c    ****     }
 332:Src/main.c    ****     /* USER CODE END WHILE */
 333:Src/main.c    **** 
 334:Src/main.c    ****     /* USER CODE BEGIN 3 */
 335:Src/main.c    ****   }
 336:Src/main.c    ****   /* USER CODE END 3 */
 337:Src/main.c    **** }
 338:Src/main.c    **** 
 339:Src/main.c    **** /**
 340:Src/main.c    ****   * @brief System Clock Configuration
 341:Src/main.c    ****   * @retval None
 342:Src/main.c    ****   */
 343:Src/main.c    **** void SystemClock_Config(void)
 344:Src/main.c    **** {
 345:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 346:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 347:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 348:Src/main.c    **** 
 349:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 350:Src/main.c    ****   */
 351:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 352:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 353:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 354:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 355:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 356:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 357:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 358:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 32;
 359:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 360:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 361:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 362:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 363:Src/main.c    ****   {
 364:Src/main.c    ****     Error_Handler();
 365:Src/main.c    ****   }
 366:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 367:Src/main.c    ****   */
 368:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 369:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 370:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 371:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 372:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 373:Src/main.c    **** 
ARM GAS  /tmp/ccnMLrqE.s 			page 8


 374:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 375:Src/main.c    ****   {
 376:Src/main.c    ****     Error_Handler();
 377:Src/main.c    ****   }
 378:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 379:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 380:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 381:Src/main.c    ****   {
 382:Src/main.c    ****     Error_Handler();
 383:Src/main.c    ****   }
 384:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 385:Src/main.c    ****   */
 386:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 387:Src/main.c    ****   {
 388:Src/main.c    ****     Error_Handler();
 389:Src/main.c    ****   }
 390:Src/main.c    **** }
 391:Src/main.c    **** 
 392:Src/main.c    **** /**
 393:Src/main.c    ****   * @brief SPI1 Initialization Function
 394:Src/main.c    ****   * @param None
 395:Src/main.c    ****   * @retval None
 396:Src/main.c    ****   */
 397:Src/main.c    **** static void MX_SPI1_Init(void)
 398:Src/main.c    **** {
 399:Src/main.c    **** 
 400:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 401:Src/main.c    **** 
 402:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 403:Src/main.c    **** 
 404:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 405:Src/main.c    **** 
 406:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 407:Src/main.c    ****   /* SPI1 parameter configuration*/
 408:Src/main.c    ****   hspi1.Instance = SPI1;
 409:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 410:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 411:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 412:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 413:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 414:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 415:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 416:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 417:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 418:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 419:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 420:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 421:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 422:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 423:Src/main.c    ****   {
 424:Src/main.c    ****     Error_Handler();
 425:Src/main.c    ****   }
 426:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 427:Src/main.c    **** 
 428:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 429:Src/main.c    **** }
 430:Src/main.c    **** 
ARM GAS  /tmp/ccnMLrqE.s 			page 9


 431:Src/main.c    **** /**
 432:Src/main.c    ****   * @brief USART2 Initialization Function
 433:Src/main.c    ****   * @param None
 434:Src/main.c    ****   * @retval None
 435:Src/main.c    ****   */
 436:Src/main.c    **** static void MX_USART2_UART_Init(void)
 437:Src/main.c    **** {
 438:Src/main.c    **** 
 439:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 440:Src/main.c    **** 
 441:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 442:Src/main.c    **** 
 443:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 444:Src/main.c    **** 
 445:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 446:Src/main.c    ****   huart2.Instance = USART2;
 447:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 448:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 449:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 450:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 451:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 452:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 453:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 454:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 455:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 456:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 457:Src/main.c    ****   {
 458:Src/main.c    ****     Error_Handler();
 459:Src/main.c    ****   }
 460:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 461:Src/main.c    **** 
 462:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 463:Src/main.c    **** }
 464:Src/main.c    **** 
 465:Src/main.c    **** /**
 466:Src/main.c    ****   * @brief GPIO Initialization Function
 467:Src/main.c    ****   * @param None
 468:Src/main.c    ****   * @retval None
 469:Src/main.c    ****   */
 470:Src/main.c    **** static void MX_GPIO_Init(void)
 471:Src/main.c    **** {
  28              		.loc 1 471 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
 472:Src/main.c    **** 
 473:Src/main.c    ****   /* GPIO Ports Clock Enable */
 474:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  36              		.loc 1 474 3 view .LVU1
  37              	.LBB2:
  38              		.loc 1 474 3 view .LVU2
  39              		.loc 1 474 3 view .LVU3
  40 0002 064B     		ldr	r3, .L3
ARM GAS  /tmp/ccnMLrqE.s 			page 10


  41 0004 DA6C     		ldr	r2, [r3, #76]
  42 0006 42F00102 		orr	r2, r2, #1
  43 000a DA64     		str	r2, [r3, #76]
  44              		.loc 1 474 3 view .LVU4
  45 000c DB6C     		ldr	r3, [r3, #76]
  46 000e 03F00103 		and	r3, r3, #1
  47 0012 0193     		str	r3, [sp, #4]
  48              		.loc 1 474 3 view .LVU5
  49 0014 019B     		ldr	r3, [sp, #4]
  50              	.LBE2:
  51              		.loc 1 474 3 view .LVU6
 475:Src/main.c    **** }
  52              		.loc 1 475 1 is_stmt 0 view .LVU7
  53 0016 02B0     		add	sp, sp, #8
  54              	.LCFI1:
  55              		.cfi_def_cfa_offset 0
  56              		@ sp needed
  57 0018 7047     		bx	lr
  58              	.L4:
  59 001a 00BF     		.align	2
  60              	.L3:
  61 001c 00100240 		.word	1073876992
  62              		.cfi_endproc
  63              	.LFE137:
  65              		.section	.rodata.Error_Handler.str1.4,"aMS",%progbits,1
  66              		.align	2
  67              	.LC0:
  68 0000 4552524F 		.ascii	"ERROR\015\012\000"
  68      520D0A00 
  69              		.section	.text.Error_Handler,"ax",%progbits
  70              		.align	1
  71              		.global	Error_Handler
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv4-sp-d16
  77              	Error_Handler:
  78              	.LFB138:
 476:Src/main.c    **** 
 477:Src/main.c    **** /* USER CODE BEGIN 4 */
 478:Src/main.c    **** 
 479:Src/main.c    **** /* USER CODE END 4 */
 480:Src/main.c    **** 
 481:Src/main.c    **** /**
 482:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 483:Src/main.c    ****   * @retval None
 484:Src/main.c    ****   */
 485:Src/main.c    **** void Error_Handler(void)
 486:Src/main.c    **** {
  79              		.loc 1 486 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ Volatile: function does not return.
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84 0000 08B5     		push	{r3, lr}
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccnMLrqE.s 			page 11


  87              		.cfi_offset 3, -8
  88              		.cfi_offset 14, -4
  89              	.L6:
 487:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 488:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 489:Src/main.c    ****   while (1)
  90              		.loc 1 489 3 discriminator 1 view .LVU9
 490:Src/main.c    ****   {
 491:Src/main.c    ****     HAL_UART_Transmit(&huart2, (uint8_t *)"ERROR\r\n", strlen("ERROR\r\n"), 1000);
  91              		.loc 1 491 5 discriminator 1 view .LVU10
  92 0002 4FF47A73 		mov	r3, #1000
  93 0006 0722     		movs	r2, #7
  94 0008 0249     		ldr	r1, .L8
  95 000a 0348     		ldr	r0, .L8+4
  96 000c FFF7FEFF 		bl	HAL_UART_Transmit
  97              	.LVL0:
 489:Src/main.c    ****   {
  98              		.loc 1 489 9 discriminator 1 view .LVU11
  99 0010 F7E7     		b	.L6
 100              	.L9:
 101 0012 00BF     		.align	2
 102              	.L8:
 103 0014 00000000 		.word	.LC0
 104 0018 00000000 		.word	.LANCHOR0
 105              		.cfi_endproc
 106              	.LFE138:
 108              		.section	.text.MX_SPI1_Init,"ax",%progbits
 109              		.align	1
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 113              		.fpu fpv4-sp-d16
 115              	MX_SPI1_Init:
 116              	.LFB135:
 398:Src/main.c    **** 
 117              		.loc 1 398 1 view -0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 08B5     		push	{r3, lr}
 122              	.LCFI3:
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 3, -8
 125              		.cfi_offset 14, -4
 408:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 126              		.loc 1 408 3 view .LVU13
 408:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 127              		.loc 1 408 18 is_stmt 0 view .LVU14
 128 0002 0F48     		ldr	r0, .L14
 129 0004 0F4B     		ldr	r3, .L14+4
 130 0006 0360     		str	r3, [r0]
 409:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 131              		.loc 1 409 3 is_stmt 1 view .LVU15
 409:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 132              		.loc 1 409 19 is_stmt 0 view .LVU16
 133 0008 4FF48273 		mov	r3, #260
 134 000c 4360     		str	r3, [r0, #4]
ARM GAS  /tmp/ccnMLrqE.s 			page 12


 410:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 135              		.loc 1 410 3 is_stmt 1 view .LVU17
 410:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 136              		.loc 1 410 24 is_stmt 0 view .LVU18
 137 000e 0023     		movs	r3, #0
 138 0010 8360     		str	r3, [r0, #8]
 411:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 139              		.loc 1 411 3 is_stmt 1 view .LVU19
 411:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 140              		.loc 1 411 23 is_stmt 0 view .LVU20
 141 0012 4FF4E062 		mov	r2, #1792
 142 0016 C260     		str	r2, [r0, #12]
 412:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 143              		.loc 1 412 3 is_stmt 1 view .LVU21
 412:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 144              		.loc 1 412 26 is_stmt 0 view .LVU22
 145 0018 0361     		str	r3, [r0, #16]
 413:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 146              		.loc 1 413 3 is_stmt 1 view .LVU23
 413:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 147              		.loc 1 413 23 is_stmt 0 view .LVU24
 148 001a 4361     		str	r3, [r0, #20]
 414:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 149              		.loc 1 414 3 is_stmt 1 view .LVU25
 414:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 150              		.loc 1 414 18 is_stmt 0 view .LVU26
 151 001c 4FF48022 		mov	r2, #262144
 152 0020 8261     		str	r2, [r0, #24]
 415:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 153              		.loc 1 415 3 is_stmt 1 view .LVU27
 415:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 154              		.loc 1 415 32 is_stmt 0 view .LVU28
 155 0022 1022     		movs	r2, #16
 156 0024 C261     		str	r2, [r0, #28]
 416:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 157              		.loc 1 416 3 is_stmt 1 view .LVU29
 416:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 158              		.loc 1 416 23 is_stmt 0 view .LVU30
 159 0026 0362     		str	r3, [r0, #32]
 417:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 160              		.loc 1 417 3 is_stmt 1 view .LVU31
 417:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 161              		.loc 1 417 21 is_stmt 0 view .LVU32
 162 0028 4362     		str	r3, [r0, #36]
 418:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 163              		.loc 1 418 3 is_stmt 1 view .LVU33
 418:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 164              		.loc 1 418 29 is_stmt 0 view .LVU34
 165 002a 8362     		str	r3, [r0, #40]
 419:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 166              		.loc 1 419 3 is_stmt 1 view .LVU35
 419:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 167              		.loc 1 419 28 is_stmt 0 view .LVU36
 168 002c 0722     		movs	r2, #7
 169 002e C262     		str	r2, [r0, #44]
 420:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 170              		.loc 1 420 3 is_stmt 1 view .LVU37
ARM GAS  /tmp/ccnMLrqE.s 			page 13


 420:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 171              		.loc 1 420 24 is_stmt 0 view .LVU38
 172 0030 0363     		str	r3, [r0, #48]
 421:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 173              		.loc 1 421 3 is_stmt 1 view .LVU39
 421:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 174              		.loc 1 421 23 is_stmt 0 view .LVU40
 175 0032 4363     		str	r3, [r0, #52]
 422:Src/main.c    ****   {
 176              		.loc 1 422 3 is_stmt 1 view .LVU41
 422:Src/main.c    ****   {
 177              		.loc 1 422 7 is_stmt 0 view .LVU42
 178 0034 FFF7FEFF 		bl	HAL_SPI_Init
 179              	.LVL1:
 422:Src/main.c    ****   {
 180              		.loc 1 422 6 view .LVU43
 181 0038 00B9     		cbnz	r0, .L13
 429:Src/main.c    **** 
 182              		.loc 1 429 1 view .LVU44
 183 003a 08BD     		pop	{r3, pc}
 184              	.L13:
 424:Src/main.c    ****   }
 185              		.loc 1 424 5 is_stmt 1 view .LVU45
 186 003c FFF7FEFF 		bl	Error_Handler
 187              	.LVL2:
 188              	.L15:
 189              		.align	2
 190              	.L14:
 191 0040 00000000 		.word	.LANCHOR1
 192 0044 00300140 		.word	1073819648
 193              		.cfi_endproc
 194              	.LFE135:
 196              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 197              		.align	1
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	MX_USART2_UART_Init:
 204              	.LFB136:
 437:Src/main.c    **** 
 205              		.loc 1 437 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 08B5     		push	{r3, lr}
 210              	.LCFI4:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
 446:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 214              		.loc 1 446 3 view .LVU47
 446:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 215              		.loc 1 446 19 is_stmt 0 view .LVU48
 216 0002 0B48     		ldr	r0, .L20
 217 0004 0B4B     		ldr	r3, .L20+4
 218 0006 0360     		str	r3, [r0]
ARM GAS  /tmp/ccnMLrqE.s 			page 14


 447:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 219              		.loc 1 447 3 is_stmt 1 view .LVU49
 447:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 220              		.loc 1 447 24 is_stmt 0 view .LVU50
 221 0008 4FF4E133 		mov	r3, #115200
 222 000c 4360     		str	r3, [r0, #4]
 448:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 223              		.loc 1 448 3 is_stmt 1 view .LVU51
 448:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 224              		.loc 1 448 26 is_stmt 0 view .LVU52
 225 000e 0023     		movs	r3, #0
 226 0010 8360     		str	r3, [r0, #8]
 449:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 227              		.loc 1 449 3 is_stmt 1 view .LVU53
 449:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 228              		.loc 1 449 24 is_stmt 0 view .LVU54
 229 0012 C360     		str	r3, [r0, #12]
 450:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 230              		.loc 1 450 3 is_stmt 1 view .LVU55
 450:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 231              		.loc 1 450 22 is_stmt 0 view .LVU56
 232 0014 0361     		str	r3, [r0, #16]
 451:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 233              		.loc 1 451 3 is_stmt 1 view .LVU57
 451:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 234              		.loc 1 451 20 is_stmt 0 view .LVU58
 235 0016 0C22     		movs	r2, #12
 236 0018 4261     		str	r2, [r0, #20]
 452:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 237              		.loc 1 452 3 is_stmt 1 view .LVU59
 452:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 238              		.loc 1 452 25 is_stmt 0 view .LVU60
 239 001a 8361     		str	r3, [r0, #24]
 453:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 240              		.loc 1 453 3 is_stmt 1 view .LVU61
 453:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 241              		.loc 1 453 28 is_stmt 0 view .LVU62
 242 001c C361     		str	r3, [r0, #28]
 454:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 243              		.loc 1 454 3 is_stmt 1 view .LVU63
 454:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 244              		.loc 1 454 30 is_stmt 0 view .LVU64
 245 001e 0362     		str	r3, [r0, #32]
 455:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 246              		.loc 1 455 3 is_stmt 1 view .LVU65
 455:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 247              		.loc 1 455 38 is_stmt 0 view .LVU66
 248 0020 4362     		str	r3, [r0, #36]
 456:Src/main.c    ****   {
 249              		.loc 1 456 3 is_stmt 1 view .LVU67
 456:Src/main.c    ****   {
 250              		.loc 1 456 7 is_stmt 0 view .LVU68
 251 0022 FFF7FEFF 		bl	HAL_UART_Init
 252              	.LVL3:
 456:Src/main.c    ****   {
 253              		.loc 1 456 6 view .LVU69
 254 0026 00B9     		cbnz	r0, .L19
ARM GAS  /tmp/ccnMLrqE.s 			page 15


 463:Src/main.c    **** 
 255              		.loc 1 463 1 view .LVU70
 256 0028 08BD     		pop	{r3, pc}
 257              	.L19:
 458:Src/main.c    ****   }
 258              		.loc 1 458 5 is_stmt 1 view .LVU71
 259 002a FFF7FEFF 		bl	Error_Handler
 260              	.LVL4:
 261              	.L21:
 262 002e 00BF     		.align	2
 263              	.L20:
 264 0030 00000000 		.word	.LANCHOR0
 265 0034 00440040 		.word	1073759232
 266              		.cfi_endproc
 267              	.LFE136:
 269              		.section	.text.SystemClock_Config,"ax",%progbits
 270              		.align	1
 271              		.global	SystemClock_Config
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 275              		.fpu fpv4-sp-d16
 277              	SystemClock_Config:
 278              	.LFB134:
 344:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 279              		.loc 1 344 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 224
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283 0000 00B5     		push	{lr}
 284              	.LCFI5:
 285              		.cfi_def_cfa_offset 4
 286              		.cfi_offset 14, -4
 287 0002 B9B0     		sub	sp, sp, #228
 288              	.LCFI6:
 289              		.cfi_def_cfa_offset 232
 345:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 290              		.loc 1 345 3 view .LVU73
 345:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 291              		.loc 1 345 22 is_stmt 0 view .LVU74
 292 0004 4422     		movs	r2, #68
 293 0006 0021     		movs	r1, #0
 294 0008 27A8     		add	r0, sp, #156
 295 000a FFF7FEFF 		bl	memset
 296              	.LVL5:
 346:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 297              		.loc 1 346 3 is_stmt 1 view .LVU75
 346:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 298              		.loc 1 346 22 is_stmt 0 view .LVU76
 299 000e 0021     		movs	r1, #0
 300 0010 2291     		str	r1, [sp, #136]
 301 0012 2391     		str	r1, [sp, #140]
 302 0014 2491     		str	r1, [sp, #144]
 303 0016 2591     		str	r1, [sp, #148]
 304 0018 2691     		str	r1, [sp, #152]
 347:Src/main.c    **** 
 305              		.loc 1 347 3 is_stmt 1 view .LVU77
ARM GAS  /tmp/ccnMLrqE.s 			page 16


 347:Src/main.c    **** 
 306              		.loc 1 347 28 is_stmt 0 view .LVU78
 307 001a 8822     		movs	r2, #136
 308 001c 6846     		mov	r0, sp
 309 001e FFF7FEFF 		bl	memset
 310              	.LVL6:
 351:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 311              		.loc 1 351 3 is_stmt 1 view .LVU79
 351:Src/main.c    ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 312              		.loc 1 351 36 is_stmt 0 view .LVU80
 313 0022 1023     		movs	r3, #16
 314 0024 2793     		str	r3, [sp, #156]
 352:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 315              		.loc 1 352 3 is_stmt 1 view .LVU81
 352:Src/main.c    ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 316              		.loc 1 352 30 is_stmt 0 view .LVU82
 317 0026 0122     		movs	r2, #1
 318 0028 2D92     		str	r2, [sp, #180]
 353:Src/main.c    ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 319              		.loc 1 353 3 is_stmt 1 view .LVU83
 354:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 320              		.loc 1 354 3 view .LVU84
 354:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 321              		.loc 1 354 35 is_stmt 0 view .LVU85
 322 002a 6023     		movs	r3, #96
 323 002c 2F93     		str	r3, [sp, #188]
 355:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 324              		.loc 1 355 3 is_stmt 1 view .LVU86
 355:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 325              		.loc 1 355 34 is_stmt 0 view .LVU87
 326 002e 0223     		movs	r3, #2
 327 0030 3193     		str	r3, [sp, #196]
 356:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 328              		.loc 1 356 3 is_stmt 1 view .LVU88
 356:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 329              		.loc 1 356 35 is_stmt 0 view .LVU89
 330 0032 3292     		str	r2, [sp, #200]
 357:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 32;
 331              		.loc 1 357 3 is_stmt 1 view .LVU90
 357:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 32;
 332              		.loc 1 357 30 is_stmt 0 view .LVU91
 333 0034 3392     		str	r2, [sp, #204]
 358:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 334              		.loc 1 358 3 is_stmt 1 view .LVU92
 358:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 335              		.loc 1 358 30 is_stmt 0 view .LVU93
 336 0036 2022     		movs	r2, #32
 337 0038 3492     		str	r2, [sp, #208]
 359:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 338              		.loc 1 359 3 is_stmt 1 view .LVU94
 359:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 339              		.loc 1 359 30 is_stmt 0 view .LVU95
 340 003a 0722     		movs	r2, #7
 341 003c 3592     		str	r2, [sp, #212]
 360:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 342              		.loc 1 360 3 is_stmt 1 view .LVU96
 360:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
ARM GAS  /tmp/ccnMLrqE.s 			page 17


 343              		.loc 1 360 30 is_stmt 0 view .LVU97
 344 003e 3693     		str	r3, [sp, #216]
 361:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 345              		.loc 1 361 3 is_stmt 1 view .LVU98
 361:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 346              		.loc 1 361 30 is_stmt 0 view .LVU99
 347 0040 3793     		str	r3, [sp, #220]
 362:Src/main.c    ****   {
 348              		.loc 1 362 3 is_stmt 1 view .LVU100
 362:Src/main.c    ****   {
 349              		.loc 1 362 7 is_stmt 0 view .LVU101
 350 0042 27A8     		add	r0, sp, #156
 351 0044 FFF7FEFF 		bl	HAL_RCC_OscConfig
 352              	.LVL7:
 362:Src/main.c    ****   {
 353              		.loc 1 362 6 view .LVU102
 354 0048 D8B9     		cbnz	r0, .L28
 368:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 355              		.loc 1 368 3 is_stmt 1 view .LVU103
 368:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 356              		.loc 1 368 31 is_stmt 0 view .LVU104
 357 004a 0F23     		movs	r3, #15
 358 004c 2293     		str	r3, [sp, #136]
 369:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 359              		.loc 1 369 3 is_stmt 1 view .LVU105
 369:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 360              		.loc 1 369 34 is_stmt 0 view .LVU106
 361 004e 0321     		movs	r1, #3
 362 0050 2391     		str	r1, [sp, #140]
 370:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 363              		.loc 1 370 3 is_stmt 1 view .LVU107
 370:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 364              		.loc 1 370 35 is_stmt 0 view .LVU108
 365 0052 0023     		movs	r3, #0
 366 0054 2493     		str	r3, [sp, #144]
 371:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 367              		.loc 1 371 3 is_stmt 1 view .LVU109
 371:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 368              		.loc 1 371 36 is_stmt 0 view .LVU110
 369 0056 2593     		str	r3, [sp, #148]
 372:Src/main.c    **** 
 370              		.loc 1 372 3 is_stmt 1 view .LVU111
 372:Src/main.c    **** 
 371              		.loc 1 372 36 is_stmt 0 view .LVU112
 372 0058 2693     		str	r3, [sp, #152]
 374:Src/main.c    ****   {
 373              		.loc 1 374 3 is_stmt 1 view .LVU113
 374:Src/main.c    ****   {
 374              		.loc 1 374 7 is_stmt 0 view .LVU114
 375 005a 22A8     		add	r0, sp, #136
 376 005c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 377              	.LVL8:
 374:Src/main.c    ****   {
 378              		.loc 1 374 6 view .LVU115
 379 0060 88B9     		cbnz	r0, .L29
 378:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 380              		.loc 1 378 3 is_stmt 1 view .LVU116
ARM GAS  /tmp/ccnMLrqE.s 			page 18


 378:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 381              		.loc 1 378 38 is_stmt 0 view .LVU117
 382 0062 0223     		movs	r3, #2
 383 0064 0093     		str	r3, [sp]
 379:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 384              		.loc 1 379 3 is_stmt 1 view .LVU118
 379:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 385              		.loc 1 379 38 is_stmt 0 view .LVU119
 386 0066 0023     		movs	r3, #0
 387 0068 0F93     		str	r3, [sp, #60]
 380:Src/main.c    ****   {
 388              		.loc 1 380 3 is_stmt 1 view .LVU120
 380:Src/main.c    ****   {
 389              		.loc 1 380 7 is_stmt 0 view .LVU121
 390 006a 6846     		mov	r0, sp
 391 006c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 392              	.LVL9:
 380:Src/main.c    ****   {
 393              		.loc 1 380 6 view .LVU122
 394 0070 58B9     		cbnz	r0, .L30
 386:Src/main.c    ****   {
 395              		.loc 1 386 3 is_stmt 1 view .LVU123
 386:Src/main.c    ****   {
 396              		.loc 1 386 7 is_stmt 0 view .LVU124
 397 0072 4FF40070 		mov	r0, #512
 398 0076 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 399              	.LVL10:
 386:Src/main.c    ****   {
 400              		.loc 1 386 6 view .LVU125
 401 007a 40B9     		cbnz	r0, .L31
 390:Src/main.c    **** 
 402              		.loc 1 390 1 view .LVU126
 403 007c 39B0     		add	sp, sp, #228
 404              	.LCFI7:
 405              		.cfi_remember_state
 406              		.cfi_def_cfa_offset 4
 407              		@ sp needed
 408 007e 5DF804FB 		ldr	pc, [sp], #4
 409              	.L28:
 410              	.LCFI8:
 411              		.cfi_restore_state
 364:Src/main.c    ****   }
 412              		.loc 1 364 5 is_stmt 1 view .LVU127
 413 0082 FFF7FEFF 		bl	Error_Handler
 414              	.LVL11:
 415              	.L29:
 376:Src/main.c    ****   }
 416              		.loc 1 376 5 view .LVU128
 417 0086 FFF7FEFF 		bl	Error_Handler
 418              	.LVL12:
 419              	.L30:
 382:Src/main.c    ****   }
 420              		.loc 1 382 5 view .LVU129
 421 008a FFF7FEFF 		bl	Error_Handler
 422              	.LVL13:
 423              	.L31:
 388:Src/main.c    ****   }
ARM GAS  /tmp/ccnMLrqE.s 			page 19


 424              		.loc 1 388 5 view .LVU130
 425 008e FFF7FEFF 		bl	Error_Handler
 426              	.LVL14:
 427              		.cfi_endproc
 428              	.LFE134:
 430              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 431              		.align	2
 432              	.LC1:
 433 0000 52455350 		.ascii	"RESP_OF_SYNC: %02x\015\012\000"
 433      5F4F465F 
 433      53594E43 
 433      3A202530 
 433      32780D0A 
 434 0015 000000   		.align	2
 435              	.LC2:
 436 0018 41434B5F 		.ascii	"ACK_OF_SYNC: %02x || %02x || %02x\015\012\000"
 436      4F465F53 
 436      594E433A 
 436      20253032 
 436      78207C7C 
 437              		.align	2
 438              	.LC3:
 439 003c 52455350 		.ascii	"RESP_OF_CMD_ER: %02x || %02x || %02x\015\012\000"
 439      5F4F465F 
 439      434D445F 
 439      45523A20 
 439      25303278 
 440 0063 00       		.align	2
 441              	.LC4:
 442 0064 41434B5F 		.ascii	"ACK_OF_CMD_ER: %02x || %02x || %02x\015\012\000"
 442      4F465F43 
 442      4D445F45 
 442      523A2025 
 442      30327820 
 443 008a 0000     		.align	2
 444              	.LC5:
 445 008c 52455350 		.ascii	"RESP_OF_ERASE: %02x || %02x || %02x\015\012\000"
 445      5F4F465F 
 445      45524153 
 445      453A2025 
 445      30327820 
 446 00b2 0000     		.align	2
 447              	.LC6:
 448 00b4 41434B5F 		.ascii	"ACK_OF_ERASE: %02x || %02x || %02x\015\012\000"
 448      4F465F45 
 448      52415345 
 448      3A202530 
 448      3278207C 
 449 00d9 000000   		.align	2
 450              	.LC7:
 451 00dc 52455350 		.ascii	"RESP_OF_CMD_WR: %02x || %02x || %02x\015\012\000"
 451      5F4F465F 
 451      434D445F 
 451      57523A20 
 451      25303278 
 452 0103 00       		.align	2
 453              	.LC8:
ARM GAS  /tmp/ccnMLrqE.s 			page 20


 454 0104 41434B5F 		.ascii	"ACK_OF_CMD_WR: %02x || %02x || %02x\015\012\000"
 454      4F465F43 
 454      4D445F57 
 454      523A2025 
 454      30327820 
 455 012a 0000     		.align	2
 456              	.LC9:
 457 012c 52455350 		.ascii	"RESP_OF_ADD: %02x || %02x || %02x || %02x || %02x\015"
 457      5F4F465F 
 457      4144443A 
 457      20253032 
 457      78207C7C 
 458 015e 0A00     		.ascii	"\012\000"
 459              		.align	2
 460              	.LC10:
 461 0160 41444452 		.ascii	"ADDRESS: %02x || %02x || %02x || %02x\015\012\000"
 461      4553533A 
 461      20253032 
 461      78207C7C 
 461      20253032 
 462              		.align	2
 463              	.LC11:
 464 0188 41434B5F 		.ascii	"ACK_OF_ADD: %02x || %02x || %02x\015\012\000"
 464      4F465F41 
 464      44443A20 
 464      25303278 
 464      207C7C20 
 465 01ab 00       		.align	2
 466              	.LC12:
 467 01ac 44415441 		.ascii	"DATA_DATA: %02x\015\012\000"
 467      5F444154 
 467      413A2025 
 467      3032780D 
 467      0A00
 468 01be 0000     		.align	2
 469              	.LC13:
 470 01c0 584F525F 		.ascii	"XOR_OF_ADD: %02x\015\012\000"
 470      4F465F41 
 470      44443A20 
 470      25303278 
 470      0D0A00
 471 01d3 00       		.align	2
 472              	.LC14:
 473 01d4 52455350 		.ascii	"RESP_OF_DATA: %02x || %02x || %02x || %02x\015\012\000"
 473      5F4F465F 
 473      44415441 
 473      3A202530 
 473      3278207C 
 474 0201 000000   		.align	2
 475              	.LC15:
 476 0204 41434B5F 		.ascii	"ACK_OF_DATA: %02x || %02x || %02x\015\012\000"
 476      4F465F44 
 476      4154413A 
 476      20253032 
 476      78207C7C 
 477              		.align	2
 478              	.LC16:
ARM GAS  /tmp/ccnMLrqE.s 			page 21


 479 0228 6C656E3A 		.ascii	"len: %d, %d\015\012\000"
 479      2025642C 
 479      2025640D 
 479      0A00
 480 0236 0000     		.align	2
 481              	.LC17:
 482 0238 696E6465 		.ascii	"index: %d, %d\015\012\000"
 482      783A2025 
 482      642C2025 
 482      640D0A00 
 483              		.section	.text.main,"ax",%progbits
 484              		.align	1
 485              		.global	main
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 489              		.fpu fpv4-sp-d16
 491              	main:
 492              	.LFB133:
  73:Src/main.c    ****   /* USER CODE BEGIN 1 */
 493              		.loc 1 73 1 view -0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 208
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 498              	.LCFI9:
 499              		.cfi_def_cfa_offset 36
 500              		.cfi_offset 4, -36
 501              		.cfi_offset 5, -32
 502              		.cfi_offset 6, -28
 503              		.cfi_offset 7, -24
 504              		.cfi_offset 8, -20
 505              		.cfi_offset 9, -16
 506              		.cfi_offset 10, -12
 507              		.cfi_offset 11, -8
 508              		.cfi_offset 14, -4
 509 0004 B9B0     		sub	sp, sp, #228
 510              	.LCFI10:
 511              		.cfi_def_cfa_offset 264
  80:Src/main.c    **** 
 512              		.loc 1 80 3 view .LVU132
 513 0006 FFF7FEFF 		bl	HAL_Init
 514              	.LVL15:
  87:Src/main.c    **** 
 515              		.loc 1 87 3 view .LVU133
 516 000a FFF7FEFF 		bl	SystemClock_Config
 517              	.LVL16:
  94:Src/main.c    ****   MX_SPI1_Init();
 518              		.loc 1 94 3 view .LVU134
 519 000e FFF7FEFF 		bl	MX_GPIO_Init
 520              	.LVL17:
  95:Src/main.c    ****   MX_USART2_UART_Init();
 521              		.loc 1 95 3 view .LVU135
 522 0012 FFF7FEFF 		bl	MX_SPI1_Init
 523              	.LVL18:
  96:Src/main.c    ****   /* USER CODE BEGIN 2 */
 524              		.loc 1 96 3 view .LVU136
ARM GAS  /tmp/ccnMLrqE.s 			page 22


 525 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
 526              	.LVL19:
 103:Src/main.c    ****   int arr_aaaa_length = sizeof(arr_aaaa) / sizeof(arr_aaaa[0]);
 527              		.loc 1 103 3 view .LVU137
 104:Src/main.c    ****   int sync_flag = 0;
 528              		.loc 1 104 3 view .LVU138
 105:Src/main.c    ****   int dd_index = 0;
 529              		.loc 1 105 3 view .LVU139
 106:Src/main.c    ****   int dd_add = 0;
 530              		.loc 1 106 3 view .LVU140
 107:Src/main.c    ****   int aaaa_index = 0;
 531              		.loc 1 107 3 view .LVU141
 108:Src/main.c    ****   uint8_t ack_frame[3];
 532              		.loc 1 108 3 view .LVU142
 109:Src/main.c    ****   uint8_t ack_resp[3];
 533              		.loc 1 109 3 view .LVU143
 110:Src/main.c    ****   int flag_stop = 0;
 534              		.loc 1 110 3 view .LVU144
 111:Src/main.c    **** 
 535              		.loc 1 111 3 view .LVU145
 105:Src/main.c    ****   int dd_index = 0;
 536              		.loc 1 105 7 is_stmt 0 view .LVU146
 537 001a 4FF0000B 		mov	fp, #0
 538 001e 5D46     		mov	r5, fp
 539 0020 3BE0     		b	.L33
 540              	.LVL20:
 541              	.L66:
 542              	.LBB3:
 119:Src/main.c    ****       uint8_t sync_resp[1];
 543              		.loc 1 119 7 is_stmt 1 view .LVU147
 120:Src/main.c    ****       sync_frame[0] = 0x5A;
 544              		.loc 1 120 7 view .LVU148
 121:Src/main.c    ****       while (hspi1.State != HAL_SPI_STATE_READY)
 545              		.loc 1 121 7 view .LVU149
 121:Src/main.c    ****       while (hspi1.State != HAL_SPI_STATE_READY)
 546              		.loc 1 121 21 is_stmt 0 view .LVU150
 547 0022 5A23     		movs	r3, #90
 548 0024 8DF84C30 		strb	r3, [sp, #76]
 122:Src/main.c    ****         ;
 549              		.loc 1 122 7 is_stmt 1 view .LVU151
 550              	.L35:
 123:Src/main.c    ****       HAL_SPI_TransmitReceive(&hspi1, sync_frame, &sync_resp, 1, 1000);
 551              		.loc 1 123 9 discriminator 1 view .LVU152
 122:Src/main.c    ****         ;
 552              		.loc 1 122 13 discriminator 1 view .LVU153
 122:Src/main.c    ****         ;
 553              		.loc 1 122 19 is_stmt 0 discriminator 1 view .LVU154
 554 0028 A04B     		ldr	r3, .L69
 555 002a 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
 556 002e DBB2     		uxtb	r3, r3
 122:Src/main.c    ****         ;
 557              		.loc 1 122 13 discriminator 1 view .LVU155
 558 0030 012B     		cmp	r3, #1
 559 0032 F9D1     		bne	.L35
 124:Src/main.c    ****       sprintf(txt, "RESP_OF_SYNC: %02x\r\n", sync_resp[0]);
 560              		.loc 1 124 7 is_stmt 1 view .LVU156
 561 0034 4FF47A74 		mov	r4, #1000
ARM GAS  /tmp/ccnMLrqE.s 			page 23


 562 0038 0094     		str	r4, [sp]
 563 003a 18AA     		add	r2, sp, #96
 564 003c 13A9     		add	r1, sp, #76
 565 003e 9B48     		ldr	r0, .L69
 566 0040 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 567              	.LVL21:
 125:Src/main.c    ****       HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 568              		.loc 1 125 7 view .LVU157
 569 0044 9DF86020 		ldrb	r2, [sp, #96]	@ zero_extendqisi2
 570 0048 9949     		ldr	r1, .L69+4
 571 004a 1FA8     		add	r0, sp, #124
 572 004c FFF7FEFF 		bl	sprintf
 573              	.LVL22:
 126:Src/main.c    **** 
 574              		.loc 1 126 7 view .LVU158
 126:Src/main.c    **** 
 575              		.loc 1 126 50 is_stmt 0 view .LVU159
 576 0050 1FA8     		add	r0, sp, #124
 577 0052 FFF7FEFF 		bl	strlen
 578              	.LVL23:
 126:Src/main.c    **** 
 579              		.loc 1 126 7 view .LVU160
 580 0056 2346     		mov	r3, r4
 581 0058 82B2     		uxth	r2, r0
 582 005a 1FA9     		add	r1, sp, #124
 583 005c 9548     		ldr	r0, .L69+8
 584 005e FFF7FEFF 		bl	HAL_UART_Transmit
 585              	.LVL24:
 129:Src/main.c    ****       ack_frame[1] = 0xFF;
 586              		.loc 1 129 7 is_stmt 1 view .LVU161
 129:Src/main.c    ****       ack_frame[1] = 0xFF;
 587              		.loc 1 129 20 is_stmt 0 view .LVU162
 588 0062 0023     		movs	r3, #0
 589 0064 8DF87830 		strb	r3, [sp, #120]
 130:Src/main.c    ****       ack_frame[2] = 0x79;
 590              		.loc 1 130 7 is_stmt 1 view .LVU163
 130:Src/main.c    ****       ack_frame[2] = 0x79;
 591              		.loc 1 130 20 is_stmt 0 view .LVU164
 592 0068 FF23     		movs	r3, #255
 593 006a 8DF87930 		strb	r3, [sp, #121]
 131:Src/main.c    ****       while (hspi1.State != HAL_SPI_STATE_READY)
 594              		.loc 1 131 7 is_stmt 1 view .LVU165
 131:Src/main.c    ****       while (hspi1.State != HAL_SPI_STATE_READY)
 595              		.loc 1 131 20 is_stmt 0 view .LVU166
 596 006e 7923     		movs	r3, #121
 597 0070 8DF87A30 		strb	r3, [sp, #122]
 132:Src/main.c    ****         ;
 598              		.loc 1 132 7 is_stmt 1 view .LVU167
 599              	.L36:
 133:Src/main.c    ****       HAL_SPI_TransmitReceive(&hspi1, ack_frame, &ack_resp, 3, 1000);
 600              		.loc 1 133 9 discriminator 1 view .LVU168
 132:Src/main.c    ****         ;
 601              		.loc 1 132 13 discriminator 1 view .LVU169
 132:Src/main.c    ****         ;
 602              		.loc 1 132 19 is_stmt 0 discriminator 1 view .LVU170
 603 0074 8D4B     		ldr	r3, .L69
 604 0076 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
ARM GAS  /tmp/ccnMLrqE.s 			page 24


 605 007a DBB2     		uxtb	r3, r3
 132:Src/main.c    ****         ;
 606              		.loc 1 132 13 discriminator 1 view .LVU171
 607 007c 012B     		cmp	r3, #1
 608 007e F9D1     		bne	.L36
 134:Src/main.c    ****       if (sync_resp[0] == 0xA5 && ack_resp[1] == 0x79)
 609              		.loc 1 134 7 is_stmt 1 view .LVU172
 610 0080 4FF47A73 		mov	r3, #1000
 611 0084 0093     		str	r3, [sp]
 612 0086 0323     		movs	r3, #3
 613 0088 1DAA     		add	r2, sp, #116
 614 008a 1EA9     		add	r1, sp, #120
 615 008c 8748     		ldr	r0, .L69
 616 008e FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 617              	.LVL25:
 135:Src/main.c    ****       {
 618              		.loc 1 135 7 view .LVU173
 135:Src/main.c    ****       {
 619              		.loc 1 135 20 is_stmt 0 view .LVU174
 620 0092 9DF86030 		ldrb	r3, [sp, #96]	@ zero_extendqisi2
 135:Src/main.c    ****       {
 621              		.loc 1 135 10 view .LVU175
 622 0096 A52B     		cmp	r3, #165
 623 0098 0DD0     		beq	.L65
 624              	.LVL26:
 625              	.L33:
 135:Src/main.c    ****       {
 626              		.loc 1 135 10 view .LVU176
 627              	.LBE3:
 113:Src/main.c    ****   {
 628              		.loc 1 113 3 is_stmt 1 view .LVU177
 115:Src/main.c    ****     {
 629              		.loc 1 115 5 view .LVU178
 115:Src/main.c    ****     {
 630              		.loc 1 115 8 is_stmt 0 view .LVU179
 631 009a 002D     		cmp	r5, #0
 632 009c C1D0     		beq	.L66
 142:Src/main.c    ****     {
 633              		.loc 1 142 10 is_stmt 1 view .LVU180
 142:Src/main.c    ****     {
 634              		.loc 1 142 13 is_stmt 0 view .LVU181
 635 009e 012D     		cmp	r5, #1
 636 00a0 22D0     		beq	.L67
 190:Src/main.c    ****     {
 637              		.loc 1 190 10 is_stmt 1 view .LVU182
 190:Src/main.c    ****     {
 638              		.loc 1 190 29 is_stmt 0 view .LVU183
 639 00a2 AB1E     		subs	r3, r5, #2
 190:Src/main.c    ****     {
 640              		.loc 1 190 13 view .LVU184
 641 00a4 012B     		cmp	r3, #1
 642 00a6 F8D8     		bhi	.L33
 643              	.LBB4:
 194:Src/main.c    **** 
 644              		.loc 1 194 20 view .LVU185
 645 00a8 AB46     		mov	fp, r5
 193:Src/main.c    ****       data_resp[3] = 0x00;
ARM GAS  /tmp/ccnMLrqE.s 			page 25


 646              		.loc 1 193 7 is_stmt 1 view .LVU186
 194:Src/main.c    **** 
 647              		.loc 1 194 7 view .LVU187
 194:Src/main.c    **** 
 648              		.loc 1 194 20 is_stmt 0 view .LVU188
 649 00aa 4FF00009 		mov	r9, #0
 650 00ae 8DF86390 		strb	r9, [sp, #99]
 196:Src/main.c    ****       {
 651              		.loc 1 196 7 is_stmt 1 view .LVU189
 196:Src/main.c    ****       {
 652              		.loc 1 196 13 is_stmt 0 view .LVU190
 653 00b2 CA46     		mov	r10, r9
 654 00b4 ADE1     		b	.L45
 655              	.L65:
 196:Src/main.c    ****       {
 656              		.loc 1 196 13 view .LVU191
 657              	.LBE4:
 658              	.LBB16:
 135:Src/main.c    ****       {
 659              		.loc 1 135 43 discriminator 1 view .LVU192
 660 00b6 9DF87530 		ldrb	r3, [sp, #117]	@ zero_extendqisi2
 135:Src/main.c    ****       {
 661              		.loc 1 135 32 discriminator 1 view .LVU193
 662 00ba 792B     		cmp	r3, #121
 663 00bc EDD1     		bne	.L33
 137:Src/main.c    ****         sprintf(txt, "ACK_OF_SYNC: %02x || %02x || %02x\r\n", ack_resp[0], ack_resp[1], ack_resp[2]
 664              		.loc 1 137 9 is_stmt 1 view .LVU194
 665              	.LVL27:
 138:Src/main.c    ****         HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 666              		.loc 1 138 9 view .LVU195
 138:Src/main.c    ****         HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 667              		.loc 1 138 97 is_stmt 0 view .LVU196
 668 00be 9DF87620 		ldrb	r2, [sp, #118]	@ zero_extendqisi2
 138:Src/main.c    ****         HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 669              		.loc 1 138 9 view .LVU197
 670 00c2 0092     		str	r2, [sp]
 671 00c4 9DF87420 		ldrb	r2, [sp, #116]	@ zero_extendqisi2
 672 00c8 7B49     		ldr	r1, .L69+12
 673 00ca 1FA8     		add	r0, sp, #124
 674 00cc FFF7FEFF 		bl	sprintf
 675              	.LVL28:
 139:Src/main.c    ****       }
 676              		.loc 1 139 9 is_stmt 1 view .LVU198
 139:Src/main.c    ****       }
 677              		.loc 1 139 52 is_stmt 0 view .LVU199
 678 00d0 1FA8     		add	r0, sp, #124
 679 00d2 FFF7FEFF 		bl	strlen
 680              	.LVL29:
 139:Src/main.c    ****       }
 681              		.loc 1 139 9 view .LVU200
 682 00d6 4FF47A73 		mov	r3, #1000
 683 00da 82B2     		uxth	r2, r0
 684 00dc 1FA9     		add	r1, sp, #124
 685 00de 7548     		ldr	r0, .L69+8
 686 00e0 FFF7FEFF 		bl	HAL_UART_Transmit
 687              	.LVL30:
 137:Src/main.c    ****         sprintf(txt, "ACK_OF_SYNC: %02x || %02x || %02x\r\n", ack_resp[0], ack_resp[1], ack_resp[2]
ARM GAS  /tmp/ccnMLrqE.s 			page 26


 688              		.loc 1 137 19 view .LVU201
 689 00e4 0125     		movs	r5, #1
 137:Src/main.c    ****         sprintf(txt, "ACK_OF_SYNC: %02x || %02x || %02x\r\n", ack_resp[0], ack_resp[1], ack_resp[2]
 690              		.loc 1 137 19 view .LVU202
 691 00e6 D8E7     		b	.L33
 692              	.LVL31:
 693              	.L67:
 137:Src/main.c    ****         sprintf(txt, "ACK_OF_SYNC: %02x || %02x || %02x\r\n", ack_resp[0], ack_resp[1], ack_resp[2]
 694              		.loc 1 137 19 view .LVU203
 695              	.LBE16:
 696              	.LBB17:
 145:Src/main.c    ****       uint8_t cmd_resp[3];
 697              		.loc 1 145 7 is_stmt 1 view .LVU204
 146:Src/main.c    ****       cmd_frame[0] = 0x5A;
 698              		.loc 1 146 7 view .LVU205
 147:Src/main.c    ****       cmd_frame[1] = 0x44;
 699              		.loc 1 147 7 view .LVU206
 147:Src/main.c    ****       cmd_frame[1] = 0x44;
 700              		.loc 1 147 20 is_stmt 0 view .LVU207
 701 00e8 5A23     		movs	r3, #90
 702 00ea 8DF83030 		strb	r3, [sp, #48]
 148:Src/main.c    ****       cmd_frame[2] = 0xBB;
 703              		.loc 1 148 7 is_stmt 1 view .LVU208
 148:Src/main.c    ****       cmd_frame[2] = 0xBB;
 704              		.loc 1 148 20 is_stmt 0 view .LVU209
 705 00ee 4423     		movs	r3, #68
 706 00f0 8DF83130 		strb	r3, [sp, #49]
 149:Src/main.c    ****       while (hspi1.State != HAL_SPI_STATE_READY)
 707              		.loc 1 149 7 is_stmt 1 view .LVU210
 149:Src/main.c    ****       while (hspi1.State != HAL_SPI_STATE_READY)
 708              		.loc 1 149 20 is_stmt 0 view .LVU211
 709 00f4 BB23     		movs	r3, #187
 710 00f6 8DF83230 		strb	r3, [sp, #50]
 150:Src/main.c    ****         ;
 711              		.loc 1 150 7 is_stmt 1 view .LVU212
 712              	.L40:
 151:Src/main.c    ****       HAL_SPI_TransmitReceive(&hspi1, cmd_frame, &cmd_resp, 3, 1000);
 713              		.loc 1 151 9 discriminator 1 view .LVU213
 150:Src/main.c    ****         ;
 714              		.loc 1 150 13 discriminator 1 view .LVU214
 150:Src/main.c    ****         ;
 715              		.loc 1 150 19 is_stmt 0 discriminator 1 view .LVU215
 716 00fa 6C4B     		ldr	r3, .L69
 717 00fc 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
 718 0100 DBB2     		uxtb	r3, r3
 150:Src/main.c    ****         ;
 719              		.loc 1 150 13 discriminator 1 view .LVU216
 720 0102 012B     		cmp	r3, #1
 721 0104 F9D1     		bne	.L40
 152:Src/main.c    **** 
 722              		.loc 1 152 7 is_stmt 1 view .LVU217
 723 0106 4FF47A74 		mov	r4, #1000
 724 010a 0094     		str	r4, [sp]
 725 010c 0323     		movs	r3, #3
 726 010e 0EAA     		add	r2, sp, #56
 727 0110 0CA9     		add	r1, sp, #48
 728 0112 6648     		ldr	r0, .L69
ARM GAS  /tmp/ccnMLrqE.s 			page 27


 729 0114 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 730              	.LVL32:
 154:Src/main.c    ****       HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 731              		.loc 1 154 7 view .LVU218
 154:Src/main.c    ****       HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 732              		.loc 1 154 98 is_stmt 0 view .LVU219
 733 0118 9DF83A30 		ldrb	r3, [sp, #58]	@ zero_extendqisi2
 154:Src/main.c    ****       HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 734              		.loc 1 154 7 view .LVU220
 735 011c 0093     		str	r3, [sp]
 736 011e 9DF83930 		ldrb	r3, [sp, #57]	@ zero_extendqisi2
 737 0122 9DF83820 		ldrb	r2, [sp, #56]	@ zero_extendqisi2
 738 0126 6549     		ldr	r1, .L69+16
 739 0128 1FA8     		add	r0, sp, #124
 740 012a FFF7FEFF 		bl	sprintf
 741              	.LVL33:
 155:Src/main.c    **** 
 742              		.loc 1 155 7 is_stmt 1 view .LVU221
 155:Src/main.c    **** 
 743              		.loc 1 155 50 is_stmt 0 view .LVU222
 744 012e 1FA8     		add	r0, sp, #124
 745 0130 FFF7FEFF 		bl	strlen
 746              	.LVL34:
 155:Src/main.c    **** 
 747              		.loc 1 155 7 view .LVU223
 748 0134 2346     		mov	r3, r4
 749 0136 82B2     		uxth	r2, r0
 750 0138 1FA9     		add	r1, sp, #124
 751 013a 5E48     		ldr	r0, .L69+8
 752 013c FFF7FEFF 		bl	HAL_UART_Transmit
 753              	.LVL35:
 157:Src/main.c    ****       ack_frame[1] = 0x00;
 754              		.loc 1 157 7 is_stmt 1 view .LVU224
 157:Src/main.c    ****       ack_frame[1] = 0x00;
 755              		.loc 1 157 20 is_stmt 0 view .LVU225
 756 0140 0023     		movs	r3, #0
 757 0142 8DF87830 		strb	r3, [sp, #120]
 158:Src/main.c    ****       ack_frame[2] = 0x79;
 758              		.loc 1 158 7 is_stmt 1 view .LVU226
 158:Src/main.c    ****       ack_frame[2] = 0x79;
 759              		.loc 1 158 20 is_stmt 0 view .LVU227
 760 0146 8DF87930 		strb	r3, [sp, #121]
 159:Src/main.c    ****       while (hspi1.State != HAL_SPI_STATE_READY)
 761              		.loc 1 159 7 is_stmt 1 view .LVU228
 159:Src/main.c    ****       while (hspi1.State != HAL_SPI_STATE_READY)
 762              		.loc 1 159 20 is_stmt 0 view .LVU229
 763 014a 7923     		movs	r3, #121
 764 014c 8DF87A30 		strb	r3, [sp, #122]
 160:Src/main.c    ****         ;
 765              		.loc 1 160 7 is_stmt 1 view .LVU230
 766              	.L41:
 161:Src/main.c    ****       HAL_SPI_TransmitReceive(&hspi1, ack_frame, &ack_resp, 3, 1000);
 767              		.loc 1 161 9 discriminator 1 view .LVU231
 160:Src/main.c    ****         ;
 768              		.loc 1 160 13 discriminator 1 view .LVU232
 160:Src/main.c    ****         ;
 769              		.loc 1 160 19 is_stmt 0 discriminator 1 view .LVU233
ARM GAS  /tmp/ccnMLrqE.s 			page 28


 770 0150 564B     		ldr	r3, .L69
 771 0152 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
 772 0156 DBB2     		uxtb	r3, r3
 160:Src/main.c    ****         ;
 773              		.loc 1 160 13 discriminator 1 view .LVU234
 774 0158 012B     		cmp	r3, #1
 775 015a F9D1     		bne	.L41
 162:Src/main.c    ****       sprintf(txt, "ACK_OF_CMD_ER: %02x || %02x || %02x\r\n", ack_resp[0], ack_resp[1], ack_resp[2]
 776              		.loc 1 162 7 is_stmt 1 view .LVU235
 777 015c 4FF47A74 		mov	r4, #1000
 778 0160 0094     		str	r4, [sp]
 779 0162 0323     		movs	r3, #3
 780 0164 1DAA     		add	r2, sp, #116
 781 0166 1EA9     		add	r1, sp, #120
 782 0168 5048     		ldr	r0, .L69
 783 016a FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 784              	.LVL36:
 163:Src/main.c    ****       HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 785              		.loc 1 163 7 view .LVU236
 163:Src/main.c    ****       HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 786              		.loc 1 163 97 is_stmt 0 view .LVU237
 787 016e 9DF87630 		ldrb	r3, [sp, #118]	@ zero_extendqisi2
 163:Src/main.c    ****       HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 788              		.loc 1 163 7 view .LVU238
 789 0172 0093     		str	r3, [sp]
 790 0174 9DF87530 		ldrb	r3, [sp, #117]	@ zero_extendqisi2
 791 0178 9DF87420 		ldrb	r2, [sp, #116]	@ zero_extendqisi2
 792 017c 5049     		ldr	r1, .L69+20
 793 017e 1FA8     		add	r0, sp, #124
 794 0180 FFF7FEFF 		bl	sprintf
 795              	.LVL37:
 164:Src/main.c    ****       if (ack_resp[1] == 0x79)
 796              		.loc 1 164 7 is_stmt 1 view .LVU239
 164:Src/main.c    ****       if (ack_resp[1] == 0x79)
 797              		.loc 1 164 50 is_stmt 0 view .LVU240
 798 0184 1FA8     		add	r0, sp, #124
 799 0186 FFF7FEFF 		bl	strlen
 800              	.LVL38:
 164:Src/main.c    ****       if (ack_resp[1] == 0x79)
 801              		.loc 1 164 7 view .LVU241
 802 018a 2346     		mov	r3, r4
 803 018c 82B2     		uxth	r2, r0
 804 018e 1FA9     		add	r1, sp, #124
 805 0190 4848     		ldr	r0, .L69+8
 806 0192 FFF7FEFF 		bl	HAL_UART_Transmit
 807              	.LVL39:
 165:Src/main.c    ****       {
 808              		.loc 1 165 7 is_stmt 1 view .LVU242
 165:Src/main.c    ****       {
 809              		.loc 1 165 19 is_stmt 0 view .LVU243
 810 0196 9DF87530 		ldrb	r3, [sp, #117]	@ zero_extendqisi2
 165:Src/main.c    ****       {
 811              		.loc 1 165 10 view .LVU244
 812 019a 792B     		cmp	r3, #121
 813 019c 7FF47DAF 		bne	.L33
 814              	.LBB18:
 168:Src/main.c    ****         uint8_t erase_resp[3];
ARM GAS  /tmp/ccnMLrqE.s 			page 29


 815              		.loc 1 168 9 is_stmt 1 view .LVU245
 169:Src/main.c    ****         erase_frame[0] = 0xFF;
 816              		.loc 1 169 9 view .LVU246
 170:Src/main.c    ****         erase_frame[1] = 0xFF;
 817              		.loc 1 170 9 view .LVU247
 170:Src/main.c    ****         erase_frame[1] = 0xFF;
 818              		.loc 1 170 24 is_stmt 0 view .LVU248
 819 01a0 FF23     		movs	r3, #255
 820 01a2 8DF84C30 		strb	r3, [sp, #76]
 171:Src/main.c    ****         erase_frame[2] = 0x00;
 821              		.loc 1 171 9 is_stmt 1 view .LVU249
 171:Src/main.c    ****         erase_frame[2] = 0x00;
 822              		.loc 1 171 24 is_stmt 0 view .LVU250
 823 01a6 8DF84D30 		strb	r3, [sp, #77]
 172:Src/main.c    ****         while (hspi1.State != HAL_SPI_STATE_READY)
 824              		.loc 1 172 9 is_stmt 1 view .LVU251
 172:Src/main.c    ****         while (hspi1.State != HAL_SPI_STATE_READY)
 825              		.loc 1 172 24 is_stmt 0 view .LVU252
 826 01aa 0023     		movs	r3, #0
 827 01ac 8DF84E30 		strb	r3, [sp, #78]
 173:Src/main.c    ****           ;
 828              		.loc 1 173 9 is_stmt 1 view .LVU253
 829              	.L43:
 174:Src/main.c    ****         HAL_SPI_TransmitReceive(&hspi1, erase_frame, &erase_resp, 3, 1000);
 830              		.loc 1 174 11 discriminator 1 view .LVU254
 173:Src/main.c    ****           ;
 831              		.loc 1 173 15 discriminator 1 view .LVU255
 173:Src/main.c    ****           ;
 832              		.loc 1 173 21 is_stmt 0 discriminator 1 view .LVU256
 833 01b0 3E4B     		ldr	r3, .L69
 834 01b2 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
 835 01b6 DBB2     		uxtb	r3, r3
 173:Src/main.c    ****           ;
 836              		.loc 1 173 15 discriminator 1 view .LVU257
 837 01b8 012B     		cmp	r3, #1
 838 01ba F9D1     		bne	.L43
 175:Src/main.c    ****         sprintf(txt, "RESP_OF_ERASE: %02x || %02x || %02x\r\n", erase_resp[0], erase_resp[1], erase
 839              		.loc 1 175 9 is_stmt 1 view .LVU258
 840 01bc 4FF47A74 		mov	r4, #1000
 841 01c0 0094     		str	r4, [sp]
 842 01c2 0323     		movs	r3, #3
 843 01c4 18AA     		add	r2, sp, #96
 844 01c6 13A9     		add	r1, sp, #76
 845 01c8 3848     		ldr	r0, .L69
 846 01ca FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 847              	.LVL40:
 176:Src/main.c    **** 
 848              		.loc 1 176 9 view .LVU259
 176:Src/main.c    **** 
 849              		.loc 1 176 105 is_stmt 0 view .LVU260
 850 01ce 9DF86230 		ldrb	r3, [sp, #98]	@ zero_extendqisi2
 176:Src/main.c    **** 
 851              		.loc 1 176 9 view .LVU261
 852 01d2 0093     		str	r3, [sp]
 853 01d4 9DF86130 		ldrb	r3, [sp, #97]	@ zero_extendqisi2
 854 01d8 9DF86020 		ldrb	r2, [sp, #96]	@ zero_extendqisi2
 855 01dc 3949     		ldr	r1, .L69+24
ARM GAS  /tmp/ccnMLrqE.s 			page 30


 856 01de 1FA8     		add	r0, sp, #124
 857 01e0 FFF7FEFF 		bl	sprintf
 858              	.LVL41:
 178:Src/main.c    ****         ack_frame[0] = 0x00;
 859              		.loc 1 178 9 is_stmt 1 view .LVU262
 178:Src/main.c    ****         ack_frame[0] = 0x00;
 860              		.loc 1 178 52 is_stmt 0 view .LVU263
 861 01e4 1FA8     		add	r0, sp, #124
 862 01e6 FFF7FEFF 		bl	strlen
 863              	.LVL42:
 178:Src/main.c    ****         ack_frame[0] = 0x00;
 864              		.loc 1 178 9 view .LVU264
 865 01ea 2346     		mov	r3, r4
 866 01ec 82B2     		uxth	r2, r0
 867 01ee 1FA9     		add	r1, sp, #124
 868 01f0 3048     		ldr	r0, .L69+8
 869 01f2 FFF7FEFF 		bl	HAL_UART_Transmit
 870              	.LVL43:
 179:Src/main.c    ****         ack_frame[1] = 0xFF;
 871              		.loc 1 179 9 is_stmt 1 view .LVU265
 179:Src/main.c    ****         ack_frame[1] = 0xFF;
 872              		.loc 1 179 22 is_stmt 0 view .LVU266
 873 01f6 0023     		movs	r3, #0
 874 01f8 8DF87830 		strb	r3, [sp, #120]
 180:Src/main.c    ****         ack_frame[2] = 0x79;
 875              		.loc 1 180 9 is_stmt 1 view .LVU267
 180:Src/main.c    ****         ack_frame[2] = 0x79;
 876              		.loc 1 180 22 is_stmt 0 view .LVU268
 877 01fc FF23     		movs	r3, #255
 878 01fe 8DF87930 		strb	r3, [sp, #121]
 181:Src/main.c    ****         while (hspi1.State != HAL_SPI_STATE_READY)
 879              		.loc 1 181 9 is_stmt 1 view .LVU269
 181:Src/main.c    ****         while (hspi1.State != HAL_SPI_STATE_READY)
 880              		.loc 1 181 22 is_stmt 0 view .LVU270
 881 0202 7923     		movs	r3, #121
 882 0204 8DF87A30 		strb	r3, [sp, #122]
 182:Src/main.c    ****           ;
 883              		.loc 1 182 9 is_stmt 1 view .LVU271
 884              	.L44:
 183:Src/main.c    ****         HAL_SPI_TransmitReceive(&hspi1, ack_frame, &ack_resp, 3, 1000);
 885              		.loc 1 183 11 discriminator 1 view .LVU272
 182:Src/main.c    ****           ;
 886              		.loc 1 182 15 discriminator 1 view .LVU273
 182:Src/main.c    ****           ;
 887              		.loc 1 182 21 is_stmt 0 discriminator 1 view .LVU274
 888 0208 284B     		ldr	r3, .L69
 889 020a 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
 890 020e DBB2     		uxtb	r3, r3
 182:Src/main.c    ****           ;
 891              		.loc 1 182 15 discriminator 1 view .LVU275
 892 0210 012B     		cmp	r3, #1
 893 0212 F9D1     		bne	.L44
 184:Src/main.c    ****         sprintf(txt, "ACK_OF_ERASE: %02x || %02x || %02x\r\n", ack_resp[0], ack_resp[1], ack_resp[2
 894              		.loc 1 184 9 is_stmt 1 view .LVU276
 895 0214 4FF47A74 		mov	r4, #1000
 896 0218 0094     		str	r4, [sp]
 897 021a 0323     		movs	r3, #3
ARM GAS  /tmp/ccnMLrqE.s 			page 31


 898 021c 1DAA     		add	r2, sp, #116
 899 021e 1EA9     		add	r1, sp, #120
 900 0220 2248     		ldr	r0, .L69
 901 0222 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 902              	.LVL44:
 185:Src/main.c    ****         HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 903              		.loc 1 185 9 view .LVU277
 185:Src/main.c    ****         HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 904              		.loc 1 185 98 is_stmt 0 view .LVU278
 905 0226 9DF87630 		ldrb	r3, [sp, #118]	@ zero_extendqisi2
 185:Src/main.c    ****         HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 906              		.loc 1 185 9 view .LVU279
 907 022a 0093     		str	r3, [sp]
 908 022c 9DF87530 		ldrb	r3, [sp, #117]	@ zero_extendqisi2
 909 0230 9DF87420 		ldrb	r2, [sp, #116]	@ zero_extendqisi2
 910 0234 2449     		ldr	r1, .L69+28
 911 0236 1FA8     		add	r0, sp, #124
 912 0238 FFF7FEFF 		bl	sprintf
 913              	.LVL45:
 186:Src/main.c    ****         sync_flag = 2;
 914              		.loc 1 186 9 is_stmt 1 view .LVU280
 186:Src/main.c    ****         sync_flag = 2;
 915              		.loc 1 186 52 is_stmt 0 view .LVU281
 916 023c 1FA8     		add	r0, sp, #124
 917 023e FFF7FEFF 		bl	strlen
 918              	.LVL46:
 186:Src/main.c    ****         sync_flag = 2;
 919              		.loc 1 186 9 view .LVU282
 920 0242 2346     		mov	r3, r4
 921 0244 82B2     		uxth	r2, r0
 922 0246 1FA9     		add	r1, sp, #124
 923 0248 1A48     		ldr	r0, .L69+8
 924 024a FFF7FEFF 		bl	HAL_UART_Transmit
 925              	.LVL47:
 187:Src/main.c    ****       }
 926              		.loc 1 187 9 is_stmt 1 view .LVU283
 187:Src/main.c    ****       }
 927              		.loc 1 187 19 is_stmt 0 view .LVU284
 928 024e 0225     		movs	r5, #2
 187:Src/main.c    ****       }
 929              		.loc 1 187 19 view .LVU285
 930 0250 23E7     		b	.L33
 931              	.LVL48:
 932              	.L54:
 187:Src/main.c    ****       }
 933              		.loc 1 187 19 view .LVU286
 934              	.LBE18:
 935              	.LBE17:
 936              	.LBB19:
 937              	.LBB5:
 938              	.LBB6:
 939              	.LBB7:
 940              	.LBB8:
 941              	.LBB9:
 263:Src/main.c    ****               if (i == 0)
 942              		.loc 1 263 15 is_stmt 1 view .LVU287
 263:Src/main.c    ****               if (i == 0)
ARM GAS  /tmp/ccnMLrqE.s 			page 32


 943              		.loc 1 263 52 is_stmt 0 view .LVU288
 944 0252 C4F10302 		rsb	r2, r4, #3
 263:Src/main.c    ****               if (i == 0)
 945              		.loc 1 263 57 view .LVU289
 946 0256 D200     		lsls	r2, r2, #3
 263:Src/main.c    ****               if (i == 0)
 947              		.loc 1 263 45 view .LVU290
 948 0258 46FA02F2 		asr	r2, r6, r2
 263:Src/main.c    ****               if (i == 0)
 949              		.loc 1 263 33 view .LVU291
 950 025c D2B2     		uxtb	r2, r2
 951 025e 38AB     		add	r3, sp, #224
 952 0260 2B44     		add	r3, r3, r5
 953 0262 03F8A82C 		strb	r2, [r3, #-168]
 264:Src/main.c    ****               {
 954              		.loc 1 264 15 is_stmt 1 view .LVU292
 269:Src/main.c    ****               }
 955              		.loc 1 269 17 view .LVU293
 271:Src/main.c    ****               sprintf(txt, "DATA_DATA: %02x\r\n", data_frame[index]);
 956              		.loc 1 271 15 view .LVU294
 271:Src/main.c    ****               sprintf(txt, "DATA_DATA: %02x\r\n", data_frame[index]);
 957              		.loc 1 271 37 is_stmt 0 view .LVU295
 958 0266 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 271:Src/main.c    ****               sprintf(txt, "DATA_DATA: %02x\r\n", data_frame[index]);
 959              		.loc 1 271 27 view .LVU296
 960 026a 5340     		eors	r3, r3, r2
 961 026c 8DF81830 		strb	r3, [sp, #24]
 272:Src/main.c    ****               HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 962              		.loc 1 272 15 is_stmt 1 view .LVU297
 963 0270 1649     		ldr	r1, .L69+32
 964 0272 1FA8     		add	r0, sp, #124
 965 0274 FFF7FEFF 		bl	sprintf
 966              	.LVL49:
 273:Src/main.c    ****               index++;
 967              		.loc 1 273 15 view .LVU298
 273:Src/main.c    ****               index++;
 968              		.loc 1 273 58 is_stmt 0 view .LVU299
 969 0278 1FA8     		add	r0, sp, #124
 970 027a FFF7FEFF 		bl	strlen
 971              	.LVL50:
 273:Src/main.c    ****               index++;
 972              		.loc 1 273 15 view .LVU300
 973 027e 4FF47A73 		mov	r3, #1000
 974 0282 82B2     		uxth	r2, r0
 975 0284 1FA9     		add	r1, sp, #124
 976 0286 0B48     		ldr	r0, .L69+8
 977 0288 FFF7FEFF 		bl	HAL_UART_Transmit
 978              	.LVL51:
 274:Src/main.c    ****             }
 979              		.loc 1 274 15 is_stmt 1 view .LVU301
 274:Src/main.c    ****             }
 980              		.loc 1 274 20 is_stmt 0 view .LVU302
 981 028c 0135     		adds	r5, r5, #1
 982              	.LVL52:
 261:Src/main.c    ****             {
 983              		.loc 1 261 39 is_stmt 1 view .LVU303
 261:Src/main.c    ****             {
ARM GAS  /tmp/ccnMLrqE.s 			page 33


 984              		.loc 1 261 40 is_stmt 0 view .LVU304
 985 028e 0134     		adds	r4, r4, #1
 986              	.LVL53:
 987              	.L53:
 261:Src/main.c    ****             {
 988              		.loc 1 261 32 is_stmt 1 discriminator 1 view .LVU305
 261:Src/main.c    ****             {
 989              		.loc 1 261 13 is_stmt 0 discriminator 1 view .LVU306
 990 0290 032C     		cmp	r4, #3
 991 0292 DED9     		bls	.L54
 992              	.LBE9:
 276:Src/main.c    ****           }
 993              		.loc 1 276 13 is_stmt 1 discriminator 2 view .LVU307
 276:Src/main.c    ****           }
 994              		.loc 1 276 21 is_stmt 0 discriminator 2 view .LVU308
 995 0294 08F10108 		add	r8, r8, #1
 996              	.LVL54:
 276:Src/main.c    ****           }
 997              		.loc 1 276 21 discriminator 2 view .LVU309
 998              	.LBE8:
 258:Src/main.c    ****           {
 999              		.loc 1 258 57 is_stmt 1 discriminator 2 view .LVU310
 258:Src/main.c    ****           {
 1000              		.loc 1 258 58 is_stmt 0 discriminator 2 view .LVU311
 1001 0298 0137     		adds	r7, r7, #1
 1002              	.LVL55:
 1003              	.L52:
 258:Src/main.c    ****           {
 1004              		.loc 1 258 38 is_stmt 1 discriminator 1 view .LVU312
 258:Src/main.c    ****           {
 1005              		.loc 1 258 52 is_stmt 0 discriminator 1 view .LVU313
 1006 029a 09F10403 		add	r3, r9, #4
 258:Src/main.c    ****           {
 1007              		.loc 1 258 11 discriminator 1 view .LVU314
 1008 029e BB42     		cmp	r3, r7
 1009 02a0 18D9     		bls	.L68
 1010              	.LBB11:
 260:Src/main.c    ****             for (size_t i = 0; i < 4; i++)
 1011              		.loc 1 260 13 is_stmt 1 view .LVU315
 260:Src/main.c    ****             for (size_t i = 0; i < 4; i++)
 1012              		.loc 1 260 17 is_stmt 0 view .LVU316
 1013 02a2 0B4B     		ldr	r3, .L69+36
 1014 02a4 53F82760 		ldr	r6, [r3, r7, lsl #2]
 1015              	.LVL56:
 261:Src/main.c    ****             {
 1016              		.loc 1 261 13 is_stmt 1 view .LVU317
 1017              	.LBB10:
 261:Src/main.c    ****             {
 1018              		.loc 1 261 18 view .LVU318
 261:Src/main.c    ****             {
 1019              		.loc 1 261 25 is_stmt 0 view .LVU319
 1020 02a8 0024     		movs	r4, #0
 261:Src/main.c    ****             {
 1021              		.loc 1 261 13 view .LVU320
 1022 02aa F1E7     		b	.L53
 1023              	.L70:
 1024              		.align	2
ARM GAS  /tmp/ccnMLrqE.s 			page 34


 1025              	.L69:
 1026 02ac 00000000 		.word	.LANCHOR1
 1027 02b0 00000000 		.word	.LC1
 1028 02b4 00000000 		.word	.LANCHOR0
 1029 02b8 18000000 		.word	.LC2
 1030 02bc 3C000000 		.word	.LC3
 1031 02c0 64000000 		.word	.LC4
 1032 02c4 8C000000 		.word	.LC5
 1033 02c8 B4000000 		.word	.LC6
 1034 02cc AC010000 		.word	.LC12
 1035 02d0 00000000 		.word	arr_dd
 1036              	.LVL57:
 1037              	.L68:
 261:Src/main.c    ****             {
 1038              		.loc 1 261 13 view .LVU321
 1039              	.LBE10:
 1040              	.LBE11:
 1041              	.LBE7:
 278:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1042              		.loc 1 278 11 is_stmt 1 view .LVU322
 1043 02d4 9DF81820 		ldrb	r2, [sp, #24]	@ zero_extendqisi2
 1044 02d8 BC49     		ldr	r1, .L71
 1045 02da 1FA8     		add	r0, sp, #124
 1046 02dc FFF7FEFF 		bl	sprintf
 1047              	.LVL58:
 279:Src/main.c    **** 
 1048              		.loc 1 279 11 view .LVU323
 279:Src/main.c    **** 
 1049              		.loc 1 279 54 is_stmt 0 view .LVU324
 1050 02e0 1FA8     		add	r0, sp, #124
 1051 02e2 FFF7FEFF 		bl	strlen
 1052              	.LVL59:
 279:Src/main.c    **** 
 1053              		.loc 1 279 11 view .LVU325
 1054 02e6 4FF47A73 		mov	r3, #1000
 1055 02ea 82B2     		uxth	r2, r0
 1056 02ec 1FA9     		add	r1, sp, #124
 1057 02ee B848     		ldr	r0, .L71+4
 1058 02f0 FFF7FEFF 		bl	HAL_UART_Transmit
 1059              	.LVL60:
 281:Src/main.c    ****             ;
 1060              		.loc 1 281 11 is_stmt 1 view .LVU326
 1061              	.L56:
 282:Src/main.c    ****           HAL_SPI_TransmitReceive(&hspi1, data_frame, &frame_resp, 17, 1000);
 1062              		.loc 1 282 13 discriminator 1 view .LVU327
 281:Src/main.c    ****             ;
 1063              		.loc 1 281 17 discriminator 1 view .LVU328
 281:Src/main.c    ****             ;
 1064              		.loc 1 281 23 is_stmt 0 discriminator 1 view .LVU329
 1065 02f4 B74B     		ldr	r3, .L71+8
 1066 02f6 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
 1067 02fa DBB2     		uxtb	r3, r3
 281:Src/main.c    ****             ;
 1068              		.loc 1 281 17 discriminator 1 view .LVU330
 1069 02fc 012B     		cmp	r3, #1
 1070 02fe F9D1     		bne	.L56
 283:Src/main.c    ****           while (hspi1.State != HAL_SPI_STATE_READY)
ARM GAS  /tmp/ccnMLrqE.s 			page 35


 1071              		.loc 1 283 11 is_stmt 1 view .LVU331
 1072 0300 4FF47A73 		mov	r3, #1000
 1073 0304 0093     		str	r3, [sp]
 1074 0306 1123     		movs	r3, #17
 1075 0308 13AA     		add	r2, sp, #76
 1076 030a 0EA9     		add	r1, sp, #56
 1077 030c B148     		ldr	r0, .L71+8
 1078 030e FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1079              	.LVL61:
 284:Src/main.c    ****             ;
 1080              		.loc 1 284 11 view .LVU332
 1081              	.L57:
 285:Src/main.c    ****           HAL_SPI_TransmitReceive(&hspi1, data_xor, &xor_resp, 1, 1000);
 1082              		.loc 1 285 13 discriminator 1 view .LVU333
 284:Src/main.c    ****             ;
 1083              		.loc 1 284 17 discriminator 1 view .LVU334
 284:Src/main.c    ****             ;
 1084              		.loc 1 284 23 is_stmt 0 discriminator 1 view .LVU335
 1085 0312 B04B     		ldr	r3, .L71+8
 1086 0314 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
 1087 0318 DBB2     		uxtb	r3, r3
 284:Src/main.c    ****             ;
 1088              		.loc 1 284 17 discriminator 1 view .LVU336
 1089 031a 012B     		cmp	r3, #1
 1090 031c F9D1     		bne	.L57
 286:Src/main.c    **** 
 1091              		.loc 1 286 11 is_stmt 1 view .LVU337
 1092 031e 4FF47A74 		mov	r4, #1000
 1093 0322 0094     		str	r4, [sp]
 1094 0324 07AA     		add	r2, sp, #28
 1095 0326 06A9     		add	r1, sp, #24
 1096 0328 AA48     		ldr	r0, .L71+8
 1097 032a FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1098              	.LVL62:
 288:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1099              		.loc 1 288 11 view .LVU338
 288:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1100              		.loc 1 288 114 is_stmt 0 view .LVU339
 1101 032e 9DF84E30 		ldrb	r3, [sp, #78]	@ zero_extendqisi2
 288:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1102              		.loc 1 288 129 view .LVU340
 1103 0332 9DF84F20 		ldrb	r2, [sp, #79]	@ zero_extendqisi2
 288:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1104              		.loc 1 288 11 view .LVU341
 1105 0336 0192     		str	r2, [sp, #4]
 1106 0338 0093     		str	r3, [sp]
 1107 033a 9DF84D30 		ldrb	r3, [sp, #77]	@ zero_extendqisi2
 1108 033e 9DF84C20 		ldrb	r2, [sp, #76]	@ zero_extendqisi2
 1109 0342 A549     		ldr	r1, .L71+12
 1110 0344 1FA8     		add	r0, sp, #124
 1111 0346 FFF7FEFF 		bl	sprintf
 1112              	.LVL63:
 289:Src/main.c    **** 
 1113              		.loc 1 289 11 is_stmt 1 view .LVU342
 289:Src/main.c    **** 
 1114              		.loc 1 289 54 is_stmt 0 view .LVU343
 1115 034a 1FA8     		add	r0, sp, #124
ARM GAS  /tmp/ccnMLrqE.s 			page 36


 1116 034c FFF7FEFF 		bl	strlen
 1117              	.LVL64:
 289:Src/main.c    **** 
 1118              		.loc 1 289 11 view .LVU344
 1119 0350 2346     		mov	r3, r4
 1120 0352 82B2     		uxth	r2, r0
 1121 0354 1FA9     		add	r1, sp, #124
 1122 0356 9E48     		ldr	r0, .L71+4
 1123 0358 FFF7FEFF 		bl	HAL_UART_Transmit
 1124              	.LVL65:
 291:Src/main.c    ****           {
 1125              		.loc 1 291 11 is_stmt 1 view .LVU345
 291:Src/main.c    ****           {
 1126              		.loc 1 291 25 is_stmt 0 view .LVU346
 1127 035c 9DF84F30 		ldrb	r3, [sp, #79]	@ zero_extendqisi2
 291:Src/main.c    ****           {
 1128              		.loc 1 291 14 view .LVU347
 1129 0360 792B     		cmp	r3, #121
 1130 0362 00F05B81 		beq	.L61
 293:Src/main.c    ****             aaaa_index = aaaa_index - 2;
 1131              		.loc 1 293 13 is_stmt 1 view .LVU348
 293:Src/main.c    ****             aaaa_index = aaaa_index - 2;
 1132              		.loc 1 293 22 is_stmt 0 view .LVU349
 1133 0366 A8F10409 		sub	r9, r8, #4
 1134              	.LVL66:
 294:Src/main.c    ****           }
 1135              		.loc 1 294 13 is_stmt 1 view .LVU350
 1136              	.L58:
 297:Src/main.c    ****           ack_frame[1] = 0x00;
 1137              		.loc 1 297 11 view .LVU351
 297:Src/main.c    ****           ack_frame[1] = 0x00;
 1138              		.loc 1 297 24 is_stmt 0 view .LVU352
 1139 036a 0023     		movs	r3, #0
 1140 036c 8DF87830 		strb	r3, [sp, #120]
 298:Src/main.c    ****           ack_frame[2] = 0x79;
 1141              		.loc 1 298 11 is_stmt 1 view .LVU353
 298:Src/main.c    ****           ack_frame[2] = 0x79;
 1142              		.loc 1 298 24 is_stmt 0 view .LVU354
 1143 0370 8DF87930 		strb	r3, [sp, #121]
 299:Src/main.c    ****           while (hspi1.State != HAL_SPI_STATE_READY)
 1144              		.loc 1 299 11 is_stmt 1 view .LVU355
 299:Src/main.c    ****           while (hspi1.State != HAL_SPI_STATE_READY)
 1145              		.loc 1 299 24 is_stmt 0 view .LVU356
 1146 0374 7923     		movs	r3, #121
 1147 0376 8DF87A30 		strb	r3, [sp, #122]
 300:Src/main.c    ****             ;
 1148              		.loc 1 300 11 is_stmt 1 view .LVU357
 1149              	.L59:
 301:Src/main.c    ****           HAL_SPI_TransmitReceive(&hspi1, ack_frame, &ack_resp, 3, 1000);
 1150              		.loc 1 301 13 discriminator 1 view .LVU358
 300:Src/main.c    ****             ;
 1151              		.loc 1 300 17 discriminator 1 view .LVU359
 300:Src/main.c    ****             ;
 1152              		.loc 1 300 23 is_stmt 0 discriminator 1 view .LVU360
 1153 037a 964B     		ldr	r3, .L71+8
 1154 037c 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
 1155 0380 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccnMLrqE.s 			page 37


 300:Src/main.c    ****             ;
 1156              		.loc 1 300 17 discriminator 1 view .LVU361
 1157 0382 012B     		cmp	r3, #1
 1158 0384 F9D1     		bne	.L59
 302:Src/main.c    ****           sprintf(txt, "ACK_OF_DATA: %02x || %02x || %02x\r\n", ack_resp[0], ack_resp[1], ack_resp[
 1159              		.loc 1 302 11 is_stmt 1 view .LVU362
 1160 0386 4FF47A74 		mov	r4, #1000
 1161 038a 0094     		str	r4, [sp]
 1162 038c 0323     		movs	r3, #3
 1163 038e 1DAA     		add	r2, sp, #116
 1164 0390 1EA9     		add	r1, sp, #120
 1165 0392 9048     		ldr	r0, .L71+8
 1166 0394 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1167              	.LVL67:
 303:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1168              		.loc 1 303 11 view .LVU363
 303:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1169              		.loc 1 303 99 is_stmt 0 view .LVU364
 1170 0398 9DF87630 		ldrb	r3, [sp, #118]	@ zero_extendqisi2
 303:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1171              		.loc 1 303 11 view .LVU365
 1172 039c 0093     		str	r3, [sp]
 1173 039e 9DF87530 		ldrb	r3, [sp, #117]	@ zero_extendqisi2
 1174 03a2 9DF87420 		ldrb	r2, [sp, #116]	@ zero_extendqisi2
 1175 03a6 8D49     		ldr	r1, .L71+16
 1176 03a8 1FA8     		add	r0, sp, #124
 1177 03aa FFF7FEFF 		bl	sprintf
 1178              	.LVL68:
 304:Src/main.c    **** 
 1179              		.loc 1 304 11 is_stmt 1 view .LVU366
 304:Src/main.c    **** 
 1180              		.loc 1 304 54 is_stmt 0 view .LVU367
 1181 03ae 1FA8     		add	r0, sp, #124
 1182 03b0 FFF7FEFF 		bl	strlen
 1183              	.LVL69:
 304:Src/main.c    **** 
 1184              		.loc 1 304 11 view .LVU368
 1185 03b4 864D     		ldr	r5, .L71+4
 1186 03b6 2346     		mov	r3, r4
 1187 03b8 82B2     		uxth	r2, r0
 1188 03ba 1FA9     		add	r1, sp, #124
 1189 03bc 2846     		mov	r0, r5
 1190 03be FFF7FEFF 		bl	HAL_UART_Transmit
 1191              	.LVL70:
 306:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1192              		.loc 1 306 11 is_stmt 1 view .LVU369
 1193 03c2 5B46     		mov	r3, fp
 1194 03c4 4A46     		mov	r2, r9
 1195 03c6 8649     		ldr	r1, .L71+20
 1196 03c8 1FA8     		add	r0, sp, #124
 1197 03ca FFF7FEFF 		bl	sprintf
 1198              	.LVL71:
 307:Src/main.c    **** 
 1199              		.loc 1 307 11 view .LVU370
 307:Src/main.c    **** 
 1200              		.loc 1 307 54 is_stmt 0 view .LVU371
 1201 03ce 1FA8     		add	r0, sp, #124
ARM GAS  /tmp/ccnMLrqE.s 			page 38


 1202 03d0 FFF7FEFF 		bl	strlen
 1203              	.LVL72:
 307:Src/main.c    **** 
 1204              		.loc 1 307 11 view .LVU372
 1205 03d4 2346     		mov	r3, r4
 1206 03d6 82B2     		uxth	r2, r0
 1207 03d8 1FA9     		add	r1, sp, #124
 1208 03da 2846     		mov	r0, r5
 1209 03dc FFF7FEFF 		bl	HAL_UART_Transmit
 1210              	.LVL73:
 309:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1211              		.loc 1 309 11 is_stmt 1 view .LVU373
 1212 03e0 804B     		ldr	r3, .L71+24
 1213 03e2 53F82A30 		ldr	r3, [r3, r10, lsl #2]
 1214 03e6 5246     		mov	r2, r10
 1215 03e8 7F49     		ldr	r1, .L71+28
 1216 03ea 1FA8     		add	r0, sp, #124
 1217 03ec FFF7FEFF 		bl	sprintf
 1218              	.LVL74:
 310:Src/main.c    ****           HAL_Delay(20);
 1219              		.loc 1 310 11 view .LVU374
 310:Src/main.c    ****           HAL_Delay(20);
 1220              		.loc 1 310 54 is_stmt 0 view .LVU375
 1221 03f0 1FA8     		add	r0, sp, #124
 1222 03f2 FFF7FEFF 		bl	strlen
 1223              	.LVL75:
 310:Src/main.c    ****           HAL_Delay(20);
 1224              		.loc 1 310 11 view .LVU376
 1225 03f6 2346     		mov	r3, r4
 1226 03f8 82B2     		uxth	r2, r0
 1227 03fa 1FA9     		add	r1, sp, #124
 1228 03fc 2846     		mov	r0, r5
 1229 03fe FFF7FEFF 		bl	HAL_UART_Transmit
 1230              	.LVL76:
 311:Src/main.c    **** 
 1231              		.loc 1 311 11 is_stmt 1 view .LVU377
 1232 0402 1420     		movs	r0, #20
 1233 0404 FFF7FEFF 		bl	HAL_Delay
 1234              	.LVL77:
 313:Src/main.c    ****           {
 1235              		.loc 1 313 11 view .LVU378
 313:Src/main.c    ****           {
 1236              		.loc 1 313 14 is_stmt 0 view .LVU379
 1237 0408 40F2DE23 		movw	r3, #734
 1238 040c 9A45     		cmp	r10, r3
 1239 040e 00F30981 		bgt	.L63
 1240              	.LVL78:
 1241              	.L45:
 313:Src/main.c    ****           {
 1242              		.loc 1 313 14 view .LVU380
 1243              	.LBE6:
 1244              	.LBE5:
 196:Src/main.c    ****       {
 1245              		.loc 1 196 13 is_stmt 1 view .LVU381
 1246              	.LBB15:
 198:Src/main.c    ****         uint8_t cmd_resp[3];
 1247              		.loc 1 198 9 view .LVU382
ARM GAS  /tmp/ccnMLrqE.s 			page 39


 199:Src/main.c    ****         cmd_frame[0] = 0x5A;
 1248              		.loc 1 199 9 view .LVU383
 200:Src/main.c    ****         cmd_frame[1] = 0x31;
 1249              		.loc 1 200 9 view .LVU384
 200:Src/main.c    ****         cmd_frame[1] = 0x31;
 1250              		.loc 1 200 22 is_stmt 0 view .LVU385
 1251 0412 5A23     		movs	r3, #90
 1252 0414 8DF82030 		strb	r3, [sp, #32]
 201:Src/main.c    ****         cmd_frame[2] = 0xCE;
 1253              		.loc 1 201 9 is_stmt 1 view .LVU386
 201:Src/main.c    ****         cmd_frame[2] = 0xCE;
 1254              		.loc 1 201 22 is_stmt 0 view .LVU387
 1255 0418 3123     		movs	r3, #49
 1256 041a 8DF82130 		strb	r3, [sp, #33]
 202:Src/main.c    ****         while (hspi1.State != HAL_SPI_STATE_READY)
 1257              		.loc 1 202 9 is_stmt 1 view .LVU388
 202:Src/main.c    ****         while (hspi1.State != HAL_SPI_STATE_READY)
 1258              		.loc 1 202 22 is_stmt 0 view .LVU389
 1259 041e CE23     		movs	r3, #206
 1260 0420 8DF82230 		strb	r3, [sp, #34]
 203:Src/main.c    ****           ;
 1261              		.loc 1 203 9 is_stmt 1 view .LVU390
 1262              	.L46:
 204:Src/main.c    ****         HAL_SPI_TransmitReceive(&hspi1, cmd_frame, &cmd_resp, 3, 1000);
 1263              		.loc 1 204 11 discriminator 1 view .LVU391
 203:Src/main.c    ****           ;
 1264              		.loc 1 203 15 discriminator 1 view .LVU392
 203:Src/main.c    ****           ;
 1265              		.loc 1 203 21 is_stmt 0 discriminator 1 view .LVU393
 1266 0424 6B4B     		ldr	r3, .L71+8
 1267 0426 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
 1268 042a DBB2     		uxtb	r3, r3
 203:Src/main.c    ****           ;
 1269              		.loc 1 203 15 discriminator 1 view .LVU394
 1270 042c 012B     		cmp	r3, #1
 1271 042e F9D1     		bne	.L46
 205:Src/main.c    **** 
 1272              		.loc 1 205 9 is_stmt 1 view .LVU395
 1273 0430 4FF47A74 		mov	r4, #1000
 1274 0434 0094     		str	r4, [sp]
 1275 0436 0323     		movs	r3, #3
 1276 0438 09AA     		add	r2, sp, #36
 1277 043a 08A9     		add	r1, sp, #32
 1278 043c 6548     		ldr	r0, .L71+8
 1279 043e FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1280              	.LVL79:
 207:Src/main.c    ****         HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1281              		.loc 1 207 9 view .LVU396
 207:Src/main.c    ****         HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1282              		.loc 1 207 100 is_stmt 0 view .LVU397
 1283 0442 9DF82630 		ldrb	r3, [sp, #38]	@ zero_extendqisi2
 207:Src/main.c    ****         HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1284              		.loc 1 207 9 view .LVU398
 1285 0446 0093     		str	r3, [sp]
 1286 0448 9DF82530 		ldrb	r3, [sp, #37]	@ zero_extendqisi2
 1287 044c 9DF82420 		ldrb	r2, [sp, #36]	@ zero_extendqisi2
 1288 0450 6649     		ldr	r1, .L71+32
ARM GAS  /tmp/ccnMLrqE.s 			page 40


 1289 0452 1FA8     		add	r0, sp, #124
 1290 0454 FFF7FEFF 		bl	sprintf
 1291              	.LVL80:
 208:Src/main.c    **** 
 1292              		.loc 1 208 9 is_stmt 1 view .LVU399
 208:Src/main.c    **** 
 1293              		.loc 1 208 52 is_stmt 0 view .LVU400
 1294 0458 1FA8     		add	r0, sp, #124
 1295 045a FFF7FEFF 		bl	strlen
 1296              	.LVL81:
 208:Src/main.c    **** 
 1297              		.loc 1 208 9 view .LVU401
 1298 045e 2346     		mov	r3, r4
 1299 0460 82B2     		uxth	r2, r0
 1300 0462 1FA9     		add	r1, sp, #124
 1301 0464 5A48     		ldr	r0, .L71+4
 1302 0466 FFF7FEFF 		bl	HAL_UART_Transmit
 1303              	.LVL82:
 210:Src/main.c    ****         ack_frame[1] = 0x00;
 1304              		.loc 1 210 9 is_stmt 1 view .LVU402
 210:Src/main.c    ****         ack_frame[1] = 0x00;
 1305              		.loc 1 210 22 is_stmt 0 view .LVU403
 1306 046a 0023     		movs	r3, #0
 1307 046c 8DF87830 		strb	r3, [sp, #120]
 211:Src/main.c    ****         ack_frame[2] = 0x79;
 1308              		.loc 1 211 9 is_stmt 1 view .LVU404
 211:Src/main.c    ****         ack_frame[2] = 0x79;
 1309              		.loc 1 211 22 is_stmt 0 view .LVU405
 1310 0470 8DF87930 		strb	r3, [sp, #121]
 212:Src/main.c    ****         while (hspi1.State != HAL_SPI_STATE_READY)
 1311              		.loc 1 212 9 is_stmt 1 view .LVU406
 212:Src/main.c    ****         while (hspi1.State != HAL_SPI_STATE_READY)
 1312              		.loc 1 212 22 is_stmt 0 view .LVU407
 1313 0474 7923     		movs	r3, #121
 1314 0476 8DF87A30 		strb	r3, [sp, #122]
 213:Src/main.c    ****           ;
 1315              		.loc 1 213 9 is_stmt 1 view .LVU408
 1316              	.L47:
 214:Src/main.c    ****         HAL_SPI_TransmitReceive(&hspi1, ack_frame, &ack_resp, 3, 1000);
 1317              		.loc 1 214 11 discriminator 1 view .LVU409
 213:Src/main.c    ****           ;
 1318              		.loc 1 213 15 discriminator 1 view .LVU410
 213:Src/main.c    ****           ;
 1319              		.loc 1 213 21 is_stmt 0 discriminator 1 view .LVU411
 1320 047a 564B     		ldr	r3, .L71+8
 1321 047c 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
 1322 0480 DBB2     		uxtb	r3, r3
 213:Src/main.c    ****           ;
 1323              		.loc 1 213 15 discriminator 1 view .LVU412
 1324 0482 012B     		cmp	r3, #1
 1325 0484 F9D1     		bne	.L47
 215:Src/main.c    ****         sprintf(txt, "ACK_OF_CMD_WR: %02x || %02x || %02x\r\n", ack_resp[0], ack_resp[1], ack_resp[
 1326              		.loc 1 215 9 is_stmt 1 view .LVU413
 1327 0486 4FF47A74 		mov	r4, #1000
 1328 048a 0094     		str	r4, [sp]
 1329 048c 0323     		movs	r3, #3
 1330 048e 1DAA     		add	r2, sp, #116
ARM GAS  /tmp/ccnMLrqE.s 			page 41


 1331 0490 1EA9     		add	r1, sp, #120
 1332 0492 5048     		ldr	r0, .L71+8
 1333 0494 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1334              	.LVL83:
 216:Src/main.c    ****         HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1335              		.loc 1 216 9 view .LVU414
 216:Src/main.c    ****         HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1336              		.loc 1 216 99 is_stmt 0 view .LVU415
 1337 0498 9DF87630 		ldrb	r3, [sp, #118]	@ zero_extendqisi2
 216:Src/main.c    ****         HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1338              		.loc 1 216 9 view .LVU416
 1339 049c 0093     		str	r3, [sp]
 1340 049e 9DF87530 		ldrb	r3, [sp, #117]	@ zero_extendqisi2
 1341 04a2 9DF87420 		ldrb	r2, [sp, #116]	@ zero_extendqisi2
 1342 04a6 5249     		ldr	r1, .L71+36
 1343 04a8 1FA8     		add	r0, sp, #124
 1344 04aa FFF7FEFF 		bl	sprintf
 1345              	.LVL84:
 217:Src/main.c    ****         if (ack_resp[1] == 0x79 || ack_resp[1] == 0xA5)
 1346              		.loc 1 217 9 is_stmt 1 view .LVU417
 217:Src/main.c    ****         if (ack_resp[1] == 0x79 || ack_resp[1] == 0xA5)
 1347              		.loc 1 217 52 is_stmt 0 view .LVU418
 1348 04ae 1FA8     		add	r0, sp, #124
 1349 04b0 FFF7FEFF 		bl	strlen
 1350              	.LVL85:
 217:Src/main.c    ****         if (ack_resp[1] == 0x79 || ack_resp[1] == 0xA5)
 1351              		.loc 1 217 9 view .LVU419
 1352 04b4 2346     		mov	r3, r4
 1353 04b6 82B2     		uxth	r2, r0
 1354 04b8 1FA9     		add	r1, sp, #124
 1355 04ba 4548     		ldr	r0, .L71+4
 1356 04bc FFF7FEFF 		bl	HAL_UART_Transmit
 1357              	.LVL86:
 218:Src/main.c    ****         {
 1358              		.loc 1 218 9 is_stmt 1 view .LVU420
 218:Src/main.c    ****         {
 1359              		.loc 1 218 21 is_stmt 0 view .LVU421
 1360 04c0 9DF87530 		ldrb	r3, [sp, #117]	@ zero_extendqisi2
 218:Src/main.c    ****         {
 1361              		.loc 1 218 12 view .LVU422
 1362 04c4 792B     		cmp	r3, #121
 1363 04c6 01D0     		beq	.L48
 218:Src/main.c    ****         {
 1364              		.loc 1 218 33 discriminator 1 view .LVU423
 1365 04c8 A52B     		cmp	r3, #165
 1366 04ca A2D1     		bne	.L45
 1367              	.L48:
 1368              	.LBB14:
 221:Src/main.c    ****           uint8_t add_resp[5];
 1369              		.loc 1 221 11 is_stmt 1 view .LVU424
 222:Src/main.c    ****           uint8_t tmp_aaaa = 0;
 1370              		.loc 1 222 11 view .LVU425
 223:Src/main.c    **** 
 1371              		.loc 1 223 11 view .LVU426
 1372              	.LVL87:
 225:Src/main.c    ****           add_frame[1] = 0x00;
 1373              		.loc 1 225 11 view .LVU427
ARM GAS  /tmp/ccnMLrqE.s 			page 42


 225:Src/main.c    ****           add_frame[1] = 0x00;
 1374              		.loc 1 225 24 is_stmt 0 view .LVU428
 1375 04cc 0823     		movs	r3, #8
 1376 04ce 8DF82830 		strb	r3, [sp, #40]
 226:Src/main.c    ****           add_frame[2] = (arr_aaaa[aaaa_index] >> 8) & 0xFF;
 1377              		.loc 1 226 11 is_stmt 1 view .LVU429
 226:Src/main.c    ****           add_frame[2] = (arr_aaaa[aaaa_index] >> 8) & 0xFF;
 1378              		.loc 1 226 24 is_stmt 0 view .LVU430
 1379 04d2 0023     		movs	r3, #0
 1380 04d4 8DF82930 		strb	r3, [sp, #41]
 227:Src/main.c    ****           add_frame[3] = arr_aaaa[aaaa_index] & 0xFF;
 1381              		.loc 1 227 11 is_stmt 1 view .LVU431
 227:Src/main.c    ****           add_frame[3] = arr_aaaa[aaaa_index] & 0xFF;
 1382              		.loc 1 227 35 is_stmt 0 view .LVU432
 1383 04d8 424B     		ldr	r3, .L71+24
 1384 04da 53F82A20 		ldr	r2, [r3, r10, lsl #2]
 227:Src/main.c    ****           add_frame[3] = arr_aaaa[aaaa_index] & 0xFF;
 1385              		.loc 1 227 24 view .LVU433
 1386 04de C2F30723 		ubfx	r3, r2, #8, #8
 1387 04e2 8DF82A30 		strb	r3, [sp, #42]
 228:Src/main.c    ****           add_frame[4] = 0x08 ^ add_frame[1] ^ add_frame[2] ^ add_frame[3];
 1388              		.loc 1 228 11 is_stmt 1 view .LVU434
 228:Src/main.c    ****           add_frame[4] = 0x08 ^ add_frame[1] ^ add_frame[2] ^ add_frame[3];
 1389              		.loc 1 228 24 is_stmt 0 view .LVU435
 1390 04e6 D2B2     		uxtb	r2, r2
 1391 04e8 8DF82B20 		strb	r2, [sp, #43]
 229:Src/main.c    ****           aaaa_index = aaaa_index + 2;
 1392              		.loc 1 229 11 is_stmt 1 view .LVU436
 229:Src/main.c    ****           aaaa_index = aaaa_index + 2;
 1393              		.loc 1 229 24 is_stmt 0 view .LVU437
 1394 04ec 5340     		eors	r3, r3, r2
 1395 04ee 83F00803 		eor	r3, r3, #8
 1396 04f2 8DF82C30 		strb	r3, [sp, #44]
 230:Src/main.c    ****           while (hspi1.State != HAL_SPI_STATE_READY)
 1397              		.loc 1 230 11 is_stmt 1 view .LVU438
 230:Src/main.c    ****           while (hspi1.State != HAL_SPI_STATE_READY)
 1398              		.loc 1 230 22 is_stmt 0 view .LVU439
 1399 04f6 0AF10203 		add	r3, r10, #2
 1400 04fa 0593     		str	r3, [sp, #20]
 1401              	.LVL88:
 231:Src/main.c    ****             ;
 1402              		.loc 1 231 11 is_stmt 1 view .LVU440
 1403              	.L50:
 232:Src/main.c    ****           HAL_SPI_TransmitReceive(&hspi1, add_frame, &add_resp, 5, 1000);
 1404              		.loc 1 232 13 discriminator 1 view .LVU441
 231:Src/main.c    ****             ;
 1405              		.loc 1 231 17 discriminator 1 view .LVU442
 231:Src/main.c    ****             ;
 1406              		.loc 1 231 23 is_stmt 0 discriminator 1 view .LVU443
 1407 04fc 354B     		ldr	r3, .L71+8
 1408 04fe 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
 1409 0502 DBB2     		uxtb	r3, r3
 231:Src/main.c    ****             ;
 1410              		.loc 1 231 17 discriminator 1 view .LVU444
 1411 0504 012B     		cmp	r3, #1
 1412 0506 F9D1     		bne	.L50
 233:Src/main.c    ****           sprintf(txt, "RESP_OF_ADD: %02x || %02x || %02x || %02x || %02x\r\n", add_resp[0], add_re
ARM GAS  /tmp/ccnMLrqE.s 			page 43


 1413              		.loc 1 233 11 is_stmt 1 view .LVU445
 1414 0508 4FF47A74 		mov	r4, #1000
 1415 050c 0094     		str	r4, [sp]
 1416 050e 0523     		movs	r3, #5
 1417 0510 0CAA     		add	r2, sp, #48
 1418 0512 0AA9     		add	r1, sp, #40
 1419 0514 2F48     		ldr	r0, .L71+8
 1420 0516 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1421              	.LVL89:
 234:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1422              		.loc 1 234 11 view .LVU446
 234:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1423              		.loc 1 234 115 is_stmt 0 view .LVU447
 1424 051a 9DF83230 		ldrb	r3, [sp, #50]	@ zero_extendqisi2
 234:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1425              		.loc 1 234 128 view .LVU448
 1426 051e 9DF83320 		ldrb	r2, [sp, #51]	@ zero_extendqisi2
 234:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1427              		.loc 1 234 141 view .LVU449
 1428 0522 9DF83410 		ldrb	r1, [sp, #52]	@ zero_extendqisi2
 234:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1429              		.loc 1 234 11 view .LVU450
 1430 0526 0291     		str	r1, [sp, #8]
 1431 0528 0192     		str	r2, [sp, #4]
 1432 052a 0093     		str	r3, [sp]
 1433 052c 9DF83130 		ldrb	r3, [sp, #49]	@ zero_extendqisi2
 1434 0530 9DF83020 		ldrb	r2, [sp, #48]	@ zero_extendqisi2
 1435 0534 2F49     		ldr	r1, .L71+40
 1436 0536 1FA8     		add	r0, sp, #124
 1437 0538 FFF7FEFF 		bl	sprintf
 1438              	.LVL90:
 235:Src/main.c    **** 
 1439              		.loc 1 235 11 is_stmt 1 view .LVU451
 235:Src/main.c    **** 
 1440              		.loc 1 235 54 is_stmt 0 view .LVU452
 1441 053c 1FA8     		add	r0, sp, #124
 1442 053e FFF7FEFF 		bl	strlen
 1443              	.LVL91:
 235:Src/main.c    **** 
 1444              		.loc 1 235 11 view .LVU453
 1445 0542 234D     		ldr	r5, .L71+4
 1446 0544 2346     		mov	r3, r4
 1447 0546 82B2     		uxth	r2, r0
 1448 0548 1FA9     		add	r1, sp, #124
 1449 054a 2846     		mov	r0, r5
 1450 054c FFF7FEFF 		bl	HAL_UART_Transmit
 1451              	.LVL92:
 237:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1452              		.loc 1 237 11 is_stmt 1 view .LVU454
 237:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1453              		.loc 1 237 106 is_stmt 0 view .LVU455
 1454 0550 9DF82A30 		ldrb	r3, [sp, #42]	@ zero_extendqisi2
 237:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1455              		.loc 1 237 120 view .LVU456
 1456 0554 9DF82B20 		ldrb	r2, [sp, #43]	@ zero_extendqisi2
 237:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1457              		.loc 1 237 11 view .LVU457
ARM GAS  /tmp/ccnMLrqE.s 			page 44


 1458 0558 0192     		str	r2, [sp, #4]
 1459 055a 0093     		str	r3, [sp]
 1460 055c 9DF82930 		ldrb	r3, [sp, #41]	@ zero_extendqisi2
 1461 0560 9DF82820 		ldrb	r2, [sp, #40]	@ zero_extendqisi2
 1462 0564 2449     		ldr	r1, .L71+44
 1463 0566 1FA8     		add	r0, sp, #124
 1464 0568 FFF7FEFF 		bl	sprintf
 1465              	.LVL93:
 238:Src/main.c    **** 
 1466              		.loc 1 238 11 is_stmt 1 view .LVU458
 238:Src/main.c    **** 
 1467              		.loc 1 238 54 is_stmt 0 view .LVU459
 1468 056c 1FA8     		add	r0, sp, #124
 1469 056e FFF7FEFF 		bl	strlen
 1470              	.LVL94:
 238:Src/main.c    **** 
 1471              		.loc 1 238 11 view .LVU460
 1472 0572 2346     		mov	r3, r4
 1473 0574 82B2     		uxth	r2, r0
 1474 0576 1FA9     		add	r1, sp, #124
 1475 0578 2846     		mov	r0, r5
 1476 057a FFF7FEFF 		bl	HAL_UART_Transmit
 1477              	.LVL95:
 240:Src/main.c    ****           ack_frame[1] = 0x00;
 1478              		.loc 1 240 11 is_stmt 1 view .LVU461
 240:Src/main.c    ****           ack_frame[1] = 0x00;
 1479              		.loc 1 240 24 is_stmt 0 view .LVU462
 1480 057e 0023     		movs	r3, #0
 1481 0580 8DF87830 		strb	r3, [sp, #120]
 241:Src/main.c    ****           ack_frame[2] = 0x79;
 1482              		.loc 1 241 11 is_stmt 1 view .LVU463
 241:Src/main.c    ****           ack_frame[2] = 0x79;
 1483              		.loc 1 241 24 is_stmt 0 view .LVU464
 1484 0584 8DF87930 		strb	r3, [sp, #121]
 242:Src/main.c    ****           while (hspi1.State != HAL_SPI_STATE_READY)
 1485              		.loc 1 242 11 is_stmt 1 view .LVU465
 242:Src/main.c    ****           while (hspi1.State != HAL_SPI_STATE_READY)
 1486              		.loc 1 242 24 is_stmt 0 view .LVU466
 1487 0588 7923     		movs	r3, #121
 1488 058a 8DF87A30 		strb	r3, [sp, #122]
 243:Src/main.c    ****             ;
 1489              		.loc 1 243 11 is_stmt 1 view .LVU467
 1490              	.L51:
 244:Src/main.c    ****           HAL_SPI_TransmitReceive(&hspi1, ack_frame, &ack_resp, 3, 1000);
 1491              		.loc 1 244 13 discriminator 1 view .LVU468
 243:Src/main.c    ****             ;
 1492              		.loc 1 243 17 discriminator 1 view .LVU469
 243:Src/main.c    ****             ;
 1493              		.loc 1 243 23 is_stmt 0 discriminator 1 view .LVU470
 1494 058e 114B     		ldr	r3, .L71+8
 1495 0590 93F85D30 		ldrb	r3, [r3, #93]	@ zero_extendqisi2
 1496 0594 DBB2     		uxtb	r3, r3
 243:Src/main.c    ****             ;
 1497              		.loc 1 243 17 discriminator 1 view .LVU471
 1498 0596 012B     		cmp	r3, #1
 1499 0598 F9D1     		bne	.L51
 245:Src/main.c    ****           sprintf(txt, "ACK_OF_ADD: %02x || %02x || %02x\r\n", ack_resp[0], ack_resp[1], ack_resp[2
ARM GAS  /tmp/ccnMLrqE.s 			page 45


 1500              		.loc 1 245 11 is_stmt 1 view .LVU472
 1501 059a 4FF47A74 		mov	r4, #1000
 1502 059e 0094     		str	r4, [sp]
 1503 05a0 0323     		movs	r3, #3
 1504 05a2 1DAA     		add	r2, sp, #116
 1505 05a4 1EA9     		add	r1, sp, #120
 1506 05a6 0B48     		ldr	r0, .L71+8
 1507 05a8 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 1508              	.LVL96:
 246:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1509              		.loc 1 246 11 view .LVU473
 246:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1510              		.loc 1 246 98 is_stmt 0 view .LVU474
 1511 05ac 9DF87630 		ldrb	r3, [sp, #118]	@ zero_extendqisi2
 246:Src/main.c    ****           HAL_UART_Transmit(&huart2, (uint8_t *)txt, strlen(txt), 1000);
 1512              		.loc 1 246 11 view .LVU475
 1513 05b0 0093     		str	r3, [sp]
 1514 05b2 9DF87530 		ldrb	r3, [sp, #117]	@ zero_extendqisi2
 1515 05b6 9DF87420 		ldrb	r2, [sp, #116]	@ zero_extendqisi2
 1516 05ba 1049     		ldr	r1, .L71+48
 1517 05bc 1FA8     		add	r0, sp, #124
 1518 05be FFF7FEFF 		bl	sprintf
 1519              	.LVL97:
 247:Src/main.c    **** 
 1520              		.loc 1 247 11 is_stmt 1 view .LVU476
 247:Src/main.c    **** 
 1521              		.loc 1 247 54 is_stmt 0 view .LVU477
 1522 05c2 1FA8     		add	r0, sp, #124
 1523 05c4 FFF7FEFF 		bl	strlen
 1524              	.LVL98:
 247:Src/main.c    **** 
 1525              		.loc 1 247 11 view .LVU478
 1526 05c8 2346     		mov	r3, r4
 1527 05ca 19E0     		b	.L72
 1528              	.L73:
 1529              		.align	2
 1530              	.L71:
 1531 05cc C0010000 		.word	.LC13
 1532 05d0 00000000 		.word	.LANCHOR0
 1533 05d4 00000000 		.word	.LANCHOR1
 1534 05d8 D4010000 		.word	.LC14
 1535 05dc 04020000 		.word	.LC15
 1536 05e0 28020000 		.word	.LC16
 1537 05e4 00000000 		.word	.LANCHOR2
 1538 05e8 38020000 		.word	.LC17
 1539 05ec DC000000 		.word	.LC7
 1540 05f0 04010000 		.word	.LC8
 1541 05f4 2C010000 		.word	.LC9
 1542 05f8 60010000 		.word	.LC10
 1543 05fc 88010000 		.word	.LC11
 1544              	.L72:
 1545 0600 82B2     		uxth	r2, r0
 1546 0602 1FA9     		add	r1, sp, #124
 1547 0604 0948     		ldr	r0, .L74
 1548 0606 FFF7FEFF 		bl	HAL_UART_Transmit
 1549              	.LVL99:
 249:Src/main.c    ****           uint8_t frame_resp[17];
ARM GAS  /tmp/ccnMLrqE.s 			page 46


 1550              		.loc 1 249 11 is_stmt 1 view .LVU479
 250:Src/main.c    ****           data_frame[0] = 0x0F;
 1551              		.loc 1 250 11 view .LVU480
 251:Src/main.c    ****           uint8_t data_xor[1];
 1552              		.loc 1 251 11 view .LVU481
 251:Src/main.c    ****           uint8_t data_xor[1];
 1553              		.loc 1 251 25 is_stmt 0 view .LVU482
 1554 060a 0F23     		movs	r3, #15
 1555 060c 8DF83830 		strb	r3, [sp, #56]
 252:Src/main.c    ****           uint8_t xor_resp[1];
 1556              		.loc 1 252 11 is_stmt 1 view .LVU483
 253:Src/main.c    ****           data_xor[0] = data_frame[0];
 1557              		.loc 1 253 11 view .LVU484
 254:Src/main.c    **** 
 1558              		.loc 1 254 11 view .LVU485
 254:Src/main.c    **** 
 1559              		.loc 1 254 23 is_stmt 0 view .LVU486
 1560 0610 8DF81830 		strb	r3, [sp, #24]
 256:Src/main.c    ****           int tmp_index = dd_index;
 1561              		.loc 1 256 11 is_stmt 1 view .LVU487
 1562              	.LVL100:
 257:Src/main.c    ****           for (size_t k = tmp_index; k < tmp_index + 4; k++)
 1563              		.loc 1 257 11 view .LVU488
 258:Src/main.c    ****           {
 1564              		.loc 1 258 11 view .LVU489
 1565              	.LBB12:
 258:Src/main.c    ****           {
 1566              		.loc 1 258 16 view .LVU490
 258:Src/main.c    ****           {
 1567              		.loc 1 258 23 is_stmt 0 view .LVU491
 1568 0614 4F46     		mov	r7, r9
 1569              	.LVL101:
 258:Src/main.c    ****           {
 1570              		.loc 1 258 11 view .LVU492
 1571 0616 C846     		mov	r8, r9
 1572              	.LBE12:
 256:Src/main.c    ****           int tmp_index = dd_index;
 1573              		.loc 1 256 15 view .LVU493
 1574 0618 0125     		movs	r5, #1
 1575              	.LBB13:
 258:Src/main.c    ****           {
 1576              		.loc 1 258 11 view .LVU494
 1577 061a 3EE6     		b	.L52
 1578              	.LVL102:
 1579              	.L61:
 258:Src/main.c    ****           {
 1580              		.loc 1 258 11 view .LVU495
 1581              	.LBE13:
 230:Src/main.c    ****           while (hspi1.State != HAL_SPI_STATE_READY)
 1582              		.loc 1 230 22 view .LVU496
 1583 061c DDF814A0 		ldr	r10, [sp, #20]
 1584 0620 C146     		mov	r9, r8
 1585              	.LVL103:
 230:Src/main.c    ****           while (hspi1.State != HAL_SPI_STATE_READY)
 1586              		.loc 1 230 22 view .LVU497
 1587 0622 A2E6     		b	.L58
 1588              	.LVL104:
ARM GAS  /tmp/ccnMLrqE.s 			page 47


 1589              	.L63:
 315:Src/main.c    ****             return;
 1590              		.loc 1 315 13 is_stmt 1 view .LVU498
 316:Src/main.c    ****           }
 1591              		.loc 1 316 13 view .LVU499
 1592              	.LBE14:
 1593              	.LBE15:
 1594              	.LBE19:
 337:Src/main.c    **** 
 1595              		.loc 1 337 1 is_stmt 0 view .LVU500
 1596 0624 0020     		movs	r0, #0
 1597 0626 39B0     		add	sp, sp, #228
 1598              	.LCFI11:
 1599              		.cfi_def_cfa_offset 36
 1600              		@ sp needed
 1601 0628 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1602              	.LVL105:
 1603              	.L75:
 337:Src/main.c    **** 
 1604              		.loc 1 337 1 view .LVU501
 1605              		.align	2
 1606              	.L74:
 1607 062c 00000000 		.word	.LANCHOR0
 1608              		.cfi_endproc
 1609              	.LFE133:
 1611              		.global	huart2
 1612              		.global	hspi1
 1613              		.global	arr_dd
 1614              		.global	arr_aaaa
 1615              		.section	.bss.hspi1,"aw",%nobits
 1616              		.align	2
 1617              		.set	.LANCHOR1,. + 0
 1620              	hspi1:
 1621 0000 00000000 		.space	100
 1621      00000000 
 1621      00000000 
 1621      00000000 
 1621      00000000 
 1622              		.section	.bss.huart2,"aw",%nobits
 1623              		.align	2
 1624              		.set	.LANCHOR0,. + 0
 1627              	huart2:
 1628 0000 00000000 		.space	128
 1628      00000000 
 1628      00000000 
 1628      00000000 
 1628      00000000 
 1629              		.section	.data.arr_aaaa,"aw"
 1630              		.align	2
 1631              		.set	.LANCHOR2,. + 0
 1634              	arr_aaaa:
 1635 0000 00000000 		.word	0
 1636 0004 08000000 		.word	8
 1637 0008 10000000 		.word	16
 1638 000c 18000000 		.word	24
 1639 0010 20000000 		.word	32
 1640 0014 28000000 		.word	40
ARM GAS  /tmp/ccnMLrqE.s 			page 48


 1641 0018 30000000 		.word	48
 1642 001c 38000000 		.word	56
 1643 0020 40000000 		.word	64
 1644 0024 48000000 		.word	72
 1645 0028 50000000 		.word	80
 1646 002c 58000000 		.word	88
 1647 0030 60000000 		.word	96
 1648 0034 68000000 		.word	104
 1649 0038 70000000 		.word	112
 1650 003c 78000000 		.word	120
 1651 0040 80000000 		.word	128
 1652 0044 88000000 		.word	136
 1653 0048 90000000 		.word	144
 1654 004c 98000000 		.word	152
 1655 0050 A0000000 		.word	160
 1656 0054 A8000000 		.word	168
 1657 0058 B0000000 		.word	176
 1658 005c B8000000 		.word	184
 1659 0060 C0000000 		.word	192
 1660 0064 C8000000 		.word	200
 1661 0068 D0000000 		.word	208
 1662 006c D8000000 		.word	216
 1663 0070 E0000000 		.word	224
 1664 0074 E8000000 		.word	232
 1665 0078 F0000000 		.word	240
 1666 007c F8000000 		.word	248
 1667 0080 00010000 		.word	256
 1668 0084 08010000 		.word	264
 1669 0088 10010000 		.word	272
 1670 008c 18010000 		.word	280
 1671 0090 20010000 		.word	288
 1672 0094 28010000 		.word	296
 1673 0098 30010000 		.word	304
 1674 009c 38010000 		.word	312
 1675 00a0 40010000 		.word	320
 1676 00a4 48010000 		.word	328
 1677 00a8 50010000 		.word	336
 1678 00ac 58010000 		.word	344
 1679 00b0 60010000 		.word	352
 1680 00b4 68010000 		.word	360
 1681 00b8 70010000 		.word	368
 1682 00bc 78010000 		.word	376
 1683 00c0 80010000 		.word	384
 1684 00c4 88010000 		.word	392
 1685 00c8 90010000 		.word	400
 1686 00cc 98010000 		.word	408
 1687 00d0 A0010000 		.word	416
 1688 00d4 A8010000 		.word	424
 1689 00d8 B0010000 		.word	432
 1690 00dc B8010000 		.word	440
 1691 00e0 C0010000 		.word	448
 1692 00e4 C8010000 		.word	456
 1693 00e8 D0010000 		.word	464
 1694 00ec D8010000 		.word	472
 1695 00f0 E0010000 		.word	480
 1696 00f4 E8010000 		.word	488
 1697 00f8 F0010000 		.word	496
ARM GAS  /tmp/ccnMLrqE.s 			page 49


 1698 00fc F8010000 		.word	504
 1699 0100 00020000 		.word	512
 1700 0104 08020000 		.word	520
 1701 0108 10020000 		.word	528
 1702 010c 18020000 		.word	536
 1703 0110 20020000 		.word	544
 1704 0114 28020000 		.word	552
 1705 0118 30020000 		.word	560
 1706 011c 38020000 		.word	568
 1707 0120 40020000 		.word	576
 1708 0124 48020000 		.word	584
 1709 0128 50020000 		.word	592
 1710 012c 58020000 		.word	600
 1711 0130 60020000 		.word	608
 1712 0134 68020000 		.word	616
 1713 0138 70020000 		.word	624
 1714 013c 78020000 		.word	632
 1715 0140 80020000 		.word	640
 1716 0144 88020000 		.word	648
 1717 0148 90020000 		.word	656
 1718 014c 98020000 		.word	664
 1719 0150 A0020000 		.word	672
 1720 0154 A8020000 		.word	680
 1721 0158 B0020000 		.word	688
 1722 015c B8020000 		.word	696
 1723 0160 C0020000 		.word	704
 1724 0164 C8020000 		.word	712
 1725 0168 D0020000 		.word	720
 1726 016c D8020000 		.word	728
 1727 0170 E0020000 		.word	736
 1728 0174 E8020000 		.word	744
 1729 0178 F0020000 		.word	752
 1730 017c F8020000 		.word	760
 1731 0180 00030000 		.word	768
 1732 0184 08030000 		.word	776
 1733 0188 10030000 		.word	784
 1734 018c 18030000 		.word	792
 1735 0190 20030000 		.word	800
 1736 0194 28030000 		.word	808
 1737 0198 30030000 		.word	816
 1738 019c 38030000 		.word	824
 1739 01a0 40030000 		.word	832
 1740 01a4 48030000 		.word	840
 1741 01a8 50030000 		.word	848
 1742 01ac 58030000 		.word	856
 1743 01b0 60030000 		.word	864
 1744 01b4 68030000 		.word	872
 1745 01b8 70030000 		.word	880
 1746 01bc 78030000 		.word	888
 1747 01c0 80030000 		.word	896
 1748 01c4 88030000 		.word	904
 1749 01c8 90030000 		.word	912
 1750 01cc 98030000 		.word	920
 1751 01d0 A0030000 		.word	928
 1752 01d4 A8030000 		.word	936
 1753 01d8 B0030000 		.word	944
 1754 01dc B8030000 		.word	952
ARM GAS  /tmp/ccnMLrqE.s 			page 50


 1755 01e0 C0030000 		.word	960
 1756 01e4 C8030000 		.word	968
 1757 01e8 D0030000 		.word	976
 1758 01ec D8030000 		.word	984
 1759 01f0 E0030000 		.word	992
 1760 01f4 E8030000 		.word	1000
 1761 01f8 F0030000 		.word	1008
 1762 01fc F8030000 		.word	1016
 1763 0200 00040000 		.word	1024
 1764 0204 08040000 		.word	1032
 1765 0208 10040000 		.word	1040
 1766 020c 18040000 		.word	1048
 1767 0210 20040000 		.word	1056
 1768 0214 28040000 		.word	1064
 1769 0218 30040000 		.word	1072
 1770 021c 38040000 		.word	1080
 1771 0220 40040000 		.word	1088
 1772 0224 48040000 		.word	1096
 1773 0228 50040000 		.word	1104
 1774 022c 58040000 		.word	1112
 1775 0230 60040000 		.word	1120
 1776 0234 68040000 		.word	1128
 1777 0238 70040000 		.word	1136
 1778 023c 78040000 		.word	1144
 1779 0240 80040000 		.word	1152
 1780 0244 88040000 		.word	1160
 1781 0248 90040000 		.word	1168
 1782 024c 98040000 		.word	1176
 1783 0250 A0040000 		.word	1184
 1784 0254 A8040000 		.word	1192
 1785 0258 B0040000 		.word	1200
 1786 025c B8040000 		.word	1208
 1787 0260 C0040000 		.word	1216
 1788 0264 C8040000 		.word	1224
 1789 0268 D0040000 		.word	1232
 1790 026c D8040000 		.word	1240
 1791 0270 E0040000 		.word	1248
 1792 0274 E8040000 		.word	1256
 1793 0278 F0040000 		.word	1264
 1794 027c F8040000 		.word	1272
 1795 0280 00050000 		.word	1280
 1796 0284 08050000 		.word	1288
 1797 0288 10050000 		.word	1296
 1798 028c 18050000 		.word	1304
 1799 0290 20050000 		.word	1312
 1800 0294 28050000 		.word	1320
 1801 0298 30050000 		.word	1328
 1802 029c 38050000 		.word	1336
 1803 02a0 40050000 		.word	1344
 1804 02a4 48050000 		.word	1352
 1805 02a8 50050000 		.word	1360
 1806 02ac 58050000 		.word	1368
 1807 02b0 60050000 		.word	1376
 1808 02b4 68050000 		.word	1384
 1809 02b8 70050000 		.word	1392
 1810 02bc 78050000 		.word	1400
 1811 02c0 80050000 		.word	1408
ARM GAS  /tmp/ccnMLrqE.s 			page 51


 1812 02c4 88050000 		.word	1416
 1813 02c8 90050000 		.word	1424
 1814 02cc 98050000 		.word	1432
 1815 02d0 A0050000 		.word	1440
 1816 02d4 A8050000 		.word	1448
 1817 02d8 B0050000 		.word	1456
 1818 02dc B8050000 		.word	1464
 1819 02e0 C0050000 		.word	1472
 1820 02e4 C8050000 		.word	1480
 1821 02e8 D0050000 		.word	1488
 1822 02ec D8050000 		.word	1496
 1823 02f0 E0050000 		.word	1504
 1824 02f4 E8050000 		.word	1512
 1825 02f8 F0050000 		.word	1520
 1826 02fc F8050000 		.word	1528
 1827 0300 00060000 		.word	1536
 1828 0304 08060000 		.word	1544
 1829 0308 10060000 		.word	1552
 1830 030c 18060000 		.word	1560
 1831 0310 20060000 		.word	1568
 1832 0314 28060000 		.word	1576
 1833 0318 30060000 		.word	1584
 1834 031c 38060000 		.word	1592
 1835 0320 40060000 		.word	1600
 1836 0324 48060000 		.word	1608
 1837 0328 50060000 		.word	1616
 1838 032c 58060000 		.word	1624
 1839 0330 60060000 		.word	1632
 1840 0334 68060000 		.word	1640
 1841 0338 70060000 		.word	1648
 1842 033c 78060000 		.word	1656
 1843 0340 80060000 		.word	1664
 1844 0344 88060000 		.word	1672
 1845 0348 90060000 		.word	1680
 1846 034c 98060000 		.word	1688
 1847 0350 A0060000 		.word	1696
 1848 0354 A8060000 		.word	1704
 1849 0358 B0060000 		.word	1712
 1850 035c B8060000 		.word	1720
 1851 0360 C0060000 		.word	1728
 1852 0364 C8060000 		.word	1736
 1853 0368 D0060000 		.word	1744
 1854 036c D8060000 		.word	1752
 1855 0370 E0060000 		.word	1760
 1856 0374 E8060000 		.word	1768
 1857 0378 F0060000 		.word	1776
 1858 037c F8060000 		.word	1784
 1859 0380 00070000 		.word	1792
 1860 0384 08070000 		.word	1800
 1861 0388 10070000 		.word	1808
 1862 038c 18070000 		.word	1816
 1863 0390 20070000 		.word	1824
 1864 0394 28070000 		.word	1832
 1865 0398 30070000 		.word	1840
 1866 039c 38070000 		.word	1848
 1867 03a0 40070000 		.word	1856
 1868 03a4 48070000 		.word	1864
ARM GAS  /tmp/ccnMLrqE.s 			page 52


 1869 03a8 50070000 		.word	1872
 1870 03ac 58070000 		.word	1880
 1871 03b0 60070000 		.word	1888
 1872 03b4 68070000 		.word	1896
 1873 03b8 70070000 		.word	1904
 1874 03bc 78070000 		.word	1912
 1875 03c0 80070000 		.word	1920
 1876 03c4 88070000 		.word	1928
 1877 03c8 90070000 		.word	1936
 1878 03cc 98070000 		.word	1944
 1879 03d0 A0070000 		.word	1952
 1880 03d4 A8070000 		.word	1960
 1881 03d8 B0070000 		.word	1968
 1882 03dc B8070000 		.word	1976
 1883 03e0 C0070000 		.word	1984
 1884 03e4 C8070000 		.word	1992
 1885 03e8 D0070000 		.word	2000
 1886 03ec D8070000 		.word	2008
 1887 03f0 E0070000 		.word	2016
 1888 03f4 E8070000 		.word	2024
 1889 03f8 F0070000 		.word	2032
 1890 03fc F8070000 		.word	2040
 1891 0400 00080000 		.word	2048
 1892 0404 08080000 		.word	2056
 1893 0408 10080000 		.word	2064
 1894 040c 18080000 		.word	2072
 1895 0410 20080000 		.word	2080
 1896 0414 28080000 		.word	2088
 1897 0418 30080000 		.word	2096
 1898 041c 38080000 		.word	2104
 1899 0420 40080000 		.word	2112
 1900 0424 48080000 		.word	2120
 1901 0428 50080000 		.word	2128
 1902 042c 58080000 		.word	2136
 1903 0430 60080000 		.word	2144
 1904 0434 68080000 		.word	2152
 1905 0438 70080000 		.word	2160
 1906 043c 78080000 		.word	2168
 1907 0440 80080000 		.word	2176
 1908 0444 88080000 		.word	2184
 1909 0448 90080000 		.word	2192
 1910 044c 98080000 		.word	2200
 1911 0450 A0080000 		.word	2208
 1912 0454 A8080000 		.word	2216
 1913 0458 B0080000 		.word	2224
 1914 045c B8080000 		.word	2232
 1915 0460 C0080000 		.word	2240
 1916 0464 C8080000 		.word	2248
 1917 0468 D0080000 		.word	2256
 1918 046c D8080000 		.word	2264
 1919 0470 E0080000 		.word	2272
 1920 0474 E8080000 		.word	2280
 1921 0478 F0080000 		.word	2288
 1922 047c F8080000 		.word	2296
 1923 0480 00090000 		.word	2304
 1924 0484 08090000 		.word	2312
 1925 0488 10090000 		.word	2320
ARM GAS  /tmp/ccnMLrqE.s 			page 53


 1926 048c 18090000 		.word	2328
 1927 0490 20090000 		.word	2336
 1928 0494 28090000 		.word	2344
 1929 0498 30090000 		.word	2352
 1930 049c 38090000 		.word	2360
 1931 04a0 40090000 		.word	2368
 1932 04a4 48090000 		.word	2376
 1933 04a8 50090000 		.word	2384
 1934 04ac 58090000 		.word	2392
 1935 04b0 60090000 		.word	2400
 1936 04b4 68090000 		.word	2408
 1937 04b8 70090000 		.word	2416
 1938 04bc 78090000 		.word	2424
 1939 04c0 80090000 		.word	2432
 1940 04c4 88090000 		.word	2440
 1941 04c8 90090000 		.word	2448
 1942 04cc 98090000 		.word	2456
 1943 04d0 A0090000 		.word	2464
 1944 04d4 A8090000 		.word	2472
 1945 04d8 B0090000 		.word	2480
 1946 04dc B8090000 		.word	2488
 1947 04e0 C0090000 		.word	2496
 1948 04e4 C8090000 		.word	2504
 1949 04e8 D0090000 		.word	2512
 1950 04ec D8090000 		.word	2520
 1951 04f0 E0090000 		.word	2528
 1952 04f4 E8090000 		.word	2536
 1953 04f8 F0090000 		.word	2544
 1954 04fc F8090000 		.word	2552
 1955 0500 000A0000 		.word	2560
 1956 0504 080A0000 		.word	2568
 1957 0508 100A0000 		.word	2576
 1958 050c 180A0000 		.word	2584
 1959 0510 200A0000 		.word	2592
 1960 0514 280A0000 		.word	2600
 1961 0518 300A0000 		.word	2608
 1962 051c 380A0000 		.word	2616
 1963 0520 400A0000 		.word	2624
 1964 0524 480A0000 		.word	2632
 1965 0528 500A0000 		.word	2640
 1966 052c 580A0000 		.word	2648
 1967 0530 600A0000 		.word	2656
 1968 0534 680A0000 		.word	2664
 1969 0538 700A0000 		.word	2672
 1970 053c 780A0000 		.word	2680
 1971 0540 800A0000 		.word	2688
 1972 0544 880A0000 		.word	2696
 1973 0548 900A0000 		.word	2704
 1974 054c 980A0000 		.word	2712
 1975 0550 A00A0000 		.word	2720
 1976 0554 A80A0000 		.word	2728
 1977 0558 B00A0000 		.word	2736
 1978 055c B80A0000 		.word	2744
 1979 0560 C00A0000 		.word	2752
 1980 0564 C80A0000 		.word	2760
 1981 0568 D00A0000 		.word	2768
 1982 056c D80A0000 		.word	2776
ARM GAS  /tmp/ccnMLrqE.s 			page 54


 1983 0570 E00A0000 		.word	2784
 1984 0574 E80A0000 		.word	2792
 1985 0578 F00A0000 		.word	2800
 1986 057c F80A0000 		.word	2808
 1987 0580 000B0000 		.word	2816
 1988 0584 080B0000 		.word	2824
 1989 0588 100B0000 		.word	2832
 1990 058c 180B0000 		.word	2840
 1991 0590 200B0000 		.word	2848
 1992 0594 280B0000 		.word	2856
 1993 0598 300B0000 		.word	2864
 1994 059c 380B0000 		.word	2872
 1995 05a0 400B0000 		.word	2880
 1996 05a4 480B0000 		.word	2888
 1997 05a8 500B0000 		.word	2896
 1998 05ac 580B0000 		.word	2904
 1999 05b0 600B0000 		.word	2912
 2000 05b4 680B0000 		.word	2920
 2001 05b8 700B0000 		.word	2928
 2002 05bc 780B0000 		.word	2936
 2003 05c0 800B0000 		.word	2944
 2004 05c4 880B0000 		.word	2952
 2005 05c8 900B0000 		.word	2960
 2006 05cc 980B0000 		.word	2968
 2007 05d0 A00B0000 		.word	2976
 2008 05d4 A80B0000 		.word	2984
 2009 05d8 B00B0000 		.word	2992
 2010 05dc B80B0000 		.word	3000
 2011 05e0 C00B0000 		.word	3008
 2012 05e4 C80B0000 		.word	3016
 2013 05e8 D00B0000 		.word	3024
 2014 05ec D80B0000 		.word	3032
 2015 05f0 E00B0000 		.word	3040
 2016 05f4 E80B0000 		.word	3048
 2017 05f8 F00B0000 		.word	3056
 2018 05fc F80B0000 		.word	3064
 2019 0600 000C0000 		.word	3072
 2020 0604 080C0000 		.word	3080
 2021 0608 100C0000 		.word	3088
 2022 060c 180C0000 		.word	3096
 2023 0610 200C0000 		.word	3104
 2024 0614 280C0000 		.word	3112
 2025 0618 300C0000 		.word	3120
 2026 061c 380C0000 		.word	3128
 2027 0620 400C0000 		.word	3136
 2028 0624 480C0000 		.word	3144
 2029 0628 500C0000 		.word	3152
 2030 062c 580C0000 		.word	3160
 2031 0630 600C0000 		.word	3168
 2032 0634 680C0000 		.word	3176
 2033 0638 700C0000 		.word	3184
 2034 063c 780C0000 		.word	3192
 2035 0640 800C0000 		.word	3200
 2036 0644 880C0000 		.word	3208
 2037 0648 900C0000 		.word	3216
 2038 064c 980C0000 		.word	3224
 2039 0650 A00C0000 		.word	3232
ARM GAS  /tmp/ccnMLrqE.s 			page 55


 2040 0654 A80C0000 		.word	3240
 2041 0658 B00C0000 		.word	3248
 2042 065c B80C0000 		.word	3256
 2043 0660 C00C0000 		.word	3264
 2044 0664 C80C0000 		.word	3272
 2045 0668 D00C0000 		.word	3280
 2046 066c D80C0000 		.word	3288
 2047 0670 E00C0000 		.word	3296
 2048 0674 E80C0000 		.word	3304
 2049 0678 F00C0000 		.word	3312
 2050 067c F80C0000 		.word	3320
 2051 0680 000D0000 		.word	3328
 2052 0684 080D0000 		.word	3336
 2053 0688 100D0000 		.word	3344
 2054 068c 180D0000 		.word	3352
 2055 0690 200D0000 		.word	3360
 2056 0694 280D0000 		.word	3368
 2057 0698 300D0000 		.word	3376
 2058 069c 380D0000 		.word	3384
 2059 06a0 400D0000 		.word	3392
 2060 06a4 480D0000 		.word	3400
 2061 06a8 500D0000 		.word	3408
 2062 06ac 580D0000 		.word	3416
 2063 06b0 600D0000 		.word	3424
 2064 06b4 680D0000 		.word	3432
 2065 06b8 700D0000 		.word	3440
 2066 06bc 780D0000 		.word	3448
 2067 06c0 800D0000 		.word	3456
 2068 06c4 880D0000 		.word	3464
 2069 06c8 900D0000 		.word	3472
 2070 06cc 980D0000 		.word	3480
 2071 06d0 A00D0000 		.word	3488
 2072 06d4 A80D0000 		.word	3496
 2073 06d8 B00D0000 		.word	3504
 2074 06dc B80D0000 		.word	3512
 2075 06e0 C00D0000 		.word	3520
 2076 06e4 C80D0000 		.word	3528
 2077 06e8 D00D0000 		.word	3536
 2078 06ec D80D0000 		.word	3544
 2079 06f0 E00D0000 		.word	3552
 2080 06f4 E80D0000 		.word	3560
 2081 06f8 F00D0000 		.word	3568
 2082 06fc F80D0000 		.word	3576
 2083 0700 000E0000 		.word	3584
 2084 0704 080E0000 		.word	3592
 2085 0708 100E0000 		.word	3600
 2086 070c 180E0000 		.word	3608
 2087 0710 200E0000 		.word	3616
 2088 0714 280E0000 		.word	3624
 2089 0718 300E0000 		.word	3632
 2090 071c 380E0000 		.word	3640
 2091 0720 400E0000 		.word	3648
 2092 0724 480E0000 		.word	3656
 2093 0728 500E0000 		.word	3664
 2094 072c 580E0000 		.word	3672
 2095 0730 600E0000 		.word	3680
 2096 0734 680E0000 		.word	3688
ARM GAS  /tmp/ccnMLrqE.s 			page 56


 2097 0738 700E0000 		.word	3696
 2098 073c 780E0000 		.word	3704
 2099 0740 800E0000 		.word	3712
 2100 0744 880E0000 		.word	3720
 2101 0748 900E0000 		.word	3728
 2102 074c 980E0000 		.word	3736
 2103 0750 A00E0000 		.word	3744
 2104 0754 A80E0000 		.word	3752
 2105 0758 B00E0000 		.word	3760
 2106 075c B80E0000 		.word	3768
 2107 0760 C00E0000 		.word	3776
 2108 0764 C80E0000 		.word	3784
 2109 0768 D00E0000 		.word	3792
 2110 076c D80E0000 		.word	3800
 2111 0770 E00E0000 		.word	3808
 2112 0774 E80E0000 		.word	3816
 2113 0778 F00E0000 		.word	3824
 2114 077c F80E0000 		.word	3832
 2115 0780 000F0000 		.word	3840
 2116 0784 080F0000 		.word	3848
 2117 0788 100F0000 		.word	3856
 2118 078c 180F0000 		.word	3864
 2119 0790 200F0000 		.word	3872
 2120 0794 280F0000 		.word	3880
 2121 0798 300F0000 		.word	3888
 2122 079c 380F0000 		.word	3896
 2123 07a0 400F0000 		.word	3904
 2124 07a4 480F0000 		.word	3912
 2125 07a8 500F0000 		.word	3920
 2126 07ac 580F0000 		.word	3928
 2127 07b0 600F0000 		.word	3936
 2128 07b4 680F0000 		.word	3944
 2129 07b8 700F0000 		.word	3952
 2130 07bc 780F0000 		.word	3960
 2131 07c0 800F0000 		.word	3968
 2132 07c4 880F0000 		.word	3976
 2133 07c8 900F0000 		.word	3984
 2134 07cc 980F0000 		.word	3992
 2135 07d0 A00F0000 		.word	4000
 2136 07d4 A80F0000 		.word	4008
 2137 07d8 B00F0000 		.word	4016
 2138 07dc B80F0000 		.word	4024
 2139 07e0 C00F0000 		.word	4032
 2140 07e4 C80F0000 		.word	4040
 2141 07e8 D00F0000 		.word	4048
 2142 07ec D80F0000 		.word	4056
 2143 07f0 E00F0000 		.word	4064
 2144 07f4 E80F0000 		.word	4072
 2145 07f8 F00F0000 		.word	4080
 2146 07fc F80F0000 		.word	4088
 2147 0800 00100000 		.word	4096
 2148 0804 08100000 		.word	4104
 2149 0808 10100000 		.word	4112
 2150 080c 18100000 		.word	4120
 2151 0810 20100000 		.word	4128
 2152 0814 28100000 		.word	4136
 2153 0818 30100000 		.word	4144
ARM GAS  /tmp/ccnMLrqE.s 			page 57


 2154 081c 38100000 		.word	4152
 2155 0820 40100000 		.word	4160
 2156 0824 48100000 		.word	4168
 2157 0828 50100000 		.word	4176
 2158 082c 58100000 		.word	4184
 2159 0830 60100000 		.word	4192
 2160 0834 68100000 		.word	4200
 2161 0838 70100000 		.word	4208
 2162 083c 78100000 		.word	4216
 2163 0840 80100000 		.word	4224
 2164 0844 88100000 		.word	4232
 2165 0848 90100000 		.word	4240
 2166 084c 98100000 		.word	4248
 2167 0850 A0100000 		.word	4256
 2168 0854 A8100000 		.word	4264
 2169 0858 B0100000 		.word	4272
 2170 085c B8100000 		.word	4280
 2171 0860 C0100000 		.word	4288
 2172 0864 C8100000 		.word	4296
 2173 0868 D0100000 		.word	4304
 2174 086c D8100000 		.word	4312
 2175 0870 E0100000 		.word	4320
 2176 0874 E8100000 		.word	4328
 2177 0878 F0100000 		.word	4336
 2178 087c F8100000 		.word	4344
 2179 0880 00110000 		.word	4352
 2180 0884 08110000 		.word	4360
 2181 0888 10110000 		.word	4368
 2182 088c 18110000 		.word	4376
 2183 0890 20110000 		.word	4384
 2184 0894 28110000 		.word	4392
 2185 0898 30110000 		.word	4400
 2186 089c 38110000 		.word	4408
 2187 08a0 40110000 		.word	4416
 2188 08a4 48110000 		.word	4424
 2189 08a8 50110000 		.word	4432
 2190 08ac 58110000 		.word	4440
 2191 08b0 60110000 		.word	4448
 2192 08b4 68110000 		.word	4456
 2193 08b8 70110000 		.word	4464
 2194 08bc 78110000 		.word	4472
 2195 08c0 80110000 		.word	4480
 2196 08c4 88110000 		.word	4488
 2197 08c8 90110000 		.word	4496
 2198 08cc 98110000 		.word	4504
 2199 08d0 A0110000 		.word	4512
 2200 08d4 A8110000 		.word	4520
 2201 08d8 B0110000 		.word	4528
 2202 08dc B8110000 		.word	4536
 2203 08e0 C0110000 		.word	4544
 2204 08e4 C8110000 		.word	4552
 2205 08e8 D0110000 		.word	4560
 2206 08ec D8110000 		.word	4568
 2207 08f0 E0110000 		.word	4576
 2208 08f4 E8110000 		.word	4584
 2209 08f8 F0110000 		.word	4592
 2210 08fc F8110000 		.word	4600
ARM GAS  /tmp/ccnMLrqE.s 			page 58


 2211 0900 00120000 		.word	4608
 2212 0904 08120000 		.word	4616
 2213 0908 10120000 		.word	4624
 2214 090c 18120000 		.word	4632
 2215 0910 20120000 		.word	4640
 2216 0914 28120000 		.word	4648
 2217 0918 30120000 		.word	4656
 2218 091c 38120000 		.word	4664
 2219 0920 40120000 		.word	4672
 2220 0924 48120000 		.word	4680
 2221 0928 50120000 		.word	4688
 2222 092c 58120000 		.word	4696
 2223 0930 60120000 		.word	4704
 2224 0934 68120000 		.word	4712
 2225 0938 70120000 		.word	4720
 2226 093c 78120000 		.word	4728
 2227 0940 80120000 		.word	4736
 2228 0944 88120000 		.word	4744
 2229 0948 90120000 		.word	4752
 2230 094c 98120000 		.word	4760
 2231 0950 A0120000 		.word	4768
 2232 0954 A8120000 		.word	4776
 2233 0958 B0120000 		.word	4784
 2234 095c B8120000 		.word	4792
 2235 0960 C0120000 		.word	4800
 2236 0964 C8120000 		.word	4808
 2237 0968 D0120000 		.word	4816
 2238 096c D8120000 		.word	4824
 2239 0970 E0120000 		.word	4832
 2240 0974 E8120000 		.word	4840
 2241 0978 F0120000 		.word	4848
 2242 097c F8120000 		.word	4856
 2243 0980 00130000 		.word	4864
 2244 0984 08130000 		.word	4872
 2245 0988 10130000 		.word	4880
 2246 098c 18130000 		.word	4888
 2247 0990 20130000 		.word	4896
 2248 0994 28130000 		.word	4904
 2249 0998 30130000 		.word	4912
 2250 099c 38130000 		.word	4920
 2251 09a0 40130000 		.word	4928
 2252 09a4 48130000 		.word	4936
 2253 09a8 50130000 		.word	4944
 2254 09ac 58130000 		.word	4952
 2255 09b0 60130000 		.word	4960
 2256 09b4 68130000 		.word	4968
 2257 09b8 70130000 		.word	4976
 2258 09bc 78130000 		.word	4984
 2259 09c0 80130000 		.word	4992
 2260 09c4 88130000 		.word	5000
 2261 09c8 90130000 		.word	5008
 2262 09cc 98130000 		.word	5016
 2263 09d0 A0130000 		.word	5024
 2264 09d4 A8130000 		.word	5032
 2265 09d8 B0130000 		.word	5040
 2266 09dc B8130000 		.word	5048
 2267 09e0 C0130000 		.word	5056
ARM GAS  /tmp/ccnMLrqE.s 			page 59


 2268 09e4 C8130000 		.word	5064
 2269 09e8 D0130000 		.word	5072
 2270 09ec D8130000 		.word	5080
 2271 09f0 E0130000 		.word	5088
 2272 09f4 E8130000 		.word	5096
 2273 09f8 F0130000 		.word	5104
 2274 09fc F8130000 		.word	5112
 2275 0a00 00140000 		.word	5120
 2276 0a04 08140000 		.word	5128
 2277 0a08 10140000 		.word	5136
 2278 0a0c 18140000 		.word	5144
 2279 0a10 20140000 		.word	5152
 2280 0a14 28140000 		.word	5160
 2281 0a18 30140000 		.word	5168
 2282 0a1c 38140000 		.word	5176
 2283 0a20 40140000 		.word	5184
 2284 0a24 48140000 		.word	5192
 2285 0a28 50140000 		.word	5200
 2286 0a2c 58140000 		.word	5208
 2287 0a30 60140000 		.word	5216
 2288 0a34 68140000 		.word	5224
 2289 0a38 70140000 		.word	5232
 2290 0a3c 78140000 		.word	5240
 2291 0a40 80140000 		.word	5248
 2292 0a44 88140000 		.word	5256
 2293 0a48 90140000 		.word	5264
 2294 0a4c 98140000 		.word	5272
 2295 0a50 A0140000 		.word	5280
 2296 0a54 A8140000 		.word	5288
 2297 0a58 B0140000 		.word	5296
 2298 0a5c B8140000 		.word	5304
 2299 0a60 C0140000 		.word	5312
 2300 0a64 C8140000 		.word	5320
 2301 0a68 D0140000 		.word	5328
 2302 0a6c D8140000 		.word	5336
 2303 0a70 E0140000 		.word	5344
 2304 0a74 E8140000 		.word	5352
 2305 0a78 F0140000 		.word	5360
 2306 0a7c F8140000 		.word	5368
 2307 0a80 00150000 		.word	5376
 2308 0a84 08150000 		.word	5384
 2309 0a88 10150000 		.word	5392
 2310 0a8c 18150000 		.word	5400
 2311 0a90 20150000 		.word	5408
 2312 0a94 28150000 		.word	5416
 2313 0a98 30150000 		.word	5424
 2314 0a9c 38150000 		.word	5432
 2315 0aa0 40150000 		.word	5440
 2316 0aa4 48150000 		.word	5448
 2317 0aa8 50150000 		.word	5456
 2318 0aac 58150000 		.word	5464
 2319 0ab0 60150000 		.word	5472
 2320 0ab4 68150000 		.word	5480
 2321 0ab8 70150000 		.word	5488
 2322 0abc 78150000 		.word	5496
 2323 0ac0 80150000 		.word	5504
 2324 0ac4 88150000 		.word	5512
ARM GAS  /tmp/ccnMLrqE.s 			page 60


 2325 0ac8 90150000 		.word	5520
 2326 0acc 98150000 		.word	5528
 2327 0ad0 A0150000 		.word	5536
 2328 0ad4 A8150000 		.word	5544
 2329 0ad8 B0150000 		.word	5552
 2330 0adc B8150000 		.word	5560
 2331 0ae0 C0150000 		.word	5568
 2332 0ae4 C8150000 		.word	5576
 2333 0ae8 D0150000 		.word	5584
 2334 0aec D8150000 		.word	5592
 2335 0af0 E0150000 		.word	5600
 2336 0af4 E8150000 		.word	5608
 2337 0af8 F0150000 		.word	5616
 2338 0afc F8150000 		.word	5624
 2339 0b00 00160000 		.word	5632
 2340 0b04 08160000 		.word	5640
 2341 0b08 10160000 		.word	5648
 2342 0b0c 18160000 		.word	5656
 2343 0b10 20160000 		.word	5664
 2344 0b14 28160000 		.word	5672
 2345 0b18 30160000 		.word	5680
 2346 0b1c 38160000 		.word	5688
 2347 0b20 40160000 		.word	5696
 2348 0b24 48160000 		.word	5704
 2349 0b28 50160000 		.word	5712
 2350 0b2c 58160000 		.word	5720
 2351 0b30 60160000 		.word	5728
 2352 0b34 68160000 		.word	5736
 2353 0b38 70160000 		.word	5744
 2354 0b3c 78160000 		.word	5752
 2355 0b40 80160000 		.word	5760
 2356 0b44 88160000 		.word	5768
 2357 0b48 90160000 		.word	5776
 2358 0b4c 98160000 		.word	5784
 2359 0b50 A0160000 		.word	5792
 2360 0b54 A8160000 		.word	5800
 2361 0b58 B0160000 		.word	5808
 2362 0b5c B8160000 		.word	5816
 2363 0b60 C0160000 		.word	5824
 2364 0b64 C8160000 		.word	5832
 2365 0b68 D0160000 		.word	5840
 2366 0b6c D8160000 		.word	5848
 2367 0b70 E0160000 		.word	5856
 2368 0b74 E8160000 		.word	5864
 2369 0b78 F0160000 		.word	5872
 2370              		.section	.data.arr_dd,"aw"
 2371              		.align	2
 2374              	arr_dd:
 2375 0000 20018000 		.word	8388896
 2376 0004 08001031 		.word	823132168
 2377 0008 08000FD1 		.word	-787546104
 2378 000c 08000FD3 		.word	-753991672
 2379 0010 08000FD5 		.word	-720437240
 2380 0014 08000FD7 		.word	-686882808
 2381 0018 08000FD9 		.word	-653328376
 2382 001c 00000000 		.word	0
 2383 0020 00000000 		.word	0
ARM GAS  /tmp/ccnMLrqE.s 			page 61


 2384 0024 00000000 		.word	0
 2385 0028 00000000 		.word	0
 2386 002c 08000FDB 		.word	-619773944
 2387 0030 08000FDD 		.word	-586219512
 2388 0034 00000000 		.word	0
 2389 0038 08000FDF 		.word	-552665080
 2390 003c 08000FE1 		.word	-519110648
 2391 0040 08001081 		.word	-2129657848
 2392 0044 08001081 		.word	-2129657848
 2393 0048 08001081 		.word	-2129657848
 2394 004c 08001081 		.word	-2129657848
 2395 0050 08001081 		.word	-2129657848
 2396 0054 08001081 		.word	-2129657848
 2397 0058 08001081 		.word	-2129657848
 2398 005c 08001081 		.word	-2129657848
 2399 0060 08001081 		.word	-2129657848
 2400 0064 08001081 		.word	-2129657848
 2401 0068 08001081 		.word	-2129657848
 2402 006c 08001081 		.word	-2129657848
 2403 0070 08001081 		.word	-2129657848
 2404 0074 08001081 		.word	-2129657848
 2405 0078 08001081 		.word	-2129657848
 2406 007c 08001081 		.word	-2129657848
 2407 0080 08001081 		.word	-2129657848
 2408 0084 08001081 		.word	-2129657848
 2409 0088 08001081 		.word	-2129657848
 2410 008c 08001081 		.word	-2129657848
 2411 0090 08001081 		.word	-2129657848
 2412 0094 08001081 		.word	-2129657848
 2413 0098 08001081 		.word	-2129657848
 2414 009c 08001081 		.word	-2129657848
 2415 00a0 08001081 		.word	-2129657848
 2416 00a4 08001081 		.word	-2129657848
 2417 00a8 08001081 		.word	-2129657848
 2418 00ac 08001081 		.word	-2129657848
 2419 00b0 08001081 		.word	-2129657848
 2420 00b4 08001081 		.word	-2129657848
 2421 00b8 08001081 		.word	-2129657848
 2422 00bc 08001081 		.word	-2129657848
 2423 00c0 08001081 		.word	-2129657848
 2424 00c4 08001081 		.word	-2129657848
 2425 00c8 08001081 		.word	-2129657848
 2426 00cc 08001081 		.word	-2129657848
 2427 00d0 08001081 		.word	-2129657848
 2428 00d4 08001081 		.word	-2129657848
 2429 00d8 08001081 		.word	-2129657848
 2430 00dc 08001081 		.word	-2129657848
 2431 00e0 08001081 		.word	-2129657848
 2432 00e4 08001081 		.word	-2129657848
 2433 00e8 08001081 		.word	-2129657848
 2434 00ec 08001081 		.word	-2129657848
 2435 00f0 08001081 		.word	-2129657848
 2436 00f4 08001081 		.word	-2129657848
 2437 00f8 08001081 		.word	-2129657848
 2438 00fc 08001081 		.word	-2129657848
 2439 0100 08001081 		.word	-2129657848
 2440 0104 08001081 		.word	-2129657848
ARM GAS  /tmp/ccnMLrqE.s 			page 62


 2441 0108 08001081 		.word	-2129657848
 2442 010c 08001081 		.word	-2129657848
 2443 0110 08001081 		.word	-2129657848
 2444 0114 08001081 		.word	-2129657848
 2445 0118 08001081 		.word	-2129657848
 2446 011c 08001081 		.word	-2129657848
 2447 0120 08001081 		.word	-2129657848
 2448 0124 08001081 		.word	-2129657848
 2449 0128 08001081 		.word	-2129657848
 2450 012c 08001081 		.word	-2129657848
 2451 0130 08001081 		.word	-2129657848
 2452 0134 08001081 		.word	-2129657848
 2453 0138 08001081 		.word	-2129657848
 2454 013c 08001081 		.word	-2129657848
 2455 0140 08001081 		.word	-2129657848
 2456 0144 08001081 		.word	-2129657848
 2457 0148 08001081 		.word	-2129657848
 2458 014c 08001081 		.word	-2129657848
 2459 0150 08001081 		.word	-2129657848
 2460 0154 08001081 		.word	-2129657848
 2461 0158 08001081 		.word	-2129657848
 2462 015c 08001081 		.word	-2129657848
 2463 0160 08001081 		.word	-2129657848
 2464 0164 08001081 		.word	-2129657848
 2465 0168 08001081 		.word	-2129657848
 2466 016c 08001081 		.word	-2129657848
 2467 0170 08001081 		.word	-2129657848
 2468 0174 08001081 		.word	-2129657848
 2469 0178 08001081 		.word	-2129657848
 2470 017c 00000000 		.word	0
 2471 0180 08001081 		.word	-2129657848
 2472 0184 08001081 		.word	-2129657848
 2473 0188 4C05B510 		.word	280298828
 2474 018c B9337823 		.word	595080121
 2475 0190 B1134B04 		.word	72029105
 2476 0194 F3AF4804 		.word	71872499
 2477 0198 23018000 		.word	8388899
 2478 019c BD107023 		.word	594546877
 2479 01a0 20000440 		.word	1074004000
 2480 01a4 00000000 		.word	0
 2481 01a8 08001248 		.word	1209139208
 2482 01ac 4B03B508 		.word	146080587
 2483 01b0 4903B11B 		.word	464585545
 2484 01b4 F3AF4803 		.word	55095283
 2485 01b8 BD088000 		.word	8390845
 2486 01bc 00000000 		.word	0
 2487 01c0 20000444 		.word	1141112864
 2488 01c4 08001248 		.word	1209139208
 2489 01c8 681B4B10 		.word	273357672
 2490 01cc 2001B90B 		.word	196673824
 2491 01d0 B5104770 		.word	1883705525
 2492 01d4 F44F4604 		.word	71716852
 2493 01d8 FBB0707A 		.word	2054205691
 2494 01dc 4A0CF3F3 		.word	-202175414
 2495 01e0 FBB06810 		.word	275296507
 2496 01e4 F000F0F3 		.word	-202374928
 2497 01e8 B968F897 		.word	-1745327943
ARM GAS  /tmp/ccnMLrqE.s 			page 63


 2498 01ec D9012C0F 		.word	254542297
 2499 01f0 E00A2001 		.word	18877152
 2500 01f4 46212200 		.word	2236742
 2501 01f8 30FFF04F 		.word	1341194032
 2502 01fc F854F000 		.word	15750392
 2503 0200 601C4B04 		.word	72031328
 2504 0204 E0002000 		.word	2097376
 2505 0208 BD102001 		.word	18878653
 2506 020c 20000000 		.word	32
 2507 0210 20000008 		.word	134217760
 2508 0214 20000004 		.word	67108896
 2509 0218 2003B510 		.word	280298272
 2510 021c F832F000 		.word	15741688
 2511 0220 F7FF2000 		.word	2162679
 2512 0224 B110FFD1 		.word	-771813199
 2513 0228 46202401 		.word	19144774
 2514 022c 4604BD10 		.word	280822854
 2515 0230 FEB6F000 		.word	15775486
 2516 0234 0000E7F9 		.word	-102301696
 2517 0238 68134A03 		.word	55186280
 2518 023c 68094903 		.word	55118184
 2519 0240 6013440B 		.word	189010784
 2520 0244 BF004770 		.word	1883701439
 2521 0248 2000045C 		.word	1543766048
 2522 024c 20000000 		.word	32
 2523 0250 68184B01 		.word	21698664
 2524 0254 BF004770 		.word	1883701439
 2525 0258 2000045C 		.word	1543766048
 2526 025c 4604B538 		.word	951387206
 2527 0260 FFF6F7FF 		.word	-526593
 2528 0264 F1B44605 		.word	88519921
 2529 0268 D0023FFF 		.word	-12647728
 2530 026c 681B4B04 		.word	72031080
 2531 0270 F7FF441C 		.word	474284023
 2532 0274 1B40FFED 		.word	-302039013
 2533 0278 D3FA42A0 		.word	-1606223149
 2534 027c BF00BD38 		.word	951910591
 2535 0280 20000000 		.word	32
 2536 0284 68D34A07 		.word	122344296
 2537 0288 63E0F423 		.word	603250787
 2538 028c 0C1B041B 		.word	453253900
 2539 0290 F4000200 		.word	131316
 2540 0294 430360E0 		.word	-530578621
 2541 0298 63BFF043 		.word	1139851107
 2542 029c 3300F443 		.word	1140064307
 2543 02a0 477060D3 		.word	-748654521
 2544 02a4 E000ED00 		.word	15532256
 2545 02a8 4B19B500 		.word	11868491
 2546 02ac F3C368DB 		.word	-613891085
 2547 02b0 F1C32302 		.word	35898353
 2548 02b4 F1BC0C07 		.word	118275313
 2549 02b8 BF280F04 		.word	68102335
 2550 02bc 0C04F04F 		.word	1341129740
 2551 02c0 0E04F103 		.word	66126862
 2552 02c4 0F06F1BE 		.word	-1091500529
 2553 02c8 3B03D918 		.word	416875323
 2554 02cc 3EFFF04F 		.word	1341194046
ARM GAS  /tmp/ccnMLrqE.s 			page 64


 2555 02d0 FC0CFA0E 		.word	251268348
 2556 02d4 010CEA21 		.word	568986625
 2557 02d8 FA0E4099 		.word	-1723855110
 2558 02dc EA22F303 		.word	66265834
 2559 02e0 43190303 		.word	50534723
 2560 02e4 DB0B2800 		.word	2624475
 2561 02e8 B2C90109 		.word	151112114
 2562 02ec 4060F100 		.word	15818816
 2563 02f0 4061F500 		.word	16081216
 2564 02f4 1300F880 		.word	-2131230701
 2565 02f8 FB04F85D 		.word	1576535291
 2566 02fc E7E52300 		.word	2352615
 2567 0300 000FF000 		.word	15732480
 2568 0304 B2C90109 		.word	151112114
 2569 0308 54194B02 		.word	38476116
 2570 030c BF00E7F4 		.word	-186187585
 2571 0310 E000ED00 		.word	15532256
 2572 0314 E000ED14 		.word	351076576
 2573 0318 F1B03801 		.word	20492529
 2574 031c D20B7F80 		.word	-2139157550
 2575 0320 23E0F04F 		.word	1341186083
 2576 0324 4A056158 		.word	1482753354
 2577 0328 F88221F0 		.word	-266239240
 2578 032c 20001023 		.word	588251168
 2579 0330 22076198 		.word	-1738471646
 2580 0334 4770611A 		.word	442593351
 2581 0338 47702001 		.word	18903111
 2582 033c E000ED00 		.word	15532256
 2583 0340 B083B5F0 		.word	-256539728
 2584 0344 E0402300 		.word	2310368
 2585 0348 EA256AC5 		.word	-982899222
 2586 034c F3C40C0C 		.word	202163443
 2587 0350 409C04C0 		.word	-1073439680
 2588 0354 040CEA44 		.word	1156189188
 2589 0358 E06262C4 		.word	-1000185120
 2590 035c E0002406 		.word	103022816
 2591 0360 40B42400 		.word	2405440
 2592 0364 3502433C 		.word	1011024437
 2593 0368 F8464E68 		.word	1749960440
 2594 036c 4C684025 		.word	624977996
 2595 0370 43D46825 		.word	627627075
 2596 0374 0602EA25 		.word	636092934
 2597 0378 F417684F 		.word	1332221940
 2598 037c D0013F80 		.word	-2143354416
 2599 0380 0605EA42 		.word	1122632966
 2600 0384 602E4D62 		.word	1649225312
 2601 0388 EA04686D 		.word	1835533546
 2602 038c 684F0605 		.word	84299624
 2603 0390 3F00F417 		.word	401866815
 2604 0394 EA42D001 		.word	30425834
 2605 0398 4D5D0605 		.word	84303181
 2606 039c 68AD606E 		.word	1851829608
 2607 03a0 0605EA04 		.word	82445574
 2608 03a4 F417684F 		.word	1332221940
 2609 03a8 D0011F80 		.word	-2145451568
 2610 03ac 0605EA42 		.word	1122632966
 2611 03b0 60AE4D57 		.word	1464708704
ARM GAS  /tmp/ccnMLrqE.s 			page 65


 2612 03b4 402C68ED 		.word	-311940032
 2613 03b8 F416684E 		.word	1315444468
 2614 03bc D0011F00 		.word	2032080
 2615 03c0 0405EA42 		.word	1122632964
 2616 03c4 60D44A52 		.word	1380635744
 2617 03c8 680A3301 		.word	20122216
 2618 03cc F403FA32 		.word	855245812
 2619 03d0 8099F000 		.word	15767936
 2620 03d4 0C01F04F 		.word	1341128972
 2621 03d8 FC03FA0C 		.word	217711612
 2622 03dc 0202EA1C 		.word	485097986
 2623 03e0 684CD0F2 		.word	-221229976
 2624 03e4 2D011E65 		.word	1696465197
 2625 03e8 2C11D903 		.word	64557356
 2626 03ec 2C12D001 		.word	30413356
 2627 03f0 6885D112 		.word	315721064
 2628 03f4 2403005E 		.word	1577059108
 2629 03f8 EA2540B4 		.word	-1270864406
 2630 03fc 68CC0504 		.word	67488872
 2631 0400 432C40B4 		.word	-1270862781
 2632 0404 68456084 		.word	-2074065560
 2633 0408 050CEA25 		.word	636095493
 2634 040c F3C4684C 		.word	1281934579
 2635 0410 409C1400 		.word	1350720
 2636 0414 6044432C 		.word	742605920
 2637 0418 F004684C 		.word	1281885424
 2638 041c 2D030503 		.word	50660141
 2639 0420 68C6D092 		.word	-1831811480
 2640 0424 0C43EA4F 		.word	1340752652
 2641 0428 FA052503 		.word	52758010
 2642 042c 43ECF50C 		.word	217443395
 2643 0430 0E05EA26 		.word	652870926
 2644 0434 FA05688D 		.word	-1922562566
 2645 0438 EA45F50C 		.word	217400810
 2646 043c 60C5050E 		.word	235259232
 2647 0440 2D02684D 		.word	1298661933
 2648 0444 2D12D001 		.word	30413357
 2649 0448 08DED112 		.word	315743752
 2650 044c F8503608 		.word	137777400
 2651 0450 F0037026 		.word	644875248
 2652 0454 EA4F0507 		.word	117788650
 2653 0458 250F0E85 		.word	-2062676187
 2654 045c F50EFA05 		.word	100273909
 2655 0460 0705EA27 		.word	669648135
 2656 0464 FA05690D 		.word	224986618
 2657 0468 433DF50E 		.word	250953027
 2658 046c 5026F840 		.word	1090004560
 2659 0470 40256805 		.word	90711360
 2660 0474 F004684C 		.word	1281885424
 2661 0478 FA040403 		.word	50595066
 2662 047c 432CF40C 		.word	217328707
 2663 0480 684C6004 		.word	73419880
 2664 0484 5F80F014 		.word	351305823
 2665 0488 4C22D09E 		.word	-1630526900
 2666 048c F0456E25 		.word	627983856
 2667 0490 66250501 		.word	17114470
 2668 0494 F0046E24 		.word	611190000
ARM GAS  /tmp/ccnMLrqE.s 			page 66


 2669 0498 94010401 		.word	17039764
 2670 049c 089D9C01 		.word	27041032
 2671 04a0 4C1A1CAE 		.word	-1373889972
 2672 04a4 7026F854 		.word	1425548912
 2673 04a8 0403F003 		.word	66061060
 2674 04ac 240F00A6 		.word	-1509945564
 2675 04b0 EA2740B4 		.word	-1270863894
 2676 04b4 F1B00704 		.word	67612913
 2677 04b8 F43F4F90 		.word	-1873854476
 2678 04bc 4C16AF51 		.word	1370429004
 2679 04c0 D01642A0 		.word	-1606281520
 2680 04c4 6480F504 		.word	83198052
 2681 04c8 D01442A0 		.word	-1606282032
 2682 04cc 6480F504 		.word	83198052
 2683 04d0 D01242A0 		.word	-1606282544
 2684 04d4 6480F504 		.word	83198052
 2685 04d8 D01042A0 		.word	-1606283056
 2686 04dc 6480F504 		.word	83198052
 2687 04e0 D00E42A0 		.word	-1606283568
 2688 04e4 6480F504 		.word	83198052
 2689 04e8 F43F42A0 		.word	-1606270988
 2690 04ec 2407AF37 		.word	934217508
 2691 04f0 2401E737 		.word	937885988
 2692 04f4 2402E735 		.word	904331812
 2693 04f8 2403E733 		.word	870777636
 2694 04fc 2404E731 		.word	837223460
 2695 0500 2405E72F 		.word	803669284
 2696 0504 B003E72D 		.word	770114480
 2697 0508 BF00BDF0 		.word	-256048961
 2698 050c 40010000 		.word	320
 2699 0510 40010400 		.word	262464
 2700 0514 40021000 		.word	1049152
 2701 0518 48000400 		.word	262216
 2702 051c 6181B10A 		.word	179405153
 2703 0520 62814770 		.word	1883734370
 2704 0524 00004770 		.word	1883701248
 2705 0528 68184B02 		.word	38475880
 2706 052c 60C0F400 		.word	16040032
 2707 0530 BF004770 		.word	1883701439
 2708 0534 40007000 		.word	7340096
 2709 0538 7F00F5B0 		.word	-1326120833
 2710 053c 4B1FD00F 		.word	265297739
 2711 0540 F403681B 		.word	459801588
 2712 0544 F5B363C0 		.word	-1067207691
 2713 0548 D0346F80 		.word	-2140195632
 2714 054c 68134A1B 		.word	457839464
 2715 0550 63C0F423 		.word	603242595
 2716 0554 6380F443 		.word	1140097123
 2717 0558 20006013 		.word	325058592
 2718 055c 4B174770 		.word	1883707211
 2719 0560 F403681B 		.word	459801588
 2720 0564 F5B363C0 		.word	-1067207691
 2721 0568 D0207F00 		.word	8331472
 2722 056c 68134A13 		.word	323621736
 2723 0570 63C0F423 		.word	603242595
 2724 0574 7300F443 		.word	1140064371
 2725 0578 4B116013 		.word	325062987
ARM GAS  /tmp/ccnMLrqE.s 			page 67


 2726 057c 2232681B 		.word	459813410
 2727 0580 F303FB02 		.word	50004979
 2728 0584 FBA24A0F 		.word	256549627
 2729 0588 0C9B2303 		.word	52665100
 2730 058c E0003301 		.word	20119776
 2731 0590 4A0A3B01 		.word	20646474
 2732 0594 F4126952 		.word	1382617844
 2733 0598 D0016F80 		.word	-2140208688
 2734 059c D1F72B00 		.word	2881489
 2735 05a0 695B4B06 		.word	105601897
 2736 05a4 6F80F413 		.word	334790767
 2737 05a8 2000D103 		.word	64028704
 2738 05ac 20004770 		.word	1883701280
 2739 05b0 20034770 		.word	1883702048
 2740 05b4 20004770 		.word	1883701280
 2741 05b8 BF004770 		.word	1883701439
 2742 05bc 40007000 		.word	7340096
 2743 05c0 20000008 		.word	134217760
 2744 05c4 431BDE83 		.word	-2082596029
 2745 05c8 B083B530 		.word	817202096
 2746 05cc 4B204604 		.word	71704651
 2747 05d0 F0136D9B 		.word	-1687350288
 2748 05d4 D00B5F80 		.word	-2141254704
 2749 05d8 FFA6F7FF 		.word	-547073
 2750 05dc 7F00F5B0 		.word	-1326120833
 2751 05e0 2C80D017 		.word	399540268
 2752 05e4 D02DD81F 		.word	534261200
 2753 05e8 D02D2C70 		.word	1881943504
 2754 05ec E01B2100 		.word	2169824
 2755 05f0 6DAB4D17 		.word	390966125
 2756 05f4 5380F043 		.word	1139834963
 2757 05f8 6DAB65AB 		.word	-1419400339
 2758 05fc 5380F003 		.word	66093139
 2759 0600 9B019301 		.word	26411419
 2760 0604 FF90F7FF 		.word	-552705
 2761 0608 F0236DAB 		.word	-1418910736
 2762 060c 65AB5380 		.word	-2142000283
 2763 0610 2C80E7E4 		.word	-454590420
 2764 0614 2CA0D903 		.word	64593964
 2765 0618 2102D903 		.word	64553505
 2766 061c 2100E004 		.word	81788961
 2767 0620 2101E002 		.word	48234785
 2768 0624 2103E000 		.word	14680865
 2769 0628 68134A0A 		.word	172626792
 2770 062c 0307F023 		.word	602932995
 2771 0630 6013430B 		.word	188945248
 2772 0634 F0036813 		.word	325583856
 2773 0638 428B0307 		.word	117672770
 2774 063c 2000D106 		.word	114360352
 2775 0640 BD30B003 		.word	61878461
 2776 0644 E7EF2102 		.word	35778535
 2777 0648 E7ED2101 		.word	19000807
 2778 064c E7F72001 		.word	18937831
 2779 0650 40021000 		.word	1049152
 2780 0654 40022000 		.word	2097728
 2781 0658 68934A28 		.word	675976040
 2782 065c F00268D2 		.word	-764935440
ARM GAS  /tmp/ccnMLrqE.s 			page 68


 2783 0660 F0130203 		.word	50467824
 2784 0664 D00A030C 		.word	201525968
 2785 0668 D0062B0C 		.word	204146384
 2786 066c D01F2B04 		.word	69935056
 2787 0670 D0202B08 		.word	137044176
 2788 0674 46022000 		.word	2097734
 2789 0678 2A01E010 		.word	283115818
 2790 067c 4A1FD1F6 		.word	-154067126
 2791 0680 F0126812 		.word	308810480
 2792 0684 D10C0F08 		.word	135204049
 2793 0688 F8D24A1C 		.word	474665720
 2794 068c F3C22094 		.word	-1809792269
 2795 0690 491B2203 		.word	52566857
 2796 0694 2022F851 		.word	1375216160
 2797 0698 2000B143 		.word	1135673376
 2798 069c D00D2B0C 		.word	204148176
 2799 06a0 4A164770 		.word	1883706954
 2800 06a4 F3C26812 		.word	308855539
 2801 06a8 E7F21203 		.word	51573479
 2802 06ac E7F54610 		.word	273085927
 2803 06b0 22004814 		.word	340262946
 2804 06b4 4814E7F2 		.word	-219737016
 2805 06b8 E7EF2200 		.word	2289639
 2806 06bc 68DB4B0F 		.word	256629608
 2807 06c0 0303F003 		.word	66061059
 2808 06c4 D0162B02 		.word	36378320
 2809 06c8 D1002B03 		.word	53149905
 2810 06cc 490B4A0E 		.word	239733577
 2811 06d0 F3C068C8 		.word	-932658957
 2812 06d4 1C431002 		.word	34620188
 2813 06d8 F3C068C8 		.word	-932658957
 2814 06dc FB022006 		.word	102761211
 2815 06e0 FBB0F000 		.word	15773947
 2816 06e4 68CBF0F3 		.word	-202323096
 2817 06e8 6341F3C3 		.word	-1007468189
 2818 06ec 005B3301 		.word	20142848
 2819 06f0 F0F3FBB0 		.word	-1325665296
 2820 06f4 4A03E7D4 		.word	-723057846
 2821 06f8 BF00E7E9 		.word	-370736961
 2822 06fc 40021000 		.word	1049152
 2823 0700 08001270 		.word	1880227848
 2824 0704 00F42400 		.word	2421760
 2825 0708 007A1200 		.word	1210880
 2826 070c F0002800 		.word	2621680
 2827 0710 B5F082FC 		.word	-58527563
 2828 0714 4604B083 		.word	-2085616570
 2829 0718 689D4B96 		.word	-1773429400
 2830 071c 050CF005 		.word	99617797
 2831 0720 F00668DE 		.word	-563607824
 2832 0724 68030603 		.word	50725736
 2833 0728 0F10F013 		.word	334499855
 2834 072c B1E5D05A 		.word	1523639729
 2835 0730 D0182D0C 		.word	204282064
 2836 0734 2B0069A3 		.word	-1553399765
 2837 0738 80BBF000 		.word	15776640
 2838 073c 68134A8D 		.word	-1924525208
 2839 0740 0301F043 		.word	1139802371
ARM GAS  /tmp/ccnMLrqE.s 			page 69


 2840 0744 F7FF6013 		.word	325124087
 2841 0748 4607FD83 		.word	-2080569530
 2842 074c 681B4B89 		.word	-1991566488
 2843 0750 0F02F013 		.word	334496271
 2844 0754 809AF040 		.word	1089510016
 2845 0758 FD7AF7FF 		.word	-558339
 2846 075c 28021BC0 		.word	-1071971800
 2847 0760 2003D9F4 		.word	-187104480
 2848 0764 2E01E2DC 		.word	-589168338
 2849 0768 4B82D1E4 		.word	-456031669
 2850 076c F013681B 		.word	459805680
 2851 0770 D0030F02 		.word	34538448
 2852 0774 2B0069A3 		.word	-1553399765
 2853 0778 82C9F000 		.word	15780226
 2854 077c 4B7D6A20 		.word	543849803
 2855 0780 F013681B 		.word	459805680
 2856 0784 D05B0F08 		.word	135224272
 2857 0788 681B4B7A 		.word	2051742568
 2858 078c 03F0F003 		.word	66121731
 2859 0790 D85C4298 		.word	-1740481320
 2860 0794 681A4B77 		.word	2001410664
 2861 0798 0208F042 		.word	1123026946
 2862 079c 681A601A 		.word	442505832
 2863 07a0 02F0F022 		.word	586215426
 2864 07a4 430A6A21 		.word	560597571
 2865 07a8 685A601A 		.word	442522216
 2866 07ac 427FF422 		.word	586448706
 2867 07b0 EA4269E1 		.word	-513195286
 2868 07b4 605A2201 		.word	19028576
 2869 07b8 D0602D00 		.word	2973904
 2870 07bc FF4CF7FF 		.word	-570113
 2871 07c0 689B4B6C 		.word	1816894312
 2872 07c4 1303F3C3 		.word	-1007484141
 2873 07c8 5CD34A6B 		.word	1800065884
 2874 07cc 031FF003 		.word	66068227
 2875 07d0 4B6A40D8 		.word	-666867125
 2876 07d4 4B6A6018 		.word	408971851
 2877 07d8 F7FF6818 		.word	409534455
 2878 07dc 2800FCF5 		.word	-168034264
 2879 07e0 829EF040 		.word	1089511042
 2880 07e4 F0136823 		.word	594023408
 2881 07e8 F0000F01 		.word	17760496
 2882 07ec 2D088081 		.word	-2122315731
 2883 07f0 2D0CD075 		.word	1976568877
 2884 07f4 6863D071 		.word	1909482344
 2885 07f8 3F80F5B3 		.word	-1275756481
 2886 07fc 8097F000 		.word	15767424
 2887 0800 2FA0F5B3 		.word	-1275748305
 2888 0804 8099F000 		.word	15767936
 2889 0808 681A4B5A 		.word	1514871400
 2890 080c 3280F422 		.word	586448946
 2891 0810 681A601A 		.word	442505832
 2892 0814 2280F422 		.word	586448930
 2893 0818 6863601A 		.word	442524520
 2894 081c F0002B00 		.word	2818288
 2895 0820 F7FF8099 		.word	-1719599113
 2896 0824 4607FD15 		.word	368904006
ARM GAS  /tmp/ccnMLrqE.s 			page 70


 2897 0828 681B4B52 		.word	1380653928
 2898 082c 3F00F413 		.word	334757951
 2899 0830 F7FFD15E 		.word	1590820855
 2900 0834 1BC0FD0D 		.word	234733595
 2901 0838 D9F52864 		.word	1680405977
 2902 083c E26F2003 		.word	52457442
 2903 0840 F8D34B4C 		.word	1280037880
 2904 0844 091B3094 		.word	-1808786679
 2905 0848 03F0F003 		.word	66121731
 2906 084c F7FFE7A0 		.word	-1595408393
 2907 0850 2800FEBB 		.word	-1140981720
 2908 0854 825DF040 		.word	1089494402
 2909 0858 681A4B46 		.word	1179327080
 2910 085c 0208F042 		.word	1123026946
 2911 0860 681A601A 		.word	442505832
 2912 0864 02F0F022 		.word	586215426
 2913 0868 430A6A21 		.word	560597571
 2914 086c 685A601A 		.word	442522216
 2915 0870 427FF422 		.word	586448706
 2916 0874 EA4269E1 		.word	-513195286
 2917 0878 605A2201 		.word	19028576
 2918 087c 6A20E79E 		.word	-1629020054
 2919 0880 FEA2F7FF 		.word	-548098
 2920 0884 D0992800 		.word	2660816
 2921 0888 E2492001 		.word	18893282
 2922 088c 681A4B39 		.word	961223272
 2923 0890 0208F042 		.word	1123026946
 2924 0894 681A601A 		.word	442505832
 2925 0898 02F0F022 		.word	586215426
 2926 089c 430A6A21 		.word	560597571
 2927 08a0 685A601A 		.word	442522216
 2928 08a4 427FF422 		.word	586448706
 2929 08a8 EA4269E1 		.word	-513195286
 2930 08ac 605A2201 		.word	19028576
 2931 08b0 4A30E798 		.word	-1729679286
 2932 08b4 F0236813 		.word	325592048
 2933 08b8 60130301 		.word	16978784
 2934 08bc FCC8F7FF 		.word	-538372
 2935 08c0 4B2C4607 		.word	122039371
 2936 08c4 F013681B 		.word	459805680
 2937 08c8 D08B0F02 		.word	34573264
 2938 08cc FCC0F7FF 		.word	-540420
 2939 08d0 28021BC0 		.word	-1071971800
 2940 08d4 2003D9F5 		.word	-170327264
 2941 08d8 2E03E222 		.word	585237294
 2942 08dc 4B25D18B 		.word	-1949227701
 2943 08e0 F413681B 		.word	459805684
 2944 08e4 D0033F00 		.word	4129744
 2945 08e8 2B006863 		.word	1667760171
 2946 08ec 8213F000 		.word	15733634
 2947 08f0 F0136823 		.word	594023408
 2948 08f4 D0580F02 		.word	34560208
 2949 08f8 D0452D04 		.word	70075856
 2950 08fc D0412D0C 		.word	204292560
 2951 0900 2B0068E3 		.word	-479723477
 2952 0904 4A1BD077 		.word	2010127178
 2953 0908 F4436813 		.word	325600244
ARM GAS  /tmp/ccnMLrqE.s 			page 71


 2954 090c 60137380 		.word	-2139942048
 2955 0910 FC9EF7FF 		.word	-549124
 2956 0914 4B174606 		.word	105256779
 2957 0918 F413681B 		.word	459805684
 2958 091c D1616F80 		.word	-2140184111
 2959 0920 FC96F7FF 		.word	-551172
 2960 0924 28021B80 		.word	-2145713624
 2961 0928 2003D9F5 		.word	-170327264
 2962 092c 4A11E1F8 		.word	-119467702
 2963 0930 F4436813 		.word	325600244
 2964 0934 60133380 		.word	-2144136352
 2965 0938 F103E76F 		.word	1877410801
 2966 093c F5A34380 		.word	-2143050763
 2967 0940 681A333C 		.word	1009982056
 2968 0944 2280F442 		.word	1123319842
 2969 0948 681A601A 		.word	442505832
 2970 094c 3280F442 		.word	1123319858
 2971 0950 E762601A 		.word	442524391
 2972 0954 FC7CF7FF 		.word	-557828
 2973 0958 4B064607 		.word	122029643
 2974 095c F413681B 		.word	459805684
 2975 0960 D0C53F00 		.word	4179408
 2976 0964 FC74F7FF 		.word	-559876
 2977 0968 28641BC0 		.word	-1071946712
 2978 096c 2003D9F5 		.word	-170327264
 2979 0970 BF00E1D6 		.word	-689897281
 2980 0974 40021000 		.word	1049152
 2981 0978 08001260 		.word	1611792392
 2982 097c 20000008 		.word	134217760
 2983 0980 20000004 		.word	67108896
 2984 0984 D1BB2E02 		.word	36617169
 2985 0988 681B4B95 		.word	-1790239896
 2986 098c 6F80F413 		.word	334790767
 2987 0990 68E3D003 		.word	64021352
 2988 0994 F0002B00 		.word	2818288
 2989 0998 4A9181C0 		.word	-1065250486
 2990 099c F0236853 		.word	1399333872
 2991 09a0 692153F8 		.word	-128769687
 2992 09a4 6301EA43 		.word	1139409251
 2993 09a8 68236053 		.word	1398809448
 2994 09ac 0F08F013 		.word	334497807
 2995 09b0 6963D04C 		.word	1288725353
 2996 09b4 4A8AB39B 		.word	-1682732470
 2997 09b8 3094F8D2 		.word	-755461072
 2998 09bc 0301F043 		.word	1139802371
 2999 09c0 3094F8C2 		.word	-1023896528
 3000 09c4 FC44F7FF 		.word	-572164
 3001 09c8 4B854606 		.word	105284939
 3002 09cc 3094F8D3 		.word	-738683856
 3003 09d0 0F02F013 		.word	334496271
 3004 09d4 F7FFD13A 		.word	986841079
 3005 09d8 1B80FC3B 		.word	1006403611
 3006 09dc D9F42802 		.word	36238553
 3007 09e0 E19D2003 		.word	52469217
 3008 09e4 68534A7E 		.word	2118800232
 3009 09e8 53F8F023 		.word	602994771
 3010 09ec EA436921 		.word	560546794
ARM GAS  /tmp/ccnMLrqE.s 			page 72


 3011 09f0 60536301 		.word	23286624
 3012 09f4 4A7AE7D9 		.word	-639141302
 3013 09f8 F4236813 		.word	325592052
 3014 09fc 60137380 		.word	-2139942048
 3015 0a00 FC26F7FF 		.word	-579844
 3016 0a04 4B764606 		.word	105281099
 3017 0a08 F413681B 		.word	459805684
 3018 0a0c D0CC6F80 		.word	-2140156720
 3019 0a10 FC1EF7FF 		.word	-581892
 3020 0a14 28021B80 		.word	-2145713624
 3021 0a18 2003D9F5 		.word	-170327264
 3022 0a1c 4A70E180 		.word	-2132709302
 3023 0a20 3094F8D2 		.word	-755461072
 3024 0a24 0301F023 		.word	602931459
 3025 0a28 3094F8C2 		.word	-1023896528
 3026 0a2c FC10F7FF 		.word	-585476
 3027 0a30 4B6B4606 		.word	105278283
 3028 0a34 3094F8D3 		.word	-738683856
 3029 0a38 0F02F013 		.word	334496271
 3030 0a3c F7FFD006 		.word	114360311
 3031 0a40 1B80FC07 		.word	133988379
 3032 0a44 D9F42802 		.word	36238553
 3033 0a48 E1692003 		.word	52455905
 3034 0a4c F0136823 		.word	594023408
 3035 0a50 D07A0F04 		.word	68123344
 3036 0a54 6D9B4B62 		.word	1649122157
 3037 0a58 5F80F013 		.word	334528607
 3038 0a5c 4B60D136 		.word	919691339
 3039 0a60 F0426D9A 		.word	-1704115472
 3040 0a64 659A5280 		.word	-2142070171
 3041 0a68 F0036D9B 		.word	-1687354384
 3042 0a6c 93015380 		.word	-2142043757
 3043 0a70 26019B01 		.word	26935590
 3044 0a74 681B4B5B 		.word	1531648872
 3045 0a78 7F80F413 		.word	334790783
 3046 0a7c 68A3D028 		.word	684761960
 3047 0a80 D0392B01 		.word	19610064
 3048 0a84 D03F2B05 		.word	86720464
 3049 0a88 F8D34B55 		.word	1431032824
 3050 0a8c F0222090 		.word	-1876942096
 3051 0a90 F8C30201 		.word	16958456
 3052 0a94 F8D32090 		.word	-1876896776
 3053 0a98 F0222090 		.word	-1876942096
 3054 0a9c F8C30204 		.word	67290104
 3055 0aa0 68A32090 		.word	-1876909208
 3056 0aa4 D03D2B00 		.word	2833872
 3057 0aa8 FBD2F7FF 		.word	-535813
 3058 0aac 4B4C4607 		.word	122047563
 3059 0ab0 3090F8D3 		.word	-738684880
 3060 0ab4 0F02F013 		.word	334496271
 3061 0ab8 F7FFD146 		.word	1188167671
 3062 0abc 1BC0FBC9 		.word	-906248165
 3063 0ac0 3388F241 		.word	1106413619
 3064 0ac4 D9F24298 		.word	-1740442919
 3065 0ac8 E1292003 		.word	52439521
 3066 0acc E7D12600 		.word	2544103
 3067 0ad0 68134A44 		.word	1145705320
ARM GAS  /tmp/ccnMLrqE.s 			page 73


 3068 0ad4 7380F443 		.word	1140097139
 3069 0ad8 F7FF6013 		.word	325124087
 3070 0adc 4607FBB9 		.word	-1174730938
 3071 0ae0 681B4B40 		.word	1078664040
 3072 0ae4 7F80F413 		.word	334790783
 3073 0ae8 F7FFD1C9 		.word	-908984329
 3074 0aec 1BC0FBB1 		.word	-1308901349
 3075 0af0 D9F52802 		.word	36238809
 3076 0af4 E1132003 		.word	52433889
 3077 0af8 F8D24A39 		.word	961204984
 3078 0afc F0433090 		.word	-1875885072
 3079 0b00 F8C20301 		.word	17023736
 3080 0b04 E7CC3090 		.word	-1875850009
 3081 0b08 F8D34B35 		.word	894161912
 3082 0b0c F0422090 		.word	-1876933904
 3083 0b10 F8C30204 		.word	67290104
 3084 0b14 F8D32090 		.word	-1876896776
 3085 0b18 F0422090 		.word	-1876933904
 3086 0b1c F8C30201 		.word	16958456
 3087 0b20 E7BE2090 		.word	-1876902169
 3088 0b24 FB94F7FF 		.word	-551685
 3089 0b28 4B2D4607 		.word	122039627
 3090 0b2c 3090F8D3 		.word	-738684880
 3091 0b30 0F02F013 		.word	334496271
 3092 0b34 F7FFD008 		.word	147914743
 3093 0b38 1BC0FB8B 		.word	-1946435557
 3094 0b3c 3388F241 		.word	1106413619
 3095 0b40 D9F24298 		.word	-1740442919
 3096 0b44 E0EB2003 		.word	52489184
 3097 0b48 6AA3BB6E 		.word	1857790826
 3098 0b4c F0002B00 		.word	2818288
 3099 0b50 2B0280E6 		.word	-427818453
 3100 0b54 2D0CD02D 		.word	768609325
 3101 0b58 80E8F000 		.word	15788160
 3102 0b5c 681A4B20 		.word	541792872
 3103 0b60 7280F022 		.word	586186866
 3104 0b64 681B601A 		.word	442506088
 3105 0b68 5F20F013 		.word	334504031
 3106 0b6c 4A1CD104 		.word	80813130
 3107 0b70 F02368D3 		.word	-748149776
 3108 0b74 60D30303 		.word	50582368
 3109 0b78 68D34A19 		.word	424334184
 3110 0b7c 7388F023 		.word	602966131
 3111 0b80 3380F423 		.word	603226163
 3112 0b84 F7FF60D3 		.word	-748617737
 3113 0b88 4604FB63 		.word	1677395014
 3114 0b8c 681B4B14 		.word	340466536
 3115 0b90 7F00F013 		.word	334495871
 3116 0b94 80B7F000 		.word	15775616
 3117 0b98 FB5AF7FF 		.word	-566533
 3118 0b9c 28021B00 		.word	1770024
 3119 0ba0 2003D9F4 		.word	-187104480
 3120 0ba4 4A0EE0BC 		.word	-1126166966
 3121 0ba8 F0236D93 		.word	-1821563920
 3122 0bac 65935380 		.word	-2142006427
 3123 0bb0 4B0BE7CB 		.word	-874050741
 3124 0bb4 F00368DB 		.word	-613940240
ARM GAS  /tmp/ccnMLrqE.s 			page 74


 3125 0bb8 6AE20103 		.word	50455146
 3126 0bbc D0134291 		.word	-1857940528
 3127 0bc0 F0002D0C 		.word	204275952
 3128 0bc4 4B0680AF 		.word	-1350564277
 3129 0bc8 F013681B 		.word	459805680
 3130 0bcc F0406F80 		.word	-2140192528
 3131 0bd0 4B0380AB 		.word	-1417673909
 3132 0bd4 F013681B 		.word	459805680
 3133 0bd8 D0315F80 		.word	-2141244976
 3134 0bdc E09F2001 		.word	18915296
 3135 0be0 40021000 		.word	1049152
 3136 0be4 40007000 		.word	7340096
 3137 0be8 0270F003 		.word	66088962
 3138 0bec 39016B21 		.word	560660793
 3139 0bf0 1F01EBB2 		.word	-1293221601
 3140 0bf4 F403D1E4 		.word	-456064012
 3141 0bf8 6B6142FE 		.word	-29204117
 3142 0bfc 2F01EBB2 		.word	-1293221585
 3143 0c00 F403D1DE 		.word	-556727308
 3144 0c04 6BA23100 		.word	3252843
 3145 0c08 BF183A07 		.word	121247935
 3146 0c0c 42912201 		.word	19042626
 3147 0c10 F403D1D6 		.word	-690945036
 3148 0c14 6BE201C0 		.word	-1073618325
 3149 0c18 3A010852 		.word	1376256314
 3150 0c1c 5F42EBB1 		.word	-1309982113
 3151 0c20 F003D1CE 		.word	-825162768
 3152 0c24 6C2263C0 		.word	-1067244948
 3153 0c28 3A010852 		.word	1376256314
 3154 0c2c 6F42EBB3 		.word	-1276427665
 3155 0c30 4B3FD1C6 		.word	-959365301
 3156 0c34 F013681B 		.word	459805680
 3157 0c38 D04A7F00 		.word	8342224
 3158 0c3c E06F2000 		.word	2125792
 3159 0c40 68134A3B 		.word	994710376
 3160 0c44 7380F023 		.word	602964083
 3161 0c48 F7FF6013 		.word	325124087
 3162 0c4c 4605FB01 		.word	33228102
 3163 0c50 681B4B37 		.word	927669096
 3164 0c54 7F00F013 		.word	334495871
 3165 0c58 F7FFD006 		.word	114360311
 3166 0c5c 1B40FAF9 		.word	-101040101
 3167 0c60 D9F52802 		.word	36238809
 3168 0c64 E05B2003 		.word	52452320
 3169 0c68 68D34A31 		.word	826987368
 3170 0c6c 40194931 		.word	826874176
 3171 0c70 6B206AE3 		.word	-479584149
 3172 0c74 EA433801 		.word	20464618
 3173 0c78 6B601300 		.word	1269867
 3174 0c7c 2300EA43 		.word	1139408931
 3175 0c80 08406BE0 		.word	-529842168
 3176 0c84 EA433801 		.word	20464618
 3177 0c88 6C205340 		.word	1079189612
 3178 0c8c 38010840 		.word	1074266424
 3179 0c90 6340EA43 		.word	1139425379
 3180 0c94 09006BA0 		.word	-1603600375
 3181 0c98 4340EA43 		.word	1139425347
ARM GAS  /tmp/ccnMLrqE.s 			page 75


 3182 0c9c 60D3430B 		.word	188994400
 3183 0ca0 F0436813 		.word	325600240
 3184 0ca4 60137380 		.word	-2139942048
 3185 0ca8 F04368D3 		.word	-748141584
 3186 0cac 60D37380 		.word	-2139892896
 3187 0cb0 FACEF7FF 		.word	-536838
 3188 0cb4 4B1E4604 		.word	71704139
 3189 0cb8 F013681B 		.word	459805680
 3190 0cbc D1067F00 		.word	8324817
 3191 0cc0 FAC6F7FF 		.word	-538886
 3192 0cc4 28021B00 		.word	1770024
 3193 0cc8 2003D9F5 		.word	-170327264
 3194 0ccc 2000E028 		.word	685768736
 3195 0cd0 4B17E026 		.word	652220235
 3196 0cd4 F042681A 		.word	443040496
 3197 0cd8 601A7280 		.word	-2140005792
 3198 0cdc F04268DA 		.word	-630701328
 3199 0ce0 60DA7280 		.word	-2139956640
 3200 0ce4 FAB4F7FF 		.word	-543494
 3201 0ce8 4B114604 		.word	71700811
 3202 0cec F013681B 		.word	459805680
 3203 0cf0 D1067F00 		.word	8324817
 3204 0cf4 FAACF7FF 		.word	-545542
 3205 0cf8 2B021B03 		.word	52101675
 3206 0cfc 2003D9F5 		.word	-170327264
 3207 0d00 2000E00E 		.word	249561120
 3208 0d04 2000E00C 		.word	216006688
 3209 0d08 2001E00A 		.word	182452512
 3210 0d0c 20014770 		.word	1883701536
 3211 0d10 2001E006 		.word	115343648
 3212 0d14 2001E004 		.word	81789216
 3213 0d18 2001E002 		.word	48234784
 3214 0d1c 2000E000 		.word	14680096
 3215 0d20 BDF0B003 		.word	61927613
 3216 0d24 E7FB2001 		.word	18938855
 3217 0d28 E7F92001 		.word	18938343
 3218 0d2c E7F72001 		.word	18937831
 3219 0d30 40021000 		.word	1049152
 3220 0d34 F99D808C 		.word	-1937728007
 3221 0d38 F0002800 		.word	2621680
 3222 0d3c B5708098 		.word	-1736413003
 3223 0d40 4605460C 		.word	205915462
 3224 0d44 681B4B4E 		.word	1313545064
 3225 0d48 0307F003 		.word	66062083
 3226 0d4c D20B428B 		.word	-1958605870
 3227 0d50 68134A4B 		.word	1263145832
 3228 0d54 0307F023 		.word	602932995
 3229 0d58 6013430B 		.word	188945248
 3230 0d5c F0036813 		.word	325583856
 3231 0d60 428B0307 		.word	117672770
 3232 0d64 8085F040 		.word	1089504640
 3233 0d68 F013682B 		.word	728241136
 3234 0d6c D0390F01 		.word	17775056
 3235 0d70 2B03686B 		.word	1801978667
 3236 0d74 2B02D009 		.word	164626987
 3237 0d78 BB63D026 		.word	651191227
 3238 0d7c 68124A41 		.word	1095373416
ARM GAS  /tmp/ccnMLrqE.s 			page 76


 3239 0d80 0F02F012 		.word	317719055
 3240 0d84 2001D106 		.word	114360608
 3241 0d88 4A3EE070 		.word	1893744202
 3242 0d8c F0126812 		.word	308810480
 3243 0d90 D0707F00 		.word	8351952
 3244 0d94 688A493B 		.word	994675304
 3245 0d98 0203F022 		.word	586154754
 3246 0d9c 608B4313 		.word	323193696
 3247 0da0 FA56F7FF 		.word	-567558
 3248 0da4 4B374606 		.word	105264971
 3249 0da8 F003689B 		.word	-1687682064
 3250 0dac 686A030C 		.word	201550440
 3251 0db0 0F82EBB3 		.word	-1276411377
 3252 0db4 F7FFD016 		.word	382795767
 3253 0db8 1B80FA4B 		.word	1274707995
 3254 0dbc 3388F241 		.word	1106413619
 3255 0dc0 D9F04298 		.word	-1740443431
 3256 0dc4 E0512003 		.word	52449760
 3257 0dc8 68124A2E 		.word	776606312
 3258 0dcc 3F00F412 		.word	317980735
 3259 0dd0 2001D1E0 		.word	-523173600
 3260 0dd4 4A2BE04A 		.word	1256205130
 3261 0dd8 F4126812 		.word	308810484
 3262 0ddc D1D96F80 		.word	-2140153391
 3263 0de0 E0432001 		.word	18891744
 3264 0de4 F013682B 		.word	728241136
 3265 0de8 D0060F02 		.word	34539216
 3266 0dec 68934A25 		.word	625644392
 3267 0df0 03F0F023 		.word	602992643
 3268 0df4 430B68A9 		.word	-1452799165
 3269 0df8 4B216093 		.word	-1822416565
 3270 0dfc F003681B 		.word	459801584
 3271 0e00 42A30307 		.word	117678914
 3272 0e04 4A1ED90A 		.word	182001226
 3273 0e08 F0236813 		.word	325592048
 3274 0e0c 43230307 		.word	117646147
 3275 0e10 68136013 		.word	325063528
 3276 0e14 0307F003 		.word	66062083
 3277 0e18 D12E42A3 		.word	-1555943727
 3278 0e1c F013682B 		.word	728241136
 3279 0e20 D0060F04 		.word	68093648
 3280 0e24 68934A17 		.word	390763368
 3281 0e28 63E0F423 		.word	603250787
 3282 0e2c 430B68E9 		.word	-379057341
 3283 0e30 682B6093 		.word	-1822413976
 3284 0e34 0F08F013 		.word	334497807
 3285 0e38 4A12D007 		.word	131076682
 3286 0e3c F4236893 		.word	-1821891596
 3287 0e40 69295360 		.word	1616062825
 3288 0e44 03C1EA43 		.word	1139458307
 3289 0e48 F7FF6093 		.word	-1822359561
 3290 0e4c 4B0DFC05 		.word	100404555
 3291 0e50 F3C3689B 		.word	-1687632909
 3292 0e54 4A0C1303 		.word	51579978
 3293 0e58 F0035CD3 		.word	-748944400
 3294 0e5c 40D8031F 		.word	520345664
 3295 0e60 60184B0A 		.word	172693600
ARM GAS  /tmp/ccnMLrqE.s 			page 77


 3296 0e64 68184B0A 		.word	172693608
 3297 0e68 F9AEF7FF 		.word	-545031
 3298 0e6c 2001BD70 		.word	1891434784
 3299 0e70 20014770 		.word	1883701536
 3300 0e74 2001E7FA 		.word	-85524192
 3301 0e78 2001E7F8 		.word	-119078624
 3302 0e7c BF00E7F6 		.word	-152633153
 3303 0e80 40022000 		.word	2097728
 3304 0e84 40021000 		.word	1049152
 3305 0e88 08001260 		.word	1611792392
 3306 0e8c 20000008 		.word	134217760
 3307 0e90 20000004 		.word	67108896
 3308 0e94 B088B570 		.word	1890945200
 3309 0e98 94032400 		.word	2360212
 3310 0e9c 94059404 		.word	76809620
 3311 0ea0 94079406 		.word	110364564
 3312 0ea4 6CDA4B1B 		.word	457955948
 3313 0ea8 0201F042 		.word	1123025154
 3314 0eac 6CDA64DA 		.word	-630924692
 3315 0eb0 0201F002 		.word	49283330
 3316 0eb4 9A019201 		.word	26345882
 3317 0eb8 F0426CDA 		.word	-630439184
 3318 0ebc 64DA0202 		.word	33741412
 3319 0ec0 F0036CDB 		.word	-613678096
 3320 0ec4 93020302 		.word	33751699
 3321 0ec8 46229B02 		.word	43721286
 3322 0ecc F04F2120 		.word	539054064
 3323 0ed0 F7FF4090 		.word	-1874788361
 3324 0ed4 4D10FB23 		.word	603656269
 3325 0ed8 F44F4622 		.word	575033332
 3326 0edc 46285100 		.word	5318726
 3327 0ee0 FB1CF7FF 		.word	-582405
 3328 0ee4 93032320 		.word	539165587
 3329 0ee8 96042601 		.word	19268758
 3330 0eec 94069405 		.word	93587092
 3331 0ef0 F04FA903 		.word	61427696
 3332 0ef4 F7FF4090 		.word	-1874788361
 3333 0ef8 F44FFA23 		.word	603607028
 3334 0efc 93035300 		.word	5440403
 3335 0f00 94059604 		.word	76940692
 3336 0f04 A9039406 		.word	110363561
 3337 0f08 F7FF4628 		.word	675741687
 3338 0f0c B008FA19 		.word	435816624
 3339 0f10 BF00BD70 		.word	1891434687
 3340 0f14 40021000 		.word	1049152
 3341 0f18 48000400 		.word	262216
 3342 0f1c B096B510 		.word	280336048
 3343 0f20 21002244 		.word	1143078945
 3344 0f24 F000A805 		.word	94896368
 3345 0f28 2400F8ED 		.word	-302514140
 3346 0f2c 94019400 		.word	9699732
 3347 0f30 94039402 		.word	43254676
 3348 0f34 23109404 		.word	76812323
 3349 0f38 23019305 		.word	93520163
 3350 0f3c 2360930B 		.word	194207779
 3351 0f40 A805930D 		.word	227739048
 3352 0f44 FBE2F7FF 		.word	-531717
ARM GAS  /tmp/ccnMLrqE.s 			page 78


 3353 0f48 9300230F 		.word	253952147
 3354 0f4c 94029401 		.word	26477204
 3355 0f50 94049403 		.word	60032148
 3356 0f54 46684621 		.word	558262342
 3357 0f58 FEEEF7FF 		.word	-528642
 3358 0f5c 7000F44F 		.word	1341390960
 3359 0f60 FAEAF7FF 		.word	-529670
 3360 0f64 BD10B016 		.word	380637373
 3361 0f68 F7FFB508 		.word	146145271
 3362 0f6c F7FFF955 		.word	1442447351
 3363 0f70 F7FFFFD5 		.word	-704643081
 3364 0f74 2201FF8F 		.word	-1879113438
 3365 0f78 F04F2120 		.word	539054064
 3366 0f7c F7FF4090 		.word	-1874788361
 3367 0f80 F44FFACD 		.word	-839233548
 3368 0f84 F7FF70FA 		.word	-93257737
 3369 0f88 2200F969 		.word	1777926178
 3370 0f8c F04F2120 		.word	539054064
 3371 0f90 F7FF4090 		.word	-1874788361
 3372 0f94 F44FFAC3 		.word	-1007005708
 3373 0f98 F7FF70FA 		.word	-93257737
 3374 0f9c E7EAF95F 		.word	1610214119
 3375 0fa0 4B0AB082 		.word	-2102392245
 3376 0fa4 F0426E1A 		.word	443433712
 3377 0fa8 661A0201 		.word	16915046
 3378 0fac F0026E1A 		.word	443417328
 3379 0fb0 92000201 		.word	16908434
 3380 0fb4 6D9A9A00 		.word	10132077
 3381 0fb8 5280F042 		.word	1123057746
 3382 0fbc 6D9B659A 		.word	-1704617107
 3383 0fc0 5380F003 		.word	66093139
 3384 0fc4 9B019301 		.word	26411419
 3385 0fc8 4770B002 		.word	45117511
 3386 0fcc 40021000 		.word	1049152
 3387 0fd0 E7FE4770 		.word	1883766503
 3388 0fd4 E7FEE7FE 		.word	-18350361
 3389 0fd8 4770E7FE 		.word	-18386873
 3390 0fdc 47704770 		.word	1883729991
 3391 0fe0 F7FFB508 		.word	146145271
 3392 0fe4 BD08F929 		.word	704186557
 3393 0fe8 F8D1490F 		.word	256496120
 3394 0fec F4433088 		.word	-2010102796
 3395 0ff0 F8C10370 		.word	1879294456
 3396 0ff4 4B0D3088 		.word	-2010116789
 3397 0ff8 F042681A 		.word	443040496
 3398 0ffc 601A0201 		.word	16915040
 3399 1000 60982000 		.word	2136160
 3400 1004 F022681A 		.word	443032304
 3401 1008 F42252A8 		.word	-1471012108
 3402 100c 601A2210 		.word	270670432
 3403 1010 5280F44F 		.word	1341423698
 3404 1014 681A60DA 		.word	-631235992
 3405 1018 2280F422 		.word	586448930
 3406 101c 6198601A 		.word	442538081
 3407 1020 6300F04F 		.word	1341128803
 3408 1024 4770608B 		.word	-1956614073
 3409 1028 E000ED00 		.word	15532256
ARM GAS  /tmp/ccnMLrqE.s 			page 79


 3410 102c 40021000 		.word	1049152
 3411 1030 D034F8DF 		.word	-537381680
 3412 1034 E0032100 		.word	2163680
 3413 1038 585B4B0C 		.word	206265176
 3414 103c 31045043 		.word	1129317425
 3415 1040 4B0C480B 		.word	189271115
 3416 1044 429A1842 		.word	1108908610
 3417 1048 4A0BD3F6 		.word	-153941174
 3418 104c 2300E002 		.word	48234531
 3419 1050 3B04F842 		.word	1123550267
 3420 1054 429A4B09 		.word	155949634
 3421 1058 F7FFD3F9 		.word	-103546889
 3422 105c F000FFC5 		.word	-973143824
 3423 1060 F7FFF82D 		.word	771293175
 3424 1064 E7FEFF81 		.word	-2113929497
 3425 1068 20018000 		.word	8388896
 3426 106c 080012B8 		.word	-1206779896
 3427 1070 20000000 		.word	32
 3428 1074 20000440 		.word	1074004000
 3429 1078 20000440 		.word	1074004000
 3430 107c 20000484 		.word	-2080112608
 3431 1080 0000E7FE 		.word	-18415616
 3432 1084 46012300 		.word	2294086
 3433 1088 4618461A 		.word	440801350
 3434 108c B88AF000 		.word	15764152
 3435 1090 4B08B538 		.word	951388235
 3436 1094 1B5B4D08 		.word	139287323
 3437 1098 D007109C 		.word	-1676671024
 3438 109c 441D3B04 		.word	70982980
 3439 10a0 F8553C01 		.word	20731384
 3440 10a4 47983904 		.word	70883399
 3441 10a8 D1F92C00 		.word	2947537
 3442 10ac 4038E8BD 		.word	-1108854720
 3443 10b0 B8D0F000 		.word	15782072
 3444 10b4 080012B4 		.word	-1273888760
 3445 10b8 080012B0 		.word	-1340997624
 3446 10bc 4E0DB570 		.word	1890913614
 3447 10c0 1B764D0D 		.word	223180315
 3448 10c4 D00610B6 		.word	-1240463664
 3449 10c8 F8552400 		.word	2381304
 3450 10cc 34013B04 		.word	70975796
 3451 10d0 42A64798 		.word	-1740134846
 3452 10d4 4E09D1F9 		.word	-103741106
 3453 10d8 1B764D09 		.word	156071451
 3454 10dc F8B4F000 		.word	15774968
 3455 10e0 D00610B6 		.word	-1240463664
 3456 10e4 F8552400 		.word	2381304
 3457 10e8 34013B04 		.word	70975796
 3458 10ec 42A64798 		.word	-1740134846
 3459 10f0 BD70D1F9 		.word	-103714627
 3460 10f4 080012A8 		.word	-1475215352
 3461 10f8 080012A8 		.word	-1475215352
 3462 10fc 080012B0 		.word	-1340997624
 3463 1100 080012A8 		.word	-1475215352
 3464 1104 0786B4F0 		.word	-256604665
 3465 1108 1E54D046 		.word	1188058142
 3466 110c D03C2A00 		.word	2768080
ARM GAS  /tmp/ccnMLrqE.s 			page 80


 3467 1110 4603B2CA 		.word	-894303418
 3468 1114 3C01E001 		.word	31457596
 3469 1118 F803D337 		.word	936575992
 3470 111c 079D2B01 		.word	19635463
 3471 1120 2C03D1F9 		.word	-103742676
 3472 1124 B2CDD92A 		.word	718917042
 3473 1128 2505EA45 		.word	1172964645
 3474 112c EA452C0F 		.word	254559722
 3475 1130 D9344505 		.word	88421593
 3476 1134 0210F1A4 		.word	-1527705598
 3477 1138 0C0FF022 		.word	586157836
 3478 113c 0720F103 		.word	66134023
 3479 1140 44670916 		.word	369715012
 3480 1144 0210F103 		.word	66129922
 3481 1148 5504E942 		.word	1122567253
 3482 114c 5502E942 		.word	1122566741
 3483 1150 42BA3210 		.word	271759938
 3484 1154 1C72D1F8 		.word	-120491492
 3485 1158 0F0CF014 		.word	351276047
 3486 115c 1202EB03 		.word	65733138
 3487 1160 060FF004 		.word	82841350
 3488 1164 1F33D013 		.word	332411679
 3489 1168 0303F023 		.word	602931971
 3490 116c 44133304 		.word	70456132
 3491 1170 5B04F842 		.word	1123550299
 3492 1174 D1FB4293 		.word	-1824326703
 3493 1178 0403F006 		.word	116392708
 3494 117c B2CAB12C 		.word	749849266
 3495 1180 F803441C 		.word	474219512
 3496 1184 429C2B01 		.word	19635266
 3497 1188 BCF0D1FB 		.word	-70127428
 3498 118c 46344770 		.word	1883714630
 3499 1190 2C004613 		.word	323354668
 3500 1194 E7F8D1F3 		.word	-204343065
 3501 1198 46034614 		.word	340132678
 3502 119c 461AE7C1 		.word	-1041819066
 3503 11a0 E7E04626 		.word	642179303
 3504 11a4 47F0E92D 		.word	770306119
 3505 11a8 A07CF8DF 		.word	-537363296
 3506 11ac F8DA4606 		.word	105306872
 3507 11b0 46980000 		.word	38982
 3508 11b4 4691460F 		.word	256282950
 3509 11b8 F842F000 		.word	15745784
 3510 11bc 681B4B19 		.word	424352616
 3511 11c0 4148F8D3 		.word	-738703295
 3512 11c4 6865B324 		.word	615736680
 3513 11c8 0000F8DA 		.word	-621281280
 3514 11cc DC242D1F 		.word	523052252
 3515 11d0 1CABB94E 		.word	1320790812
 3516 11d4 60653501 		.word	20276576
 3517 11d8 7023F844 		.word	1157112688
 3518 11dc F832F000 		.word	15741688
 3519 11e0 E8BD2000 		.word	2145768
 3520 11e4 EB0487F0 		.word	-259586837
 3521 11e8 22010385 		.word	-2063400670
 3522 11ec 9088F8C3 		.word	-1007122288
 3523 11f0 1188F8D4 		.word	-721909743
ARM GAS  /tmp/ccnMLrqE.s 			page 81


 3524 11f4 431140AA 		.word	-1438641853
 3525 11f8 F8C42E02 		.word	36619512
 3526 11fc F8C31188 		.word	-2012101640
 3527 1200 D1E68108 		.word	142730961
 3528 1204 318CF8D4 		.word	-721908687
 3529 1208 F8C4431A 		.word	440648952
 3530 120c E7E0218C 		.word	-1943936793
 3531 1210 74A6F503 		.word	66430580
 3532 1214 4148F8C3 		.word	-1007138751
 3533 1218 F000E7D5 		.word	-706281232
 3534 121c F04FF813 		.word	335040496
 3535 1220 E7DE30FF 		.word	-13574425
 3536 1224 080012A0 		.word	-1609433080
 3537 1228 20000438 		.word	939786272
 3538 122c B1134B02 		.word	38474673
 3539 1230 F7FF4802 		.word	38338551
 3540 1234 4770BF27 		.word	666857543
 3541 1238 00000000 		.word	0
 3542 123c 08001091 		.word	-1861222392
 3543 1240 BF004770 		.word	1883701439
 3544 1244 BF004770 		.word	1883701439
 3545 1248 BF00B5F8 		.word	-122355521
 3546 124c BC08BCF8 		.word	-121894724
 3547 1250 4770469E 		.word	-1639550905
 3548 1254 BF00B5F8 		.word	-122355521
 3549 1258 BC08BCF8 		.word	-121894724
 3550 125c 4770469E 		.word	-1639550905
 3551 1260 00000000 		.word	0
 3552 1264 00000000 		.word	0
 3553 1268 04030201 		.word	16909060
 3554 126c 09080706 		.word	101124105
 3555 1270 000186A0 		.word	-1601830656
 3556 1274 00030D40 		.word	1074594560
 3557 1278 00061A80 		.word	-2145778176
 3558 127c 000C3500 		.word	3476480
 3559 1280 000F4240 		.word	1078071040
 3560 1284 001E8480 		.word	-2138825216
 3561 1288 003D0900 		.word	605440
 3562 128c 007A1200 		.word	1210880
 3563 1290 00F42400 		.word	2421760
 3564 1294 016E3600 		.word	3567105
 3565 1298 01E84800 		.word	4777985
 3566 129c 02DC6C00 		.word	7134210
 3567 12a0 20000010 		.word	268435488
 3568 12a4 00000000 		.word	0
 3569 12a8 0800122D 		.word	756154376
 3570 12ac 080001AD 		.word	-1392443384
 3571 12b0 08000189 		.word	-1996423160
 3572 12b4 00000000 		.word	0
 3573 12b8 00000001 		.word	16777216
 3574 12bc 00000010 		.word	268435456
 3575 12c0 003D0900 		.word	605440
 3576 12c4 00000000 		.word	0
 3577 12c8 00000000 		.word	0
 3578 12cc 200002FC 		.word	-66977760
 3579 12d0 20000364 		.word	1677918240
 3580 12d4 200003CC 		.word	-872218592
ARM GAS  /tmp/ccnMLrqE.s 			page 82


 3581 12d8 00000000 		.word	0
 3582 12dc 00000000 		.word	0
 3583 12e0 00000000 		.word	0
 3584 12e4 00000000 		.word	0
 3585 12e8 00000000 		.word	0
 3586 12ec 00000000 		.word	0
 3587 12f0 00000000 		.word	0
 3588 12f4 00000000 		.word	0
 3589 12f8 00000000 		.word	0
 3590 12fc 00000000 		.word	0
 3591 1300 00000000 		.word	0
 3592 1304 00000000 		.word	0
 3593 1308 00000000 		.word	0
 3594 130c 00000000 		.word	0
 3595 1310 00000000 		.word	0
 3596 1314 00000000 		.word	0
 3597 1318 00000000 		.word	0
 3598 131c 00000000 		.word	0
 3599 1320 00000000 		.word	0
 3600 1324 00000000 		.word	0
 3601 1328 00000000 		.word	0
 3602 132c 00000000 		.word	0
 3603 1330 00000000 		.word	0
 3604 1334 00000000 		.word	0
 3605 1338 00000000 		.word	0
 3606 133c 00000000 		.word	0
 3607 1340 00000000 		.word	0
 3608 1344 00000000 		.word	0
 3609 1348 00000000 		.word	0
 3610 134c 00000000 		.word	0
 3611 1350 00000000 		.word	0
 3612 1354 00000000 		.word	0
 3613 1358 00000000 		.word	0
 3614 135c 00000000 		.word	0
 3615 1360 00000000 		.word	0
 3616 1364 00000000 		.word	0
 3617 1368 00000000 		.word	0
 3618 136c 00000000 		.word	0
 3619 1370 00000001 		.word	16777216
 3620 1374 00000000 		.word	0
 3621 1378 ABCD330E 		.word	238276011
 3622 137c E66D1234 		.word	873623014
 3623 1380 0005DEEC 		.word	-320994048
 3624 1384 0000000B 		.word	184549376
 3625 1388 00000000 		.word	0
 3626 138c 00000000 		.word	0
 3627 1390 00000000 		.word	0
 3628 1394 00000000 		.word	0
 3629 1398 00000000 		.word	0
 3630 139c 00000000 		.word	0
 3631 13a0 00000000 		.word	0
 3632 13a4 00000000 		.word	0
 3633 13a8 00000000 		.word	0
 3634 13ac 00000000 		.word	0
 3635 13b0 00000000 		.word	0
 3636 13b4 00000000 		.word	0
 3637 13b8 00000000 		.word	0
ARM GAS  /tmp/ccnMLrqE.s 			page 83


 3638 13bc 00000000 		.word	0
 3639 13c0 00000000 		.word	0
 3640 13c4 00000000 		.word	0
 3641 13c8 00000000 		.word	0
 3642 13cc 00000000 		.word	0
 3643 13d0 00000000 		.word	0
 3644 13d4 00000000 		.word	0
 3645 13d8 00000000 		.word	0
 3646 13dc 00000000 		.word	0
 3647 13e0 00000000 		.word	0
 3648 13e4 00000000 		.word	0
 3649 13e8 00000000 		.word	0
 3650 13ec 00000000 		.word	0
 3651 13f0 00000000 		.word	0
 3652 13f4 00000000 		.word	0
 3653 13f8 00000000 		.word	0
 3654 13fc 00000000 		.word	0
 3655 1400 00000000 		.word	0
 3656 1404 00000000 		.word	0
 3657 1408 00000000 		.word	0
 3658 140c 00000000 		.word	0
 3659 1410 00000000 		.word	0
 3660 1414 00000000 		.word	0
 3661 1418 00000000 		.word	0
 3662 141c 00000000 		.word	0
 3663 1420 00000000 		.word	0
 3664 1424 00000000 		.word	0
 3665 1428 00000000 		.word	0
 3666 142c 00000000 		.word	0
 3667 1430 00000000 		.word	0
 3668 1434 00000000 		.word	0
 3669 1438 00000000 		.word	0
 3670 143c 00000000 		.word	0
 3671 1440 00000000 		.word	0
 3672 1444 00000000 		.word	0
 3673 1448 00000000 		.word	0
 3674 144c 00000000 		.word	0
 3675 1450 00000000 		.word	0
 3676 1454 00000000 		.word	0
 3677 1458 00000000 		.word	0
 3678 145c 00000000 		.word	0
 3679 1460 00000000 		.word	0
 3680 1464 00000000 		.word	0
 3681 1468 00000000 		.word	0
 3682 146c 00000000 		.word	0
 3683 1470 00000000 		.word	0
 3684 1474 00000000 		.word	0
 3685 1478 00000000 		.word	0
 3686 147c 00000000 		.word	0
 3687 1480 00000000 		.word	0
 3688 1484 00000000 		.word	0
 3689 1488 00000000 		.word	0
 3690 148c 00000000 		.word	0
 3691 1490 00000000 		.word	0
 3692 1494 00000000 		.word	0
 3693 1498 00000000 		.word	0
 3694 149c 00000000 		.word	0
ARM GAS  /tmp/ccnMLrqE.s 			page 84


 3695 14a0 00000000 		.word	0
 3696 14a4 00000000 		.word	0
 3697 14a8 00000000 		.word	0
 3698 14ac 00000000 		.word	0
 3699 14b0 00000000 		.word	0
 3700 14b4 00000000 		.word	0
 3701 14b8 00000000 		.word	0
 3702 14bc 00000000 		.word	0
 3703 14c0 00000000 		.word	0
 3704 14c4 00000000 		.word	0
 3705 14c8 00000000 		.word	0
 3706 14cc 00000000 		.word	0
 3707 14d0 00000000 		.word	0
 3708 14d4 00000000 		.word	0
 3709 14d8 00000000 		.word	0
 3710 14dc 00000000 		.word	0
 3711 14e0 00000000 		.word	0
 3712 14e4 00000000 		.word	0
 3713 14e8 00000000 		.word	0
 3714 14ec 00000000 		.word	0
 3715 14f0 00000000 		.word	0
 3716 14f4 00000000 		.word	0
 3717 14f8 00000000 		.word	0
 3718 14fc 00000000 		.word	0
 3719 1500 00000000 		.word	0
 3720 1504 00000000 		.word	0
 3721 1508 00000000 		.word	0
 3722 150c 00000000 		.word	0
 3723 1510 00000000 		.word	0
 3724 1514 00000000 		.word	0
 3725 1518 00000000 		.word	0
 3726 151c 00000000 		.word	0
 3727 1520 00000000 		.word	0
 3728 1524 00000000 		.word	0
 3729 1528 00000000 		.word	0
 3730 152c 00000000 		.word	0
 3731 1530 00000000 		.word	0
 3732 1534 00000000 		.word	0
 3733 1538 00000000 		.word	0
 3734 153c 00000000 		.word	0
 3735 1540 00000000 		.word	0
 3736 1544 00000000 		.word	0
 3737 1548 00000000 		.word	0
 3738 154c 00000000 		.word	0
 3739 1550 00000000 		.word	0
 3740 1554 00000000 		.word	0
 3741 1558 00000000 		.word	0
 3742 155c 00000000 		.word	0
 3743 1560 00000000 		.word	0
 3744 1564 00000000 		.word	0
 3745 1568 00000000 		.word	0
 3746 156c 00000000 		.word	0
 3747 1570 00000000 		.word	0
 3748 1574 00000000 		.word	0
 3749 1578 00000000 		.word	0
 3750 157c 00000000 		.word	0
 3751 1580 00000000 		.word	0
ARM GAS  /tmp/ccnMLrqE.s 			page 85


 3752 1584 00000000 		.word	0
 3753 1588 00000000 		.word	0
 3754 158c 00000000 		.word	0
 3755 1590 00000000 		.word	0
 3756 1594 00000000 		.word	0
 3757 1598 00000000 		.word	0
 3758 159c 00000000 		.word	0
 3759 15a0 00000000 		.word	0
 3760 15a4 00000000 		.word	0
 3761 15a8 00000000 		.word	0
 3762 15ac 00000000 		.word	0
 3763 15b0 00000000 		.word	0
 3764 15b4 00000000 		.word	0
 3765 15b8 00000000 		.word	0
 3766 15bc 00000000 		.word	0
 3767 15c0 00000000 		.word	0
 3768 15c4 00000000 		.word	0
 3769 15c8 00000000 		.word	0
 3770 15cc 00000000 		.word	0
 3771 15d0 00000000 		.word	0
 3772 15d4 00000000 		.word	0
 3773 15d8 00000000 		.word	0
 3774 15dc 00000000 		.word	0
 3775 15e0 00000000 		.word	0
 3776 15e4 00000000 		.word	0
 3777 15e8 00000000 		.word	0
 3778 15ec 00000000 		.word	0
 3779 15f0 00000000 		.word	0
 3780 15f4 00000000 		.word	0
 3781 15f8 00000000 		.word	0
 3782 15fc 00000000 		.word	0
 3783 1600 00000000 		.word	0
 3784 1604 00000000 		.word	0
 3785 1608 00000000 		.word	0
 3786 160c 00000000 		.word	0
 3787 1610 00000000 		.word	0
 3788 1614 00000000 		.word	0
 3789 1618 00000000 		.word	0
 3790 161c 00000000 		.word	0
 3791 1620 00000000 		.word	0
 3792 1624 00000000 		.word	0
 3793 1628 00000000 		.word	0
 3794 162c 00000000 		.word	0
 3795 1630 00000000 		.word	0
 3796 1634 00000000 		.word	0
 3797 1638 00000000 		.word	0
 3798 163c 00000000 		.word	0
 3799 1640 00000000 		.word	0
 3800 1644 00000000 		.word	0
 3801 1648 00000000 		.word	0
 3802 164c 00000000 		.word	0
 3803 1650 00000000 		.word	0
 3804 1654 00000000 		.word	0
 3805 1658 00000000 		.word	0
 3806 165c 00000000 		.word	0
 3807 1660 00000000 		.word	0
 3808 1664 00000000 		.word	0
ARM GAS  /tmp/ccnMLrqE.s 			page 86


 3809 1668 00000000 		.word	0
 3810 166c 00000000 		.word	0
 3811 1670 00000000 		.word	0
 3812 1674 00000000 		.word	0
 3813 1678 00000000 		.word	0
 3814 167c 00000000 		.word	0
 3815 1680 00000000 		.word	0
 3816 1684 00000000 		.word	0
 3817 1688 00000000 		.word	0
 3818 168c 00000000 		.word	0
 3819 1690 00000000 		.word	0
 3820 1694 00000000 		.word	0
 3821 1698 00000000 		.word	0
 3822 169c 00000000 		.word	0
 3823 16a0 00000000 		.word	0
 3824 16a4 00000000 		.word	0
 3825 16a8 00000000 		.word	0
 3826 16ac 00000000 		.word	0
 3827 16b0 00000000 		.word	0
 3828 16b4 00000000 		.word	0
 3829 16b8 00000000 		.word	0
 3830 16bc 00000000 		.word	0
 3831 16c0 00000000 		.word	0
 3832 16c4 00000000 		.word	0
 3833 16c8 00000000 		.word	0
 3834 16cc 00000000 		.word	0
 3835 16d0 00000000 		.word	0
 3836 16d4 00000000 		.word	0
 3837 16d8 00000000 		.word	0
 3838 16dc 00000000 		.word	0
 3839 16e0 00000000 		.word	0
 3840 16e4 00000000 		.word	0
 3841 16e8 00000000 		.word	0
 3842 16ec 00000000 		.word	0
 3843 16f0 20000460 		.word	1610874912
 3844 16f4 00000000 		.word	0
 3845              		.text
 3846              	.Letext0:
 3847              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 3848              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 3849              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 3850              		.file 5 "/usr/lib/gcc/arm-none-eabi/10.1.0/include/stddef.h"
 3851              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 3852              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 3853              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 3854              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 3855              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 3856              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 3857              		.file 12 "Inc/parsed_hex.h"
 3858              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 3859              		.file 14 "/usr/arm-none-eabi/include/stdio.h"
 3860              		.file 15 "/usr/arm-none-eabi/include/string.h"
 3861              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 3862              		.file 17 "<built-in>"
ARM GAS  /tmp/ccnMLrqE.s 			page 87


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccnMLrqE.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccnMLrqE.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccnMLrqE.s:61     .text.MX_GPIO_Init:000000000000001c $d
     /tmp/ccnMLrqE.s:66     .rodata.Error_Handler.str1.4:0000000000000000 $d
     /tmp/ccnMLrqE.s:70     .text.Error_Handler:0000000000000000 $t
     /tmp/ccnMLrqE.s:77     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccnMLrqE.s:103    .text.Error_Handler:0000000000000014 $d
     /tmp/ccnMLrqE.s:109    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccnMLrqE.s:115    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccnMLrqE.s:191    .text.MX_SPI1_Init:0000000000000040 $d
     /tmp/ccnMLrqE.s:197    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccnMLrqE.s:203    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccnMLrqE.s:264    .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/ccnMLrqE.s:270    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccnMLrqE.s:277    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccnMLrqE.s:431    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccnMLrqE.s:484    .text.main:0000000000000000 $t
     /tmp/ccnMLrqE.s:491    .text.main:0000000000000000 main
     /tmp/ccnMLrqE.s:1026   .text.main:00000000000002ac $d
     /tmp/ccnMLrqE.s:2374   .data.arr_dd:0000000000000000 arr_dd
     /tmp/ccnMLrqE.s:1043   .text.main:00000000000002d4 $t
     /tmp/ccnMLrqE.s:1531   .text.main:00000000000005cc $d
     /tmp/ccnMLrqE.s:1545   .text.main:0000000000000600 $t
     /tmp/ccnMLrqE.s:1607   .text.main:000000000000062c $d
     /tmp/ccnMLrqE.s:1627   .bss.huart2:0000000000000000 huart2
     /tmp/ccnMLrqE.s:1620   .bss.hspi1:0000000000000000 hspi1
     /tmp/ccnMLrqE.s:1634   .data.arr_aaaa:0000000000000000 arr_aaaa
     /tmp/ccnMLrqE.s:1616   .bss.hspi1:0000000000000000 $d
     /tmp/ccnMLrqE.s:1623   .bss.huart2:0000000000000000 $d
     /tmp/ccnMLrqE.s:1630   .data.arr_aaaa:0000000000000000 $d
     /tmp/ccnMLrqE.s:2371   .data.arr_dd:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
HAL_SPI_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_Init
HAL_SPI_TransmitReceive
sprintf
strlen
HAL_Delay
